{
    "@metadata.author": "Ellen Spertus <ellen.spertus@gmail.com>",
    "@metadata.lastupdated": "2019-12-17 16:54:39.136461",
    "@metadata.locale": "de",
    "@metadata.messagedocumentation": "qqq",
    "Blockly.Msg.UNDO": "Rückgängig",
    "Blockly.Msg.REDO": "Wiederherstellen",
    "Blockly.Msg.CLEAN_UP": "Blöcke aufräumen",
    "Blockly.Msg.DUPLICATE_BLOCK": "Duplizieren",
    "Blockly.Msg.REMOVE_COMMENT": "Kommentar entfernen",
    "Blockly.Msg.ADD_COMMENT": "Kommentar hinzufügen",
    "Blockly.Msg.EXTERNAL_INPUTS": "Eingangsblöcke zeilenweise darstellen",
    "Blockly.Msg.INLINE_INPUTS": "Eingangsblöcke einzeilig darstellen",
    "Blockly.Msg.HORIZONTAL_PARAMETERS": "Parameter horizontal anordnen",
    "Blockly.Msg.VERTICAL_PARAMETERS": "Parameter vertikal anordnen",
    "Blockly.Msg.CONFIRM_DELETE": "Löschen bestätigen",
    "Blockly.Msg.DELETE_ALL_BLOCKS": "Alle %1 Blöcke löschen?",
    "Blockly.Msg.DELETE_BLOCK": "Block löschen",
    "Blockly.Msg.DELETE_X_BLOCKS": "%1 Blöcke löschen",
    "Blockly.Msg.COLLAPSE_BLOCK": "Block einklappen",
    "Blockly.Msg.EXPAND_BLOCK": "Block ausklappen",
    "Blockly.Msg.DISABLE_BLOCK": "Block deaktivieren",
    "Blockly.Msg.ENABLE_BLOCK": "Block aktivieren",
    "Blockly.Msg.HELP": "Hilfe",
    "Blockly.Msg.EXPORT_IMAGE": "Blöcke als Bild herunterladen",
    "Blockly.Msg.COLLAPSE_ALL": "Blöcke einklappen",
    "Blockly.Msg.EXPAND_ALL": "Blöcke ausklappen",
    "Blockly.Msg.ARRANGE_H": "Blöcke horizontal anordnen",
    "Blockly.Msg.ARRANGE_V": "Blöcke vertikal anordnen",
    "Blockly.Msg.ARRANGE_S": "Blöcke diagonal anordnen",
    "Blockly.Msg.SORT_W": "Blöcke nach Breite sortieren",
    "Blockly.Msg.SORT_H": "Blöcke nach Höhe sortieren",
    "Blockly.Msg.SORT_C": "Blöcke nach Kategorie sortieren",
    "Blockly.Msg.COPY_TO_BACKPACK": "Zum Rucksack hinzufügen",
    "Blockly.Msg.COPY_ALLBLOCKS": "Alle Blöcke in den Rucksack kopieren",
    "Blockly.Msg.REMOVE_FROM_BACKPACK": "Aus Rucksack entfernen",
    "Blockly.Msg.BACKPACK_GET": "Alle Blöcke aus dem Rucksack einfügen",
    "Blockly.Msg.BACKPACK_EMPTY": "Rucksack leeren",
    "Blockly.Msg.BACKPACK_CONFIRM_EMPTY": "Bist Du dir sicher, dass Du den Rucksack leeren möchtest?",
    "Blockly.Msg.BACKPACK_DOC_TITLE": "Rucksackinformationen",
    "Blockly.Msg.SHOW_BACKPACK_DOCUMENTATION": "Rucksackdokumentation anzeigen",
    "Blockly.Msg.BACKPACK_DOCUMENTATION": "Der Rucksack ist eine Kopieren-/ Einfügen-Funktion. Sie erlaubt es, Blöcke in einem Projekt oder einem Screen zu kopieren und in ein anderes Projekt oder einem anderen Screen einzufügen. Um zu kopieren, kannst Du die Blöcke per Drag und Drop in den Rucksack legen. Um sie einzufügen, klicke auf das Rucksacksymbol und lege per Drag und Drop die Blöcke im Arbeitsbereich ab.</p><p>Falls Du den MIT App Inventor verlässt und sich Blöcke in Deinem Rucksack befinden, werden sie noch dort sein, wenn Du dich das nächste Mal einloggst.</p><p>Für eine weiterführende Dokumentation und ein Anleitungsvideo, besuche:</p><p><a href='http://ai2.appinventor.mit.edu/reference/other/backpack.html' target='_blank'>http://ai2.appinventor.mit.edu/reference/other/backpack.html</a>",
    "Blockly.Msg.ENABLE_GRID": "Gitternetz im Arbeitsbereich einblenden",
    "Blockly.Msg.DISABLE_GRID": "Gitternetz im Arbeitsbereich ausblenden",
    "Blockly.Msg.ENABLE_SNAPPING": "Blöcke am Gitternetz ausrichten",
    "Blockly.Msg.DISABLE_SNAPPING": "Blöcke nicht am Gitternetz ausrichten",
    "Blockly.Msg.CHANGE_VALUE_TITLE": "Wert ändern:",
    "Blockly.Msg.NEW_VARIABLE": "Neue Variable...",
    "Blockly.Msg.NEW_VARIABLE_TITLE": "Neuer Variablenname:",
    "Blockly.Msg.RENAME_VARIABLE": "Variable umbenennen...",
    "Blockly.Msg.RENAME_VARIABLE_TITLE": "Alle '%1' Variablen umbenennen in:",
    "Blockly.Msg.VARIABLE_CATEGORY": "Variablen",
    "Blockly.Msg.PROCEDURE_CATEGORY": "Prozeduren",
    "Blockly.Msg.ERROR_BLOCK_CANNOT_BE_IN_DEFINTION": "Dieser Block verhindert das Initialisieren der Variable und muss durch eine Konstante ersetzt werden!",
    "Blockly.Msg.ERROR_SELECT_VALID_ITEM_FROM_DROPDOWN": "Wählen Sie einen gültigen Eintrag im Dropdownmenü!",
    "Blockly.Msg.ERROR_DUPLICATE_EVENT_HANDLER": "Diese Komponente existiert bereits und kann als Duplikat nicht ausgeführt werden!",
    "Blockly.Msg.ERROR_COMPONENT_DOES_NOT_EXIST": "Diese Komponente existiert nicht!",
    "Blockly.Msg.ERROR_BLOCK_IS_NOT_DEFINED": "Dieser Block ist nicht definiert. Er sollte gelöscht werden!",
    "Blockly.Msg.ERROR_BREAK_ONLY_IN_LOOP": "Der Break-Block sollte nur innerhalb von Schleifen verwendet werden!",
    "Blockly.Msg.LANG_COLOUR_PICKER_TOOLTIP": "Zur Farbauswahl auf das Quadrat klicken.",
    "Blockly.Msg.LANG_COLOUR_BLACK": "schwarz",
    "Blockly.Msg.LANG_COLOUR_WHITE": "weiß",
    "Blockly.Msg.LANG_COLOUR_RED": "rot",
    "Blockly.Msg.LANG_COLOUR_PINK": "rosa",
    "Blockly.Msg.LANG_COLOUR_ORANGE": "orange",
    "Blockly.Msg.LANG_COLOUR_YELLOW": "gelb",
    "Blockly.Msg.LANG_COLOUR_GREEN": "grün",
    "Blockly.Msg.LANG_COLOUR_CYAN": "cyan",
    "Blockly.Msg.LANG_COLOUR_BLUE": "blau",
    "Blockly.Msg.LANG_COLOUR_MAGENTA": "magenta",
    "Blockly.Msg.LANG_COLOUR_LIGHT_GRAY": "hellgrau",
    "Blockly.Msg.LANG_COLOUR_DARK_GRAY": "dunkelgrau",
    "Blockly.Msg.LANG_COLOUR_GRAY": "grau",
    "Blockly.Msg.LANG_COLOUR_SPLIT_COLOUR": "Farbe zerlegen",
    "Blockly.Msg.LANG_COLOUR_SPLIT_COLOUR_TOOLTIP": "Eine Liste mit vier Elementen, welche die Rot-, Grün-, Blau- und Alpha-Komponenten  im Bereich 0 bis 255 darstellen.",
    "Blockly.Msg.LANG_COLOUR_MAKE_COLOUR": "Farbe erstellen",
    "Blockly.Msg.LANG_COLOUR_MAKE_COLOUR_TOOLTIP": "Erstellt eine Farbe mit den gegebenen Rot-, Grün-, Blau- und optionalen Alpha-Komponenten.",
    "Blockly.Msg.LANG_CATEGORY_CONTROLS": "Steuerung",
    "Blockly.Msg.LANG_CONTROLS_IF_TOOLTIP_1": "Falls eine Bedingung \"wahr\" (=true) ist, dann führe einige Anweisungen aus!",
    "Blockly.Msg.LANG_CONTROLS_IF_TOOLTIP_2": "Falls eine Bedingung \"wahr\" (=true) ist, dann führe den ersten Block Anweisungen aus, ansonsten führe den zweiten Block Anweisungen aus!",
    "Blockly.Msg.LANG_CONTROLS_IF_TOOLTIP_3": "Falls die erste Bedingung \"wahr\" (=true) ist, dann führe den ersten Block Anweisungen aus. Ansonsten, falls die zweite Bedingung \"wahr\" (=true) ist, führe den zweiten Block Anweisungen aus!",
    "Blockly.Msg.LANG_CONTROLS_IF_TOOLTIP_4": "Falls die erste Bedingung \"wahr\" (=true) ist, dann führe den ersten Block Anweisungen aus oder, falls die zweite Bedingung \"wahr\" (=true) ist, führe den zweiten Block Anweisungen aus! Falls keine der beiden Bedingungen \"wahr\" (=true) ist, dann führe den letzten Block Anweisungen aus!",
    "Blockly.Msg.LANG_CONTROLS_IF_MSG_IF": "falls",
    "Blockly.Msg.LANG_CONTROLS_IF_MSG_ELSEIF": "sonst, falls",
    "Blockly.Msg.LANG_CONTROLS_IF_MSG_ELSE": "sonst",
    "Blockly.Msg.LANG_CONTROLS_IF_MSG_THEN": "dann",
    "Blockly.Msg.LANG_CONTROLS_IF_IF_TITLE_IF": "falls",
    "Blockly.Msg.LANG_CONTROLS_IF_IF_TOOLTIP": "Sektionen hinzufügen, entfernen oder neu ordnen,\num diesen falls-Block neu zu konfigurieren.",
    "Blockly.Msg.LANG_CONTROLS_IF_ELSEIF_TITLE_ELSEIF": "sonst, falls",
    "Blockly.Msg.LANG_CONTROLS_IF_ELSEIF_TOOLTIP": "Dem Falls-Block eine Bedingung hinzufügen.",
    "Blockly.Msg.LANG_CONTROLS_IF_ELSE_TITLE_ELSE": "sonst",
    "Blockly.Msg.LANG_CONTROLS_IF_ELSE_TOOLTIP": "Eine sonst-Bedingung hinzufügen, welche einen Block Anweisungen ausführt, falls keine Bedingung zutrifft.",
    "Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_TITLE_REPEAT": "wiederhole",
    "Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_INPUT_DO": "mache",
    "Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_OPERATOR_WHILE": "solange",
    "Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_OPERATOR_UNTIL": "bis",
    "Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_TOOLTIP_WHILE": "Solange die Bedingung \"wahr\" (=true) ist, führe einen Block Anweisungen aus!",
    "Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL": "Solange die Bedingung \"falsch\" (=false) ist, führe einen Block Anweisungen aus!",
    "Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_TOOLTIP_1": "Solange der Test \"wahr\" (=true) ergibt, führe den Block Anweisungen in der 'mache'-Sektion aus!",
    "Blockly.Msg.LANG_CONTROLS_FOR_INPUT_WITH": "zähle",
    "Blockly.Msg.LANG_CONTROLS_FOR_INPUT_VAR": "x",
    "Blockly.Msg.LANG_CONTROLS_FOR_INPUT_FROM": "von",
    "Blockly.Msg.LANG_CONTROLS_FOR_INPUT_TO": "bis",
    "Blockly.Msg.LANG_CONTROLS_FOR_INPUT_DO": "mache",
    "Blockly.Msg.LANG_CONTROLS_FOR_TOOLTIP": "Zähle von einem Startwert bis zu einem Zielwert.\nSetze pro Zählvorgang die Variable '%1' auf die gezählte Zahl und führe dann einige Anweisungen aus.",
    "Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_ITEM": "für jede",
    "Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_VAR": "Zahl",
    "Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_START": "von",
    "Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_END": "bis",
    "Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_STEP": "um",
    "Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_DO": "mache",
    "Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_COLLAPSED_TEXT": "für eine Zahl im Bereich",
    "Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_COLLAPSED_PREFIX": "für ",
    "Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_COLLAPSED_SUFFIX": " im Bereich",
    "Blockly.Msg.LANG_CONTROLS_FORRANGE_TOOLTIP": "Führt die Anweisungen in der 'mache'-Sektion für jeden numerischen Wert im Bereich von Start bis Ende aus und erhöht den Wert jedes Mal. Benutze den gegebenen Variablennamen, um auf den aktuellen Wert zu verweisen.",
    "Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_ITEM": "für jedes",
    "Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_VAR": "Element",
    "Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_INLIST": "in der Liste",
    "Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_DO": "mache",
    "Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_COLLAPSED_TEXT": "für Element in der Liste",
    "Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_COLLAPSED_PREFIX": "für ",
    "Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_COLLAPSED_SUFFIX": " in der Liste",
    "Blockly.Msg.LANG_CONTROLS_FOREACH_TOOLTIP": "Führt die Anweisungen in der 'mache'-Sektion  für jedes Element in der Liste aus. Verwende den gegebenen Variablennamen, um auf das aktuelle Listenelement zu verweisen.",
    "Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_INPUT_OFLOOP": "Schleife",
    "Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK": "abbrechen",
    "Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE": "Fahre mit der nächsten Iteration fort!",
    "Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK": "Brich die aktuelle Schleife ab!",
    "Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE": "Ignoriere die restlichen Anweisungen dieser Schleife\nund fahre mit der nächsten Iteration fort!",
    "Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_WARNING": "Warnung:\nDieser Block darf nur innerhalb\neiner Schleife verwendet werden!",
    "Blockly.Msg.LANG_CONTROLS_WHILE_TITLE": "während",
    "Blockly.Msg.LANG_CONTROLS_WHILE_INPUT_TEST": "teste",
    "Blockly.Msg.LANG_CONTROLS_WHILE_INPUT_DO": "mache",
    "Blockly.Msg.LANG_CONTROLS_WHILE_COLLAPSED_TEXT": "während",
    "Blockly.Msg.LANG_CONTROLS_WHILE_TOOLTIP": "Führt die Anweisungen der 'mache'-Sektion aus, solange der Test \"wahr\" (=true) ergibt.",
    "Blockly.Msg.LANG_CONTROLS_CHOOSE_TITLE": "falls",
    "Blockly.Msg.LANG_CONTROLS_CHOOSE_INPUT_THEN_RETURN": "dann",
    "Blockly.Msg.LANG_CONTROLS_CHOOSE_INPUT_ELSE_RETURN": "sonst",
    "Blockly.Msg.LANG_CONTROLS_CHOOSE_COLLAPSED_TEXT": "falls",
    "Blockly.Msg.LANG_CONTROLS_CHOOSE_TOOLTIP": "Falls die getestete Bedingung \"wahr\" (=true) ist, gib das Ergebnis der Auswertung des Ausdrucks, welcher in der 'dann'-Sektion eingefügt ist, zurück, ansonsten gib das Resultat der Auswertung des Ausdrucks, welcher in der 'sonst'-Sektion eingefügt ist, zurück. Es wird maximal ein Ausdruck der Rückgabesektionen ausgewertet.",
    "Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_INPUT_DO": "mache",
    "Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_INPUT_RETURN": "Ergebnis",
    "Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_TOOLTIP": "Führt die Blöcke in 'mache' aus und gibt eine Anweisung zurück. Nützlich, wenn eine Prozedur ausgeführt werden soll bevor ein Wert einer Variable zurückgegeben wird.",
    "Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_COLLAPSED_TEXT": "mache/ Ergebnis",
    "Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_TITLE": "mache/ Ergebnis",
    "Blockly.Msg.LANG_CONTROLS_EVAL_BUT_IGNORE_TITLE": "auswerten, aber Ergebnis ignorieren",
    "Blockly.Msg.LANG_CONTROLS_EVAL_BUT_COLLAPSED_TEXT": "auswerten, aber ignorieren",
    "Blockly.Msg.LANG_CONTROLS_EVAL_BUT_IGNORE_TOOLTIP": "Führt den verbundenen Codeblock aus und ignoriert den zurückgegebenen Wert (falls vorhanden). Nützlich, wenn eine Prozedur aufgerufen werden soll, die einen Rückgabewert hat, der nicht benötigt wird.",
    "Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_TITLE": "weiteren Bildschirm öffnen",
    "Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_INPUT_SCREENNAME": "bildschirmName",
    "Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_COLLAPSED_TEXT": "Bildschirm öffnen",
    "Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_TOOLTIP": "Öffnet einen neuen Bildschirm in einer Multi-Bildschirm-App. Sollte nicht genutzt werden, um zu Bildschirm1 zurück zu kehren. Hierfür sollte der Bildschirm mit dem vorgesehenen Block geschlossen werden.",
    "Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_TITLE": "öffne einen weiteren Bildschirm mit startwert",
    "Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_INPUT_SCREENNAME": "bildschirmName",
    "Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_INPUT_STARTVALUE": "startWert",
    "Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_COLLAPSED_TEXT": "öffne Bildschirm mit Wert'Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_TOOLTIP = 'Öffnet einen neuen Bildschirm in einer Multi-Bildschirm-App und gibt den Startwert diesem Bildschirm weiter.",
    "Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_TITLE": "gib Startwert",
    "Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_INPUT_SCREENNAME": "bildschirmName",
    "Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_INPUT_STARTVALUE": "startwert",
    "Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_COLLAPSED_TEXT": "gib Startwert",
    "Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_TOOLTIP": "Gibt den Startwert, der diesem Bildschirm beim Öffnen weitergegeben wurde, zurück. Normalerweise wird der Startwert durch einen anderen Bildschirm des Multi-Bildschirm-App weitergegeben. Wenn kein Wert weitergegeben wurde, wird ein leerer Text zurückgegeben.",
    "Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_TITLE": "Bildschirm schließen",
    "Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_COLLAPSED_TEXT": "Bildschirm schließen",
    "Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_TOOLTIP": "Schließt den aktuellen Bildschirm",
    "Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_VALUE_TITLE": "Schließe Bildschirm mit Wert",
    "Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_VALUE_INPUT_RESULT": "Resultat",
    "Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_VALUE_COLLAPSED_TEXT": "Schließe Bildschirm mit Wert",
    "Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_VALUE_TOOLTIP": "Schliesst den aktuellen Bildschirm und gibt ein Resultat dem Bildschirm, der diesen Bildschirm geöffnet hat, zurück.",
    "Blockly.Msg.LANG_CONTROLS_CLOSE_APPLICATION_TITLE": "Applikation schließen",
    "Blockly.Msg.LANG_CONTROLS_CLOSE_APPLICATION_COLLAPSED_TEXT": "Applikation schließen",
    "Blockly.Msg.LANG_CONTROLS_CLOSE_APPLICATION_TOOLTIP": "Schließt alle Bildschirme in dieser App und stoppt die App.",
    "Blockly.Msg.LANG_CONTROLS_GET_PLAIN_START_TEXT_TITLE": "gib Starttext",
    "Blockly.Msg.LANG_CONTROLS_GET_PLAIN_START_TEXT_COLLAPSED_TEXT": "gib Starttext",
    "Blockly.Msg.LANG_CONTROLS_GET_PLAIN_START_TEXT_TOOLTIP": "Gibt den Klartext zurück, der diesem Bildschirm weitergegeben wurde, als er von einer anderen App gestartet wurde. Falls kein Wert weitergegeben wurde, wird ein leerer Text zurückgegeben. Für Multi-Bildschirm-Apps sollte gib Startwert statt gib Starttext verwendet werden.",
    "Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_PLAIN_TEXT_TITLE": "schließe Bildschirm mit Klartext",
    "Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_PLAIN_TEXT_INPUT_TEXT": "Text",
    "Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_PLAIN_TEXT_COLLAPSED_TEXT": "schließe Bildschirm mit Klartext",
    "Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_PLAIN_TEXT_TOOLTIP": "Schließt den aktuellen Bildschirm und gibt den Text der App zurück, die diesen Bildschirm geöffnet hat.   Dieser Befehl ist für das Zurückgeben von Text an Aktivitäten, die nicht im App Inventor sind. Der Befehl wird nicht für die Rückgabe an App Inventor Bildschirme verwendet. Für App Inventor Bildschirme, wie Multi-Bildschirm-Apps, sollte schliesse Bildschirm mit Wert statt schliesseScreen mit Klartext verwendet werden.",
    "Blockly.Msg.LANG_CONTROLS_BREAK_TITLE": "abbrechen",
    "Blockly.Msg.LANG_CONTROLS_BREAK_INPUT_TEXT": "Wert",
    "Blockly.Msg.LANG_CONTROLS_BREAK_COLLAPSED_TEXT": "abbrechen",
    "Blockly.Msg.LANG_CATEGORY_LOGIC": "Logik",
    "Blockly.Msg.LANG_LOGIC_COMPARE_TOOLTIP_EQ": "Testet, ob zwei Dinge gleich sind. \nDie Dinge, die verglichen werden, können irgendwelche Dinge sein, nicht nur Zahlen. \nZahlen werden gleich wie ihre gedruckte Form als Zeichenkette betrachtet. \nZum Beispiel ist die Zahl 0 gleich wie der Text '0'. Zudem sind zwei Zeichenketten, \ndie Zahlen repräsentieren, gleich, wenn die Zahlen gleich sind, zum Beispiel \n'1' ist gleich wie '01'.",
    "Blockly.Msg.LANG_LOGIC_COMPARE_TOOLTIP_NEQ": "Gibt wahr (true) zurück, falls die Eingaben nicht gleich sind.",
    "Blockly.Msg.LANG_LOGIC_COMPARE_TRANSLATED_NAME": "logik gleich",
    "Blockly.Msg.LANG_LOGIC_COMPARE_EQ": "=",
    "Blockly.Msg.LANG_LOGIC_COMPARE_NEQ": "≠",
    "Blockly.Msg.LANG_LOGIC_OPERATION_AND": "und",
    "Blockly.Msg.LANG_LOGIC_OPERATION_OR": "oder",
    "Blockly.Msg.LANG_LOGIC_OPERATION_TOOLTIP_AND": "Gibt wahr (true) zurück, falls alle Eingaben wahr sind.",
    "Blockly.Msg.LANG_LOGIC_OPERATION_TOOLTIP_OR": "Gibt wahr (true) zurück, falls irgendeine Eingabe wahr (true) ist.",
    "Blockly.Msg.LANG_LOGIC_NEGATE_INPUT_NOT": "nicht",
    "Blockly.Msg.LANG_LOGIC_NEGATE_TOOLTIP": "Gibt wahr (true) zurück, falls die Eingabe falsch (false) ist.\nGibt falsch (false) zurück, falls die Eingabe wahr (true) ist.",
    "Blockly.Msg.LANG_LOGIC_BOOLEAN_TRUE": "wahr",
    "Blockly.Msg.LANG_LOGIC_BOOLEAN_FALSE": "falsch",
    "Blockly.Msg.LANG_LOGIC_BOOLEAN_TOOLTIP_TRUE": "Gibt die Boolean wahr (true) zurück.",
    "Blockly.Msg.LANG_LOGIC_BOOLEAN_TOOLTIP_FALSE": "Gibt die Boolean falsch (false) zurück.",
    "Blockly.Msg.LANG_CATEGORY_MATH": "Mathematik",
    "Blockly.Msg.LANG_MATH_NUMBER_TOOLTIP": "Eine Zahl.",
    "Blockly.Msg.LANG_MATH_MUTATOR_ITEM_INPUT_NUMBER": "Zahl",
    "Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_EQ": "Gibt wahr (true) zurück, falls beide Zahlen gleich sind.",
    "Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_NEQ": "Gibt wahr (true) zurück, falls beide Zahlen nicht gleich sind.",
    "Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_LT": "Gibt wahr (true) zurück, falls die erste Zahl kleiner als\ndie zweite Zahl ist.",
    "Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_LTE": "Gibt wahr (true) zurück, falls die erste Zahl kleiner\noder gleich die zweite Zahl ist.",
    "Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_GT": "Gibt wahr (true) zurück, wenn die erste Zahl größer\nals die zweite Zahl ist.",
    "Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_GTE": "Gibt wahr (true) zurück, falls die erste Zahl größer\noder gleich die zweite Zahl ist.",
    "Blockly.Msg.LANG_MATH_COMPARE_EQ": "=",
    "Blockly.Msg.LANG_MATH_COMPARE_NEQ": "≠",
    "Blockly.Msg.LANG_MATH_COMPARE_LT": "<",
    "Blockly.Msg.LANG_MATH_COMPARE_LTE": "≤",
    "Blockly.Msg.LANG_MATH_COMPARE_GT": ">",
    "Blockly.Msg.LANG_MATH_COMPARE_GTE": "≥",
    "Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_ADD": "Gibt die Summe der beiden Zahlen zurück.",
    "Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_MINUS": "Gibt die Differenz der beiden Zahlen zurück.",
    "Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_MULTIPLY": "Gibt das Produkt der beiden Zahlen zurück.",
    "Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_DIVIDE": "Gibt den Quotient der beiden Zahlen zurück.",
    "Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_POWER": "Gibt das Resultat der ersten Zahl potenziert\nmit der zweiten Zahl zurück.",
    "Blockly.Msg.LANG_MATH_ARITHMETIC_ADD": "+",
    "Blockly.Msg.LANG_MATH_ARITHMETIC_MINUS": "-",
    "Blockly.Msg.LANG_MATH_ARITHMETIC_MULTIPLY": "*",
    "Blockly.Msg.LANG_MATH_ARITHMETIC_DIVIDE": "/",
    "Blockly.Msg.LANG_MATH_ARITHMETIC_POWER": "^",
    "Blockly.Msg.LANG_MATH_SINGLE_OP_ROOT": "Quadratwurzel",
    "Blockly.Msg.LANG_MATH_SINGLE_OP_ABSOLUTE": "Betrag",
    "Blockly.Msg.LANG_MATH_SINGLE_OP_NEG": "neg",
    "Blockly.Msg.LANG_MATH_SINGLE_OP_LN": "log",
    "Blockly.Msg.LANG_MATH_SINGLE_OP_EXP": "e^",
    "Blockly.Msg.LANG_MATH_SINGLE_TOOLTIP_ROOT": "Gibt die Quadratwurzel einer Zahl zurück.",
    "Blockly.Msg.LANG_MATH_SINGLE_TOOLTIP_ABS": "Gibt den Betrag einer Zahl zurück.",
    "Blockly.Msg.LANG_MATH_SINGLE_TOOLTIP_NEG": "Gibt die Negation einer Zahl zurück.",
    "Blockly.Msg.LANG_MATH_SINGLE_TOOLTIP_LN": "Gibt den natürlichen Logarithmus zurück, d.h. den Logarithmus zur Basis e (2.71828...)",
    "Blockly.Msg.LANG_MATH_SINGLE_TOOLTIP_EXP": "Gibt e (2.71828...) potenziert mit einer Zahl zurück.",
    "Blockly.Msg.LANG_MATH_ROUND_TOOLTIP_ROUND": "Eine Zahl auf- oder abrunden.",
    "Blockly.Msg.LANG_MATH_ROUND_TOOLTIP_CEILING": "Rundet die Eingabe auf die kleinste Ganzzahl,\ndie nicht kleiner als die Eingabe ist.",
    "Blockly.Msg.LANG_MATH_ROUND_TOOLTIP_FLOOR": "Rundet die Eingabe auf die größte Ganzzahl,\ndie nicht größer als die Eingabe ist.",
    "Blockly.Msg.LANG_MATH_ROUND_OPERATOR_ROUND": "runden",
    "Blockly.Msg.LANG_MATH_ROUND_OPERATOR_CEILING": "aufrunden",
    "Blockly.Msg.LANG_MATH_ROUND_OPERATOR_FLOOR": "abrunden",
    "Blockly.Msg.LANG_MATH_TRIG_SIN": "sin",
    "Blockly.Msg.LANG_MATH_TRIG_COS": "cos",
    "Blockly.Msg.LANG_MATH_TRIG_TAN": "tan",
    "Blockly.Msg.LANG_MATH_TRIG_ASIN": "arcsin",
    "Blockly.Msg.LANG_MATH_TRIG_ACOS": "arccos",
    "Blockly.Msg.LANG_MATH_TRIG_ATAN": "arctan",
    "Blockly.Msg.LANG_MATH_TRIG_ATAN2": "arctan2",
    "Blockly.Msg.LANG_MATH_TRIG_ATAN2_X": "x",
    "Blockly.Msg.LANG_MATH_TRIG_ATAN2_Y": "y",
    "Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_SIN": "Gibt den Sinus eines gegebenen Winkels in Grad an.",
    "Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_COS": "Gibt den Kosinus eines gegebenen Winkels in Grad an.",
    "Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_TAN": "Gibt den Tangens eines gegebenen Winkels in Grad an.",
    "Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_ASIN": "Gibt den Winkel anhand eines gegebenen Sinuswertes im\nBereich (-90,+90] Grad an.",
    "Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_ACOS": "Gibt den Winkel anhand eines gegebenen Kosinuswertes im\nBereich [0, 180) Grad an.",
    "Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_ATAN": "Gibt den Winkel anhand eines gegebenen Tangenswertes im\nBereich (-90, +90) Grad an.",
    "Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_ATAN2": "Gibt den Winkel anhand der gegebenen kartesischen Koordinaten im\nBereich (-180, +180] Grad an.",
    "Blockly.Msg.LANG_MATH_ONLIST_OPERATOR_MIN": "min",
    "Blockly.Msg.LANG_MATH_ONLIST_OPERATOR_MAX": "max",
    "Blockly.Msg.LANG_MATH_ONLIST_TOOLTIP_MIN": "Gibt das Kleinste der Argumente zurück.",
    "Blockly.Msg.LANG_MATH_ONLIST_TOOLTIP_MAX": "Gibt das Größte der Argumente zurück.",
    "Blockly.Msg.LANG_MATH_DIVIDE": "÷",
    "Blockly.Msg.LANG_MATH_DIVIDE_OPERATOR_MODULO": "Modulo von",
    "Blockly.Msg.LANG_MATH_DIVIDE_OPERATOR_REMAINDER": "Rest von",
    "Blockly.Msg.LANG_MATH_DIVIDE_OPERATOR_QUOTIENT": "Quotient von",
    "Blockly.Msg.LANG_MATH_DIVIDE_TOOLTIP_MODULO": "Gibt den Modulowert zurück.",
    "Blockly.Msg.LANG_MATH_DIVIDE_TOOLTIP_REMAINDER": "Gibt den Rest zurück.",
    "Blockly.Msg.LANG_MATH_DIVIDE_TOOLTIP_QUOTIENT": "Gibt den Quotienten zurück.",
    "Blockly.Msg.LANG_MATH_RANDOM_INT_TITLE_RANDOM": "zufällige Zahl",
    "Blockly.Msg.LANG_MATH_RANDOM_INT_INPUT_FROM": "zwischen",
    "Blockly.Msg.LANG_MATH_RANDOM_INT_INPUT_TO": "und",
    "Blockly.Msg.LANG_MATH_RANDOM_INT_INPUT": "zufällige Zahl zwischen %1 und %2",
    "Blockly.Msg.LANG_MATH_RANDOM_INT_TOOLTIP": "Gibt eine zufällige Ganzzahl zwischen der oberen Grenze\nund der unteren Grenze zurück. Die Grenzen werden zu einem Wert kleiner\nals 2^30 abgeschnitten.",
    "Blockly.Msg.LANG_MATH_RANDOM_FLOAT_TITLE_RANDOM": "zufälliger Bruch",
    "Blockly.Msg.LANG_MATH_RANDOM_FLOAT_TOOLTIP": "Gibt eine zufällige Zahl zwischen 0 und 1 zurück.",
    "Blockly.Msg.LANG_MATH_RANDOM_SEED_TITLE_RANDOM": "Setze einen zufälligen Anfangswert",
    "Blockly.Msg.LANG_MATH_RANDOM_SEED_INPUT_TO": "auf",
    "Blockly.Msg.LANG_MATH_RANDOM_SEED_TOOLTIP": "Definiert einen numerischen Anfangswert\nfür den Zufallszahlengenerator.",
    "Blockly.Msg.LANG_MATH_CONVERT_ANGLES_TITLE_CONVERT": "umwandeln",
    "Blockly.Msg.LANG_MATH_CONVERT_ANGLES_OP_RAD_TO_DEG": "Radiant in Grad",
    "Blockly.Msg.LANG_MATH_CONVERT_ANGLES_OP_DEG_TO_RAD": "Grad in Radiant",
    "Blockly.Msg.LANG_MATH_CONVERT_ANGLES_TOOLTIP_RAD_TO_DEG": "Gibt den Wert in Grad im Bereich \n0 bis 360 entsprechend dem Argument in Radiant zurück.",
    "Blockly.Msg.LANG_MATH_CONVERT_ANGLES_TOOLTIP_DEG_TO_RAD": "Gibt den Wert in Radiant im Bereich -π, +π entsprechend dem Argument in Grad zurück.",
    "Blockly.Msg.LANG_MATH_FORMAT_AS_DECIMAL_TITLE": "Formatiere als Dezimalzahl",
    "Blockly.Msg.LANG_MATH_FORMAT_AS_DECIMAL_INPUT_PLACES": "Stellen",
    "Blockly.Msg.LANG_MATH_FORMAT_AS_DECIMAL_INPUT": "Formatiere als Dezimalzahl Zahl %1 Stellen %2",
    "Blockly.Msg.LANG_MATH_FORMAT_AS_DECIMAL_TOOLTIP": "Gibt die Zahl formatiert als Dezimalzahl mit\nder definierten Anzahl Stellen zurück.",
    "Blockly.Msg.LANG_MATH_IS_A_NUMBER_INPUT_NUM": "ist Zahl?",
    "Blockly.Msg.LANG_MATH_IS_A_NUMBER_TOOLTIP": "Testet, ob etwas eine Zahl ist.",
    "Blockly.Msg.LANG_MATH_IS_A_DECIMAL_INPUT_NUM": "verwendet 10 als Basis?",
    "Blockly.Msg.LANG_MATH_IS_A_DECIMAL_TOOLTIP": "Testet, ob etwas eine Zeichenkette, die eine positive Zahl zur Basis 10 repräsentiert, ist.",
    "Blockly.Msg.LANG_MATH_IS_A_HEXADECIMAL_INPUT_NUM": "ist hexadezimal?",
    "Blockly.Msg.LANG_MATH_IS_A_HEXADECIMAL_TOOLTIP": "Testet, ob etwas eine Zeichenkette, die eine Hexadezimalzahl repräsentiert, ist.",
    "Blockly.Msg.LANG_MATH_IS_A_BINARY_INPUT_NUM": "ist binär?",
    "Blockly.Msg.LANG_MATH_IS_A_BINARY_TOOLTIP": "Testet, ob etwas eine Zeichenkette, die eine Binärzahl repräsentiert, ist.",
    "Blockly.Msg.LANG_MATH_CONVERT_NUMBER_TITLE_CONVERT": "Zahl konvertieren",
    "Blockly.Msg.LANG_MATH_CONVERT_NUMBER_OP_DEC_TO_HEX": "von dezimal zu hexadezimal",
    "Blockly.Msg.LANG_MATH_CONVERT_NUMBER_TOOLTIP_DEC_TO_HEX": "Nimmt eine positive Dezimalzahl und gibt eine Zeichenkette zurück, die der Zahl in hexadezimal entspricht",
    "Blockly.Msg.LANG_MATH_CONVERT_NUMBER_OP_HEX_TO_DEC": "von hexadezimal zu dezimal",
    "Blockly.Msg.LANG_MATH_CONVERT_NUMBER_TOOLTIP_HEX_TO_DEC": "Nimmt eine Zeichenkette, die eine Hexadezimalzahl repräsentiert, und gibt eine Zeichenkette zurück, die der Dezimalzahl der Zahl entspricht",
    "Blockly.Msg.LANG_MATH_CONVERT_NUMBER_OP_DEC_TO_BIN": "von dezimal zu binär",
    "Blockly.Msg.LANG_MATH_CONVERT_NUMBER_TOOLTIP_DEC_TO_BIN": "Nimmt eine positive Dezimalzahl und gibt eine Zeichenkette zurück, die der Zahl in binär entspricht",
    "Blockly.Msg.LANG_MATH_CONVERT_NUMBER_OP_BIN_TO_DEC": "von binär zu dezimal",
    "Blockly.Msg.LANG_MATH_CONVERT_NUMBER_TOOLTIP_BIN_TO_DEC": "Nimmt eine Zeichenkette, die eine Binärzahl repräsentiert, und gibt eine Zeichenkette zurück, die der Dezimalzahl der Zahl entspricht",
    "Blockly.Msg.LANG_CATEGORY_TEXT": "Text",
    "Blockly.Msg.LANG_TEXT_TEXT_TOOLTIP": "Ein Text.",
    "Blockly.Msg.LANG_TEXT_TEXT_LEFT_QUOTE": "\"",
    "Blockly.Msg.LANG_TEXT_TEXT_RIGHT_QUOTE": "\"",
    "Blockly.Msg.LANG_TEXT_JOIN_TITLE_CREATEWITH": "erstelle einen Text mit",
    "Blockly.Msg.LANG_TEXT_JOIN_TOOLTIP": "Fügt alle Eingaben an, um einen einzigen Text zu bilden.\nWenn es keine Eingaben gibt, wird ein leerer Text erstellt.",
    "Blockly.Msg.LANG_TEXT_JOIN_TITLE_JOIN": "verbinde",
    "Blockly.Msg.LANG_TEXT_JOIN_ITEM_TITLE_ITEM": "Zeichenkette",
    "Blockly.Msg.LANG_TEXT_JOIN_ITEM_TOOLTIP": "",
    "Blockly.Msg.LANG_TEXT_APPEND_TO": "an",
    "Blockly.Msg.LANG_TEXT_APPEND_APPENDTEXT": "Text anfügen",
    "Blockly.Msg.LANG_TEXT_APPEND_VARIABLE": "Element",
    "Blockly.Msg.LANG_TEXT_APPEND_TOOLTIP": "Text der Variable '%1' anfügen.",
    "Blockly.Msg.LANG_TEXT_LENGTH_INPUT_LENGTH": "Länge",
    "Blockly.Msg.LANG_TEXT_LENGTH_TOOLTIP": "Gibt eine Anzahl Buchstaben (inklusive Leerzeichen)\nim gegebenen Text zurück.",
    "Blockly.Msg.LANG_TEXT_ISEMPTY_INPUT_ISEMPTY": "ist leer?",
    "Blockly.Msg.LANG_TEXT_ISEMPTY_TOOLTIP": "Gibt \"wahr\" (=true) zurück, wenn die Länge des Textes\n0 ist, ansonsten \"falsch\" (=false).",
    "Blockly.Msg.LANG_TEXT_COMPARE_LT": " <",
    "Blockly.Msg.LANG_TEXT_COMPARE_EQUAL": "=",
    "Blockly.Msg.LANG_TEXT_COMPARE_NEQ": " ≠",
    "Blockly.Msg.LANG_TEXT_COMPARE_GT": " >",
    "Blockly.Msg.LANG_TEXT_COMPARE_INPUT_COMPARE": "Texte vergleichen",
    "Blockly.Msg.LANG_TEXT_COMPARE_TOOLTIP_LT": "Testet, ob text1 lexikographisch kleiner als text2 ist.\nWenn ein Text dem Präfix des anderen entspricht, wird der kürzere Text als\nkleiner betrachtet. Großbuchstaben haben Vorrang über Kleinbuchstaben.",
    "Blockly.Msg.LANG_TEXT_COMPARE_TOOLTIP_EQUAL": "Testet, ob zwei Texte identisch sind, d.h. die gleichen\nBuchstaben in der gleichen Reihenfolge haben. Das unterscheidet sich vom normalen =,\nwenn die Texte Zahlen sind: 123 und 0123 sind als Zahlen =\naber nicht Text =.",
    "Blockly.Msg.LANG_TEXT_COMPARE_TOOLTIP_GT": "Gibt an, ob Text1 lexikographisch größer als Text2 ist.\nWenn ein Text dem Präfix des anderen entspricht, wird der kürzere Text als\nkleiner betrachtet. Großbuchstaben haben Vorrang über Kleinbuchstaben.",
    "Blockly.Msg.LANG_TEXT_TEXT_OBFUSCATE_TOOLTIP": "Produziert Text wie ein Text Block. Der Unterschied ist, dass der Text\nnicht einfach aufgedeckt werden kann, indem die APK der App untersucht wird. Dann verwenden, wenn Apps erstellt werden,\ndie vertrauliche Informationen, zum Beispiel API Schlüssel, enthalten.\nWarnung: Diese Lösung bietet nur sehr geringen Schutz gegen erfahrene Angreifer.",
    "Blockly.Msg.LANG_TEXT_TEXT_OBFUSCATE": "Verschleierter Text",
    "Blockly.Msg.LANG_TEXT_CHANGECASE_OPERATOR_UPPERCASE": "großschreiben",
    "Blockly.Msg.LANG_TEXT_CHANGECASE_OPERATOR_DOWNCASE": "kleinschreiben",
    "Blockly.Msg.LANG_TEXT_CHANGECASE_TOOLTIP_UPPERCASE": "Gibt eine Kopie der Text Argumente, umgewandelt in Großbuchstaben, zurück.",
    "Blockly.Msg.LANG_TEXT_CHANGECASE_TOOLTIP_DOWNCASE": "Gibt eine Kopie des Text Arguments, umgewandelt in Kleinbuchstaben, zurück.",
    "Blockly.Msg.LANG_TEXT_TRIM_TITLE_TRIM": "kürzen",
    "Blockly.Msg.LANG_TEXT_TRIM_TOOLTIP": "Gibt eine Kopie des Texts zurück, in der alle\nführenden oder folgenden Leerzeichen entfernt worden sind.",
    "Blockly.Msg.LANG_TEXT_STARTS_AT_INPUT_STARTS_AT": "beginnt bei",
    "Blockly.Msg.LANG_TEXT_STARTS_AT_INPUT_TEXT": "Text",
    "Blockly.Msg.LANG_TEXT_STARTS_AT_INPUT_PIECE": "Stück",
    "Blockly.Msg.LANG_TEXT_STARTS_AT_INPUT": "beginnt bei  Text %1 Stück %2",
    "Blockly.Msg.LANG_TEXT_STARTS_AT_TOOLTIP": "Gibt den Startindex des Stücks im Text zurück.\nIndex 1 kennzeichnet den Anfang des Textes. Gibt 0 zurück, wenn\ndas Stück nicht im Text ist.",
    "Blockly.Msg.LANG_TEXT_CONTAINS_INPUT_CONTAINS": "enthält",
    "Blockly.Msg.LANG_TEXT_CONTAINS_INPUT_TEXT": "Text",
    "Blockly.Msg.LANG_TEXT_CONTAINS_INPUT_PIECE": "Stück",
    "Blockly.Msg.LANG_TEXT_CONTAINS_INPUT": "%1 Text %2 %3 %4",
    "Blockly.Msg.LANG_TEXT_CONTAINS_TOOLTIP": "Testet, ob das Stück im Text enthalten ist.",
    "Blockly.Msg.LANG_TEXT_SPLIT_INPUT_TEXT": "Text",
    "Blockly.Msg.LANG_TEXT_SPLIT_INPUT_AT": "bei",
    "Blockly.Msg.LANG_TEXT_SPLIT_INPUT_AT_LIST": "bei (Liste)",
    "Blockly.Msg.LANG_TEXT_SPLIT_OPERATOR_SPLIT_AT_FIRST": "teilen beim ersten",
    "Blockly.Msg.LANG_TEXT_SPLIT_OPERATOR_SPLIT_AT_FIRST_OF_ANY": "teilen beim ersten von irgendeinem",
    "Blockly.Msg.LANG_TEXT_SPLIT_OPERATOR_SPLIT": "teilen",
    "Blockly.Msg.LANG_TEXT_SPLIT_OPERATOR_SPLIT_AT_ANY": "teilen bei allen",
    "Blockly.Msg.LANG_TEXT_SPLIT_TOOLTIP_SPLIT_AT_FIRST": "Teilt den gegebenen Text in zwei Teile anhand der Position des ersten Auftretens des\nTextes 'bei' als den Trennungspunkt. Gibt dann eine Liste mit zwei Elementen zurück, die dem Stück \nvor dem Trennungspunkt und dem Stück nach dem Trennungspunkt entsprechen. \nDas Teilen von 'apple, banana, cherry, dogfood' mit einem Komma als Trennungspunkt \ngibt eine Liste mit zwei Elementen zurück: Das erste Element entspricht dem Text 'apple' und das zweite entspricht dem Text \n' banana, cherry, dogfood'. \nZu beachten ist, dass das Komma nach 'apple' nicht im Resultat vorkommt, \nda es dem Trennungspunkt entspricht.",
    "Blockly.Msg.LANG_TEXT_SPLIT_TOOLTIP_SPLIT_AT_FIRST_OF_ANY": "Teilt den gegebenen Text in eine Liste mit zwei Elementen anhand der Position des\nersten Auftretens eines beliebigen Elementes der Liste 'bei (Liste)' als Trennungspunkt. \n\nDas Teilen von 'I love apples bananas apples grapes' mittels der Liste '(ba,ap)' gibt \neine Liste mit zwei Elementen zurück. Das erste Element entspricht 'I love' und das zweite Element entspricht \n'ples bananas apples grapes.'",
    "Blockly.Msg.LANG_TEXT_SPLIT_TOOLTIP_SPLIT": "Teilt den Text in Stücke anhand des Textes 'bei' als Trennungspunkt und erzeugt eine Liste der Resultate.  \nDas Teilen von 'one,two,three,four' bei ',' (Komma) gibt die Liste '(one two three four)' zurück. \nDas Teilen von 'one-potato,two-potato,three-potato,four' bei '-potato' gibt die Liste '(one two three four)' zurück.",
    "Blockly.Msg.LANG_TEXT_SPLIT_TOOLTIP_SPLIT_AT_ANY": "Teilt den gegebenen Text in eine Liste anhand eines beliebigen Elementes der Liste 'bei (Liste)' als \nTrennungspunkt und gibt eine Liste der Resultate zurück. \nDas Teilen von 'appleberry,banana,cherry,dogfood' anhand der Liste in 'bei (Liste)', die zwei Elemente enthält, \nwo das erste Element einem Komma und das zweite Element 'rry' entspricht, gibt eine Liste mit vier Elementen zurück: \n'(applebe banana che dogfood)'.",
    "Blockly.Msg.LANG_TEXT_SPLIT_AT_SPACES_TITLE": "bei Leerzeichen teilen",
    "Blockly.Msg.LANG_TEXT_SPLIT_AT_TOOLTIP": "Teile den Text in Stücke, die von Leerzeichen getrennt sind.",
    "Blockly.Msg.LANG_TEXT_SEGMENT_TITLE_SEGMENT": "Segment",
    "Blockly.Msg.LANG_TEXT_SEGMENT_INPUT_START": "Beginn",
    "Blockly.Msg.LANG_TEXT_SEGMENT_INPUT_LENGTH": "Länge",
    "Blockly.Msg.LANG_TEXT_SEGMENT_INPUT_TEXT": "Text",
    "Blockly.Msg.LANG_TEXT_SEGMENT_INPUT": "Segment  Text %1 Beginn %2 Länge %3",
    "Blockly.Msg.LANG_TEXT_SEGMENT_AT_TOOLTIP": "Extrahiert das Segment der gegebenen Länge vom gegebenen Text,\nbeginnend von der gegebenen Position im gegebenen Text. Position\n1 kennzeichnet den Anfang des Textes.",
    "Blockly.Msg.LANG_TEXT_REPLACE_ALL_INPUT_SEGMENT": "Segment",
    "Blockly.Msg.LANG_TEXT_REPLACE_ALL_INPUT_TEXT": "Text",
    "Blockly.Msg.LANG_TEXT_REPLACE_ALL_TITLE_REPLACE_ALL": "alle ersetzen",
    "Blockly.Msg.LANG_TEXT_REPLACE_ALL_INPUT_REPLACEMENT": "Ersatz",
    "Blockly.Msg.LANG_TEXT_REPLACE_ALL_INPUT": "ersetze alle Text %1 Segment %2 Ersatz %3",
    "Blockly.Msg.LANG_TEXT_REPLACE_ALL_TOOLTIP": "Gibt einen neuen Text zurück, der erhalten wird, indem alle Vorkomnisse des Segments\nmit dem Ersatz ersetzt werden.",
    "Blockly.Msg.LANG_TEXT_TEXT_IS_STRING_TITLE": "ist eine Zeichenkette?",
    "Blockly.Msg.LANG_TEXT_TEXT_IS_STRING_INPUT_THING": "Ding",
    "Blockly.Msg.LANG_TEXT_TEXT_IS_STRING_TOOLTIP": "Gibt \"wahr\" (=true) zurück, wenn <code>Ding</code> eine Zeichenkette ist.",
    "Blockly.Msg.LANG_CATEGORY_LISTS": "Listen",
    "Blockly.Msg.LANG_LISTS_CREATE_EMPTY_TITLE": "leere Liste erstellen",
    "Blockly.Msg.LANG_LISTS_CREATE_WITH_TITLE_MAKE_LIST": "Liste erstellen",
    "Blockly.Msg.LANG_LISTS_CREATE_WITH_TOOLTIP": "Eine Liste mit einer beliebigen Anzahl Elemente erstellen.",
    "Blockly.Msg.LANG_LISTS_CREATE_WITH_CONTAINER_TITLE_ADD": "Liste",
    "Blockly.Msg.LANG_LISTS_CREATE_WITH_CONTAINER_TOOLTIP": "Sektionen hinzufügen, entfernen oder neu ordnen, um diesen Listenblock neu zu konfigurieren.",
    "Blockly.Msg.LANG_LISTS_CREATE_WITH_ITEM_TITLE": "Element",
    "Blockly.Msg.LANG_LISTS_CREATE_WITH_ITEM_TOOLTIP": "Ein Element der Liste hinzufügen.",
    "Blockly.Msg.LANG_LISTS_ADD_ITEM_TITLE": "Element",
    "Blockly.Msg.LANG_LISTS_ADD_ITEM_TOOLTIP": "Ein Element der Liste hinzufügen.",
    "Blockly.Msg.LANG_LISTS_SELECT_ITEM_TITLE_SELECT": "Listenelement wählen",
    "Blockly.Msg.LANG_LISTS_SELECT_ITEM_INPUT_LIST": "Liste",
    "Blockly.Msg.LANG_LISTS_SELECT_ITEM_INPUT_INDEX": "Index",
    "Blockly.Msg.LANG_LISTS_SELECT_ITEM_INPUT": "Listenelement wählen  Liste %1 Index %2",
    "Blockly.Msg.LANG_LISTS_SELECT_ITEM_TOOLTIP": "Gibt das Element der Liste an der Indexposition zurück.",
    "Blockly.Msg.LANG_LISTS_IS_IN_TITLE_IS_IN": "ist in der Liste?",
    "Blockly.Msg.LANG_LISTS_IS_IN_INPUT_THING": "Ding",
    "Blockly.Msg.LANG_LISTS_IS_IN_INPUT_LIST": "Liste",
    "Blockly.Msg.LANG_LISTS_IS_IN_INPUT": "ist in der Liste? Ding %1 Liste %2",
    "Blockly.Msg.LANG_LISTS_IS_IN_TOOLTIP": "Gibt \"wahr\" (=true) zurück, wenn das Ding ein Element der Liste ist, und \"falsch\" (=false) wenn nicht.",
    "Blockly.Msg.LANG_LISTS_POSITION_IN_TITLE_POSITION": "Index in Liste",
    "Blockly.Msg.LANG_LISTS_POSITION_IN_INPUT_THING": "Ding",
    "Blockly.Msg.LANG_LISTS_POSITION_IN_INPUT_LIST": "Liste",
    "Blockly.Msg.LANG_LISTS_POSITION_IN_INPUT": "Index in Liste  Ding %1 Liste %2",
    "Blockly.Msg.LANG_LISTS_POSITION_IN_TOOLTIP": "Finde die Position des Dings in der Liste. Wenn das Ding nicht in der Liste ist, wird 0 zurückgeben.",
    "Blockly.Msg.LANG_LISTS_PICK_RANDOM_TITLE_PICK_RANDOM": "ein zufälliges Element wählen",
    "Blockly.Msg.LANG_LISTS_PICK_RANDOM_ITEM_INPUT_LIST": "Liste",
    "Blockly.Msg.LANG_LISTS_PICK_RANDOM_TOOLTIP": "Ein zufälliges Element der Liste wählen.",
    "Blockly.Msg.LANG_LISTS_REPLACE_ITEM_TITLE_REPLACE": "Listenelement ersetzen",
    "Blockly.Msg.LANG_LISTS_REPLACE_ITEM_INPUT_LIST": "Liste",
    "Blockly.Msg.LANG_LISTS_REPLACE_ITEM_INPUT_INDEX": "Index",
    "Blockly.Msg.LANG_LISTS_REPLACE_ITEM_INPUT_REPLACEMENT": "Ersatz",
    "Blockly.Msg.LANG_LISTS_REPLACE_ITEM_INPUT": "Listenelement ersetzen  Liste %1 Index %2 Ersatz %3",
    "Blockly.Msg.LANG_LISTS_REPLACE_ITEM_TOOLTIP": "Das n-te Element einer Liste ersetzen.",
    "Blockly.Msg.LANG_LISTS_REMOVE_ITEM_TITLE_REMOVE": "Listenelement entfernen",
    "Blockly.Msg.LANG_LISTS_REMOVE_ITEM_INPUT_LIST": "Liste",
    "Blockly.Msg.LANG_LISTS_REMOVE_ITEM_INPUT_INDEX": "Index",
    "Blockly.Msg.LANG_LISTS_REMOVE_ITEM_INPUT": "Listenelement entfernen  Liste %1 Index %2",
    "Blockly.Msg.LANG_LISTS_REMOVE_ITEM_TOOLTIP": "Entfernt das Element an der gegebenen Position in der Liste.",
    "Blockly.Msg.LANG_LISTS_LENGTH_INPUT_LENGTH": "Länge der Liste",
    "Blockly.Msg.LANG_LISTS_LENGTH_INPUT_LIST": "Liste",
    "Blockly.Msg.LANG_LISTS_LENGTH_INPUT": "Länge der Liste Liste %1",
    "Blockly.Msg.LANG_LISTS_LENGTH_TOOLTIP": "Anzahl der Listenelemente zählen.",
    "Blockly.Msg.LANG_LISTS_APPEND_LIST_TITLE_APPEND": "der Liste hinzufügen",
    "Blockly.Msg.LANG_LISTS_APPEND_LIST_INPUT_LIST1": "Liste1",
    "Blockly.Msg.LANG_LISTS_APPEND_LIST_INPUT_LIST2": "Liste2",
    "Blockly.Msg.LANG_LISTS_APPEND_LIST_INPUT": "der Liste hinzufügen  Liste1 %1 Liste2 %2",
    "Blockly.Msg.LANG_LISTS_APPEND_LIST_TOOLTIP": "Fügt alle Elemente der Liste2 ans Ende der Liste1 hinzu. Nach dem Hinzufügen enthält Liste1 diese zusätzlichen Elemente, aber Liste2 bleibt unverändert.",
    "Blockly.Msg.LANG_LISTS_ADD_ITEMS_TITLE_ADD": "Elemente der Liste hinzufügen",
    "Blockly.Msg.LANG_LISTS_ADD_ITEMS_INPUT_LIST": " Liste",
    "Blockly.Msg.LANG_LISTS_ADD_ITEMS_INPUT_ITEM": "Element",
    "Blockly.Msg.LANG_LISTS_ADD_ITEMS_INPUT": "Elemente der Liste hinzufügen Liste %1 Element %2",
    "Blockly.Msg.LANG_LISTS_ADD_ITEMS_TOOLTIP": "Fügt Elemente ans Ende einer Liste hinzu.",
    "Blockly.Msg.LANG_LISTS_ADD_ITEMS_CONTAINER_TITLE_ADD": "Liste",
    "Blockly.Msg.LANG_LISTS_ADD_ITEMS_CONTAINER_TOOLTIP": "Sektionen hinzufügen, entfernen oder neu ordnen, um diesen Listenblock neu zu konfigurieren.",
    "Blockly.Msg.LANG_LISTS_COPY_TITLE_COPY": "Liste kopieren",
    "Blockly.Msg.LANG_LISTS_COPY_INPUT_LIST": "Liste",
    "Blockly.Msg.LANG_LISTS_COPY_TOOLTIP": "Erstellt eine Kopie einer Liste. Kopiert auch alle Teillisten.",
    "Blockly.Msg.LANG_LISTS_IS_LIST_TITLE_IS_LIST": "ist eine Liste?",
    "Blockly.Msg.LANG_LISTS_IS_LIST_INPUT_THING": "Ding",
    "Blockly.Msg.LANG_LISTS_IS_LIST_TOOLTIP": "Testet, ob etwas eine Liste ist.",
    "Blockly.Msg.LANG_LISTS_TO_CSV_ROW_TITLE_TO_CSV": "Liste in csv Zeile",
    "Blockly.Msg.LANG_LISTS_TO_CSV_ROW_INPUT_LIST": "Liste",
    "Blockly.Msg.LANG_LISTS_TO_CSV_ROW_TOOLTIP": "Interpretiert die Liste als eine Zeile in einer Tabelle und gibt ein CSV (mit Komma getrennte Werte) Text zurück, der der Zeile entspricht. Jedes Element in der Liste wird als Feld betrachtet und ist mit Anführungszeichen im resultierenden CSV Text zitiert. Elemente sind mittels Komma getrennt. Der zurückgegebene Zeilentext hat keine Zeilentrennung am Ende.",
    "Blockly.Msg.LANG_LISTS_FROM_CSV_ROW_TITLE_FROM_CSV": "Liste aus csv Zeile",
    "Blockly.Msg.LANG_LISTS_FROM_CSV_ROW_INPUT_TEXT": "Text",
    "Blockly.Msg.LANG_LISTS_FROM_CSV_ROW_TOOLTIP": "Konvertiert eine CSV formattierte Textzeile (mit Komma getrennte Werte), um eine Liste von Feldern zu erstellen. Enthält ein Zeilentext innerhalb eines Feldes Zeilenumbrüche  (d.h. mehrere Zeilen) ohne Escape-Zeichen, wird er als Fehler gekennzeichnet. Ein einziger Zeilenumbruch oder CRLF am Ende eines Zeilentextes ist zugelassen.",
    "Blockly.Msg.LANG_LISTS_TO_CSV_TABLE_TITLE_TO_CSV": "Liste in csv Tabelle",
    "Blockly.Msg.LANG_LISTS_TO_CSV_TABLE_INPUT_LIST": "Liste",
    "Blockly.Msg.LANG_LISTS_TO_CSV_TABLE_TOOLTIP": "Interpretiert die Liste als Tabelle in zeilendominierter Formatierung und gibt ein CSV (mit Komma getrennte Werte) Text zurück, der der Tabelle entspricht. Jedes Element in der Liste sollte selbst eine Liste sein, die einer Zeile innerhalb der CSV Tabelle entspricht. Jedes Element in der Zeilenliste wird als Feld betrachtet und ist mit Anführungszeichen im resultierenden CSV Text zitiert. Im zurückgegebenen Text sind Elemente in Zeilen mittels Komma getrennt und Zeilen sind mittels CRLF getrennt (\\r\\n).",
    "Blockly.Msg.LANG_LISTS_FROM_CSV_TABLE_TITLE_FROM_CSV": "Liste aus csv Tabelle",
    "Blockly.Msg.LANG_LISTS_FROM_CSV_TABLE_INPUT_TEXT": "Text",
    "Blockly.Msg.LANG_LISTS_FROM_CSV_TABLE_TOOLTIP": "Konvertiert ein Text, der einer CSV (mit Komma getrennte Werte) formattierten Tabelle entspricht, um eine Liste von Zeilen zu erstellen. Jede Zeile entspricht einer Liste von Feldern. Zeilen können mittels Zeilenumbrüche (\\n) oder CRLF (\\r\\n) getrennt sein.",
    "Blockly.Msg.LANG_LISTS_INSERT_TITLE_INSERT_LIST": "Listenelement einfügen",
    "Blockly.Msg.LANG_LISTS_INSERT_INPUT_LIST": "Liste",
    "Blockly.Msg.LANG_LISTS_INSERT_INPUT_INDEX": "Index",
    "Blockly.Msg.LANG_LISTS_INSERT_INPUT_ITEM": "Element",
    "Blockly.Msg.LANG_LISTS_INSERT_INPUT": "Listenelement einfügen  Liste %1 Index %2 Element %3",
    "Blockly.Msg.LANG_LISTS_INSERT_TOOLTIP": "Ein Element in eine Liste an der definierten Position (Index) einfügen.",
    "Blockly.Msg.LANG_LISTS_TITLE_IS_EMPTY": "ist Liste leer?",
    "Blockly.Msg.LANG_LISTS_INPUT_LIST": "Liste",
    "Blockly.Msg.LANG_LISTS_IS_EMPTY_TOOLTIP": "Gibt wahr (true) zurück, wenn die Liste leer ist.",
    "Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_TITLE_LOOKUP_IN_PAIRS": "Paare nachschlagen",
    "Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_INPUT_KEY": "Schlüssel",
    "Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_INPUT_PAIRS": "Paare",
    "Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_INPUT_NOT_FOUND": "nichtGefunden",
    "Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_INPUT": "Paare nachschlagen  Schlüssel %1 Paare %2 nichtGefunden %3",
    "Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_TOOLTIP": "Gibt aus der Liste von Paare den Wert zurück, der dem Schlüssel zugeordnet wird",
    "Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_TITLE_INIT": "global initialisieren",
    "Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_NAME": "Name",
    "Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_TO": "auf",
    "Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_COLLAPSED_TEXT": "global",
    "Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_TOOLTIP": "Erstellt eine globale Variable und weist ihr den Wert der eingefügten Blöcke zu.",
    "Blockly.Msg.LANG_VARIABLES_GET_TITLE_GET": "hole",
    "Blockly.Msg.LANG_VARIABLES_GET_COLLAPSED_TEXT": "hole",
    "Blockly.Msg.LANG_VARIABLES_GET_TOOLTIP": "Gibt den Wert dieser Variable zurück.",
    "Blockly.Msg.LANG_VARIABLES_SET_TITLE_SET": "setze",
    "Blockly.Msg.LANG_VARIABLES_SET_TITLE_TO": "auf",
    "Blockly.Msg.LANG_VARIABLES_SET_COLLAPSED_TEXT": "setze",
    "Blockly.Msg.LANG_VARIABLES_SET_TOOLTIP": "Setze diese Variable so dass ihr Wert der Eingabe entspricht.",
    "Blockly.Msg.LANG_VARIABLES_VARIABLE": " Variable",
    "Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_TITLE_INIT": "lokal initialisieren",
    "Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_DEFAULT_NAME": "Name",
    "Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_INPUT_TO": "auf",
    "Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_IN_DO": "in",
    "Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_COLLAPSED_TEXT": "lokal",
    "Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_TOOLTIP": "Erlaubt das Erstellen von Variablen, die nur innerhalb des mache-Teil dieses Blockes erreichbar sind.",
    "Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_TRANSLATED_NAME": "initialisiere lokal in mache",
    "Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_IN_RETURN": "in",
    "Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_COLLAPSED_TEXT": "lokal",
    "Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_TOOLTIP": "Erlaubt das Erstellen von Variablen, die nur innerhalb der Rückgabe dieses Blockes erreichbar sind.",
    "Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_TRANSLATED_NAME": "initialisiere lokal in Rückgabe",
    "Blockly.Msg.LANG_VARIABLES_LOCAL_MUTATOR_CONTAINER_TITLE_LOCAL_NAMES": "lokale Namen",
    "Blockly.Msg.LANG_VARIABLES_LOCAL_MUTATOR_CONTAINER_TOOLTIP": "",
    "Blockly.Msg.LANG_VARIABLES_LOCAL_MUTATOR_ARG_TITLE_NAME": "Name",
    "Blockly.Msg.LANG_VARIABLES_LOCAL_MUTATOR_ARG_DEFAULT_VARIABLE": "x",
    "Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_DEFINE": "bei",
    "Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_PROCEDURE": "Prozedur",
    "Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_DO": "mache",
    "Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_COLLAPSED_PREFIX": "bei ",
    "Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_TOOLTIP": "Eine Prozedur, die keinen Wert zurückgibt.",
    "Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_THEN_RETURN": "Resultat",
    "Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_DO": "mache",
    "Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_RETURN": "Resultat",
    "Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_TOOLTIP": "Führt die Blöcke in 'mache' aus und gibt eine Anweisung zurück. Nützlich wenn eine Prozedur ausgeführt werden soll, bevor einer Variable ein Wert zurückgegeben wird.",
    "Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_COLLAPSED_TEXT": "mache/Resultat",
    "Blockly.Msg.LANG_PROCEDURES_DEFRETURN_DEFINE": "bei",
    "Blockly.Msg.LANG_PROCEDURES_DEFRETURN_RETURN": "Resultat",
    "Blockly.Msg.LANG_PROCEDURES_DEFRETURN_COLLAPSED_PREFIX": "bei ",
    "Blockly.Msg.LANG_PROCEDURES_DEFRETURN_TOOLTIP": "Eine Prozedur, die ein Resultat zurückgibt.",
    "Blockly.Msg.LANG_PROCEDURES_DEF_DUPLICATE_WARNING": "Warnung:\nDiese Prozedur hat\nduplizierte Eingaben.",
    "Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_CALL": "aufrufen ",
    "Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_PROCEDURE": "Prozedur",
    "Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_COLLAPSED_PREFIX": "aufrufen ",
    "Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_TOOLTIP": "Eine Prozedur ohne Rückgabewert aufrufen.",
    "Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_TRANSLATED_NAME": "aufrufen ohne Rückgabe",
    "Blockly.Msg.LANG_PROCEDURES_CALLRETURN_COLLAPSED_PREFIX": "aufrufen ",
    "Blockly.Msg.LANG_PROCEDURES_CALLRETURN_TOOLTIP": "Eine Prozedur mit einem Rückgabewert aufrufen.",
    "Blockly.Msg.LANG_PROCEDURES_CALLRETURN_TRANSLATED_NAME": "aufrufen mit Rückgabe",
    "Blockly.Msg.LANG_PROCEDURES_MUTATORCONTAINER_TITLE": "Eingaben",
    "Blockly.Msg.LANG_PROCEDURES_MUTATORARG_TITLE": "Eingabe:",
    "Blockly.Msg.LANG_PROCEDURES_HIGHLIGHT_DEF": "Prozedur hervorheben",
    "Blockly.Msg.LANG_PROCEDURES_MUTATORCONTAINER_TOOLTIP": "",
    "Blockly.Msg.LANG_PROCEDURES_MUTATORARG_TOOLTIP": "",
    "Blockly.Msg.UNDEFINED_BLOCK_TOOLTIP": "Dieser Block ist nicht definiert. Diesen Block löschen!",
    "Blockly.Msg.LANG_COMPONENT_BLOCK_TITLE_WHEN": "wenn ",
    "Blockly.Msg.LANG_COMPONENT_BLOCK_TITLE_DO": "mache",
    "Blockly.Msg.LANG_COMPONENT_BLOCK_METHOD_TITLE_CALL": "aufrufen ",
    "Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_METHOD_TITLE_CALL": "aufrufen ",
    "Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_METHOD_TITLE_FOR_COMPONENT": "für Komponente",
    "Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_GETTER_TITLE_OF_COMPONENT": "von Komponente",
    "Blockly.Msg.LANG_COMPONENT_BLOCK_SETTER_TITLE_SET": "setze ",
    "Blockly.Msg.LANG_COMPONENT_BLOCK_SETTER_TITLE_TO": " auf",
    "Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_SETTER_TITLE_SET": "setze ",
    "Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_SETTER_TITLE_TO": " auf",
    "Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_SETTER_TITLE_OF_COMPONENT": "von Komponente",
    "Blockly.Msg.SHOW_WARNINGS": "Warnungen einblenden",
    "Blockly.Msg.HIDE_WARNINGS": "Warnungen ausblenden",
    "Blockly.Msg.MISSING_SOCKETS_WARNINGS": "Alle Steckplätze sollten mit Blöcken befüllt werden",
    "Blockly.Msg.WRONG_TYPE_BLOCK_WARINGS": "Dieser Block sollte mit einem Ereignis Block oder einer Prozedur Definition verbunden sein",
    "Blockly.Msg.REPL_ERROR_FROM_COMPANION": "Fehler vom Companion",
    "Blockly.Msg.REPL_NETWORK_CONNECTION_ERROR": "Netzwerkverbindungsfehler",
    "Blockly.Msg.REPL_NETWORK_ERROR": "Netzwerkfehler",
    "Blockly.Msg.REPL_NETWORK_ERROR_RESTART": "Netzwerkfehler in der Kommunikation mit dem Companion.<br />Versuche, den Companion neuzustarten und neu zu verbinden",
    "Blockly.Msg.REPL_OK": "OK",
    "Blockly.Msg.REPL_COMPANION_VERSION_CHECK": "Companion Versionsprüfung",
    "Blockly.Msg.REPL_COMPANION_OUT_OF_DATE": "Deine Companion App ist veraltet. Klicke 'OK', um das Update zu starten. Achte auf Deine ",
    "Blockly.Msg.REPL_EMULATORS": "Emulator",
    "Blockly.Msg.REPL_DEVICES": "Geräte",
    "Blockly.Msg.REPL_APPROVE_UPDATE": " Bildschirm, da Du gebeten wirst, den Update zu bestätigen.",
    "Blockly.Msg.REPL_NOT_NOW": "Nicht jetzt",
    "Blockly.Msg.REPL_COMPANION_OUT_OF_DATE1": "Der Companion den Du nutzt ist veraltet.<br/><br/>Diese Version des App Inventor sollte mit der folgenden Companion Version verwendet werden:",
    "Blockly.Msg.REPL_COMPANION_OUT_OF_DATE_IMMEDIATE": "Du verwendest einen veralteten Companion. Du solltest den MIT AI2 Companion baldmöglichst aktualisieren. Falls Du Auto-Updates im Store aktiviert hast, wird der Update bald selbstständig erfolgen.",
    "Blockly.Msg.REPL_COMPANION_WRONG_PACKAGE": "Der Companion den Du verwendest wurde für eine andere Instanz des App Inventor gebaut. Um den korrekten Companion zu erhalten, schaue im App Inventor Bildschirm im Menü unter Hilfe->Companion Information.",
    "Blockly.Msg.REPL_DISMISS": "Schliessen",
    "Blockly.Msg.REPL_SOFTWARE_UPDATE": "Software Update",
    "Blockly.Msg.REPL_OK_LOWER": "Ok",
    "Blockly.Msg.REPL_GOT_IT": "Verstanden",
    "Blockly.Msg.REPL_UPDATE_INFO": "Das Update wird nun auf Deinem Gerät installiert. Achte auf Deinen Geräte- oder Emulatorbildschirm und, wenn aufgefordert, bestätige die Software Installation.<br /><br />WICHTIG: Wenn das Update fertig ist, wähle 'FERTIG' (nicht auf 'öffnen' klicken). Gehe dann zum App Inventor in Deinem Browser, klicke auf das 'Verbinden'-Menü und wähle 'Verbindung zurücksetzen'. Dann verbinde das Gerät erneut.",
    "Blockly.Msg.REPL_UPDATE_NO_UPDATE": "Kein Update ist verfügbar",
    "Blockly.Msg.REPL_UPDATE_NO_CONNECTION": "Du musst mit einem Companion verbunden sein, um ihn zu aktualisieren",
    "Blockly.Msg.REPL_UNABLE_TO_UPDATE": "Update kann nicht an Gerät/Emulator gesendet werden",
    "Blockly.Msg.REPL_UNABLE_TO_LOAD": "Update kann nicht vom App Inventor Server geladen werden",
    "Blockly.Msg.REPL_UNABLE_TO_LOAD_NO_RESPOND": "Update kann nicht vom App Inventor Server geladen werden (Server antwortet nicht)",
    "Blockly.Msg.REPL_NOW_DOWNLOADING": "Das Update wird nun vom App Inventor Server heruntergeladen, bitte warten",
    "Blockly.Msg.REPL_RUNTIME_ERROR": "Laufzeitfehler",
    "Blockly.Msg.REPL_NO_ERROR_FIVE_SECONDS": "<br/><i>Bemerkung:</i>&nbsp;Du wirst in den nächsten 5 Sekunden keinen weiteren Fehlerbericht sehen.",
    "Blockly.Msg.REPL_CONNECTING_USB_CABLE": "Verbindung wird mittels USB Kabel hergestellt",
    "Blockly.Msg.REPL_STARTING_EMULATOR": "Android Emulator wird gestartet<br/>Bitte warten: Das könnte ein oder zwei Minuten dauern.",
    "Blockly.Msg.REPL_CONNECTING": "Verbindung wird hergestellt...",
    "Blockly.Msg.REPL_CANCEL": "Abbrechen",
    "Blockly.Msg.REPL_GIVE_UP": "Aufgeben",
    "Blockly.Msg.REPL_KEEP_TRYING": "Weiter versuchen",
    "Blockly.Msg.REPL_CONNECTION_FAILURE1": "Verbindungsfehler",
    "Blockly.Msg.REPL_NO_START_EMULATOR": "Der MIT AI Companion konnte innerhalb des Emulators nicht gestartet werden",
    "Blockly.Msg.REPL_PLUGGED_IN_Q": "Angeschlossen?",
    "Blockly.Msg.REPL_AI_NO_SEE_DEVICE": "AI2 kann Dein Gerät nicht sehen. Bitte versichere, dass das Kabel eingesteckt ist und alle Treiber richtig installiert sind.",
    "Blockly.Msg.REPL_HELPER_Q": "Helfer?",
    "Blockly.Msg.REPL_HELPER_NOT_RUNNING": "Der aiStarter helper scheint nicht zu laufen<br /><a href='http://appinventor.mit.edu' target='_blank'>Hilfe benötigt?</a>",
    "Blockly.Msg.REPL_USB_CONNECTED_WAIT": "USB verbunden, wartet ",
    "Blockly.Msg.REPL_SECONDS_ENSURE_RUNNING": " Sekunden um sicherzustellen, dass alles läuft.",
    "Blockly.Msg.REPL_EMULATOR_STARTED": "Emulator gestartet, wartet ",
    "Blockly.Msg.REPL_STARTING_COMPANION_ON_PHONE": "Companion App wird auf dem verbundenen Smartphone gestartet.",
    "Blockly.Msg.REPL_STARTING_COMPANION_IN_EMULATOR": "Companion App wird im Emulator gestartet.",
    "Blockly.Msg.REPL_COMPANION_STARTED_WAITING": "Companion wird gestartet, wartet ",
    "Blockly.Msg.REPL_VERIFYING_COMPANION": "Überprüfung, dass der Companion gestartet ist....",
    "Blockly.Msg.REPL_CONNECT_TO_COMPANION": "Mit Companion verbinden",
    "Blockly.Msg.REPL_TRY_AGAIN1": "Verbindung zum MIT AI2 Companion fehlgeschlagen, bitte versuche es erneut.",
    "Blockly.Msg.REPL_YOUR_CODE_IS": "Dein Code ist",
    "Blockly.Msg.REPL_DO_YOU_REALLY_Q": "Möchtest Du wirklich?",
    "Blockly.Msg.REPL_FACTORY_RESET": "Es wird versucht, Deinen Emulator auf den Werkzustand zurückzusetzen. Wenn Du zuvor den Companion im Emulator aktualisiert hast, wirst Du dies wahrscheinlich erneut machen müssen.",
    "Blockly.Msg.WARNING_DELETE_X_BLOCKS": "Bist Du dir sicher, dass Du alle %1 dieser Blöcke löschen möchtest?",
    "Blockly.Msg.GENERATE_YAIL": "Erstelle YAIL",
    "Blockly.Msg.DO_IT": "Mache es",
    "Blockly.Msg.CLEAR_DO_IT_ERROR": "Fehler beheben",
    "Blockly.Msg.CAN_NOT_DO_IT": "Kann es nicht machen",
    "Blockly.Msg.CONNECT_TO_DO_IT": "Du musst mit dem Companion oder Emulator verbunden sein, um 'Mache es' zu nutzen",
    "Blockly.Msg.TIME_YEARS": "Jahre",
    "Blockly.Msg.TIME_MONTHS": "Monate",
    "Blockly.Msg.TIME_WEEKS": "Wochen",
    "Blockly.Msg.TIME_DAYS": "Tage",
    "Blockly.Msg.TIME_HOURS": "Stunden",
    "Blockly.Msg.TIME_MINUTES": "Minuten",
    "Blockly.Msg.TIME_SECONDS": "Sekunden",
    "Blockly.Msg.TIME_DURATION": "Dauer",
    "Blockly.Msg.ENABLE_ALL_BLOCKS": "Alle Blöcke aktivieren",
    "Blockly.Msg.DISABLE_ALL_BLOCKS": "Alle Blöcke deaktivieren",
    "Blockly.Msg.DOWNLOAD_BLOCKS_AS_PNG": "Blöcke als PNG downloaden",
    "Blockly.Msg.SHOW_ALL_COMMENTS": "Alle Kommentare anzeigen",
    "Blockly.Msg.HIDE_ALL_COMMENTS": "Alle Kommentare verbergen",
    "Blockly.Msg.LANG_DICTIONARIES_SET_PAIR_TITLE": "Setze den Wert für den/ das Schlüssel(wort) im Wörterbuch auf",
    "Blockly.Msg.LANG_DICTIONARIES_SET_PAIR_INPUT": "Setze den Wert für den/ das Schlüssel(wort) %1 im Wörterbuch %2 auf %3",
    "Blockly.Msg.LANG_DICTIONARIES_MAKE_PAIR_TITLE": "erstelle ein Paar",
    "Blockly.Msg.LANG_DICTIONARIES_MAKE_PAIR_TOOLTIP": "Erstellt ein Paar aus dem eingegebenen Schlüssel(wort) und Wert.",
    "Blockly.Msg.LANG_DICTIONARIES_PAIR_INPUT": "Schlüssel(wort) %1 Wert %2",
    "Blockly.Msg.LANG_DICTIONARIES_PAIR_TOOLTIP": "Fügt dem Wörterbuch ein neues Paar hinzu.",
    "Blockly.Msg.LANG_DICTIONARIES_PAIR_TITLE": "Paar",
    "Blockly.Msg.LANG_DICTIONARIES_CREATE_WITH_CONTAINER_TOOLTIP": "Fügt neue Sektionen zum Wörterbuch hinzu, löscht sie oder ordnet sie neu an um diesen Wörterbuch-Block neu zu konfigurieren.",
    "Blockly.Msg.LANG_DICTIONARIES_CREATE_WITH_CONTAINER_TITLE_ADD": "wöbu",
    "Blockly.Msg.LANG_DICTIONARIES_MAKE_DICTIONARY_TOOLTIP": "Erstellt ein Wörterbuch.",
    "Blockly.Msg.LANG_DICTIONARIES_MAKE_DICTIONARY_TITLE": "Wörterbuch erstellen",
    "Blockly.Msg.LANG_DICTIONARIES_CREATE_EMPTY_TITLE": "Leeres Wörterbuch erstellen",
    "Blockly.Msg.LANG_CATEGORY_DICTIONARIES": "Wörterbücher",
    "Blockly.Msg.LANG_LISTS_JOIN_WITH_SEPARATOR_TOOLTIP": "Gibt Text aus mit Trennzeichen verketteten Listenelementen aus.",
    "Blockly.Msg.LANG_LISTS_JOIN_WITH_SEPARATOR_TITLE": "Verketten mit Trennzeichen",
    "Blockly.Msg.LANG_LISTS_JOIN_WITH_SEPARATOR_INPUT": "Einträge verketten mit Separator &1 in Liste %2",
    "Blockly.Msg.LANG_LISTS_JOIN_WITH_SEPARATOR_LIST": "Liste",
    "Blockly.Msg.LANG_LISTS_JOIN_WITH_SEPARATOR_SEPARATOR": "Trennzeichen",
    "Blockly.Msg.LANG_LISTS_REVERSE_TOOLTIP": "Wandelt die Reihenfolge der Listeneinträge rückwärts um.",
    "Blockly.Msg.LANG_LISTS_REVERSE_INPUT_LIST": "Liste",
    "Blockly.Msg.LANG_LISTS_REVERSE_TITLE_REVERSE": "Liste rückwärts umwandeln",
    "Blockly.Msg.LANG_TEXT_CONTAINS_INPUT_PIECE_LIST": "Stück Liste",
    "Blockly.Msg.LANG_TEXT_COMPARE_TOOLTIP_NEQ": "Testet, ob die Texte unterschiedlich sind, z.B. nicht die gleichen\nZeichen in der gleichen Reihenfolge besitzen. Hier liegt ein Unterschied zum mathematischen ≠.\nMathematisch wäre 123 und 0123 gleich, als Text sind sie nicht gleich.",
    "Blockly.Msg.LANG_TEXT_REPLACE_ALL_MAPPINGS_TOOLTIP_LONGEST_STRING_FIRST": "Gibt den neuen Text zurück, der durch Ersetzen aller Vorkommen entstanden ist.",
    "Blockly.Msg.LANG_TEXT_REVERSE_TOOLTIP": "Gibt die Eingabe rückwärts aus.",
    "Blockly.Msg.LANG_TEXT_REVERSE_INPUT": "Rückwärts",
    "Blockly.Msg.LANG_TEXT_REPLACE_ALL_MAPPINGS_TITLE": "alle Zuordnungen ersetzen",
    "Blockly.Msg.LANG_TEXT_REPLACE_ALL_MAPPINGS_OPERATOR_DICTIONARY_ORDER": "Wörterbuch",
    "Blockly.Msg.LANG_TEXT_REPLACE_ALL_MAPPINGS_OPERATOR_LONGEST_STRING_FIRST": "Längeste Zeichenkette zuerst",
    "Blockly.Msg.LANG_TEXT_REPLACE_ALL_MAPPINGS_INPUT_ORDER": "Reihenfolge",
    "Blockly.Msg.LANG_TEXT_REPLACE_ALL_MAPPINGS_INPUT_ORDER_PREFIX": "Präferenz",
    "Blockly.Msg.LANG_TEXT_REPLACE_ALL_MAPPINGS_INPUT_TEXT": "im Text",
    "Blockly.Msg.LANG_TEXT_CONTAINS_TOOLTIP_CONTAINS_ALL": "Testet, ob alle Stücke im Text enthalten sind.",
    "Blockly.Msg.LANG_TEXT_CONTAINS_TOOLTIP_CONTAINS_ANY": "Testet, ob eines oder einige der Stücke im Text enthalten ist/ sind.",
    "Blockly.Msg.LANG_TEXT_CONTAINS_TOOLTIP_CONTAINS": "Testet, ob das Stück im Text enthalten ist.",
    "Blockly.Msg.LANG_TEXT_CONTAINS_OPERATOR_CONTAINS_ALL": "enthält alle",
    "Blockly.Msg.LANG_TEXT_CONTAINS_OPERATOR_CONTAINS_ANY": "enthält einige",
    "Blockly.Msg.LANG_TEXT_CONTAINS_OPERATOR_CONTAINS": "enthält",
    "Blockly.Msg.LANG_MATH_FORMAT_AS_DECIMAL_INPUT_NUM": "Zahl",
    "Blockly.Msg.LANG_MATH_BITWISE_XOR": "bitweises exklusives ODER",
    "Blockly.Msg.LANG_MATH_BITWISE_IOR": "bitweises ODER",
    "Blockly.Msg.LANG_MATH_BITWISE_AND": "bitweises UND",
    "Blockly.Msg.LANG_MATH_BITWISE_TOOLTIP_XOR": "Gibt das bitweise exklusive ODER zweier Zahlen zurück.",
    "Blockly.Msg.LANG_MATH_BITWISE_TOOLTIP_IOR": "Gibt das bitweise ODER zweier Zahlen zurück.",
    "Blockly.Msg.LANG_MATH_BITWISE_TOOLTIP_AND": "Gibt das bitweise UND zweier Zahlen zurück.",
    "Blockly.Msg.LANG_MATH_NUMBER_RADIX_TITLE": "Basis",
    "Blockly.Msg.LANG_MATH_NUMBER_RADIX_TOOLTIP": "Übergibt die eingegebene Nummer im (Basis10) Dezimalsystem.",
    "Blockly.Msg.LANG_MATH_HEXADECIMAL_FORMAT": "hexadezimal",
    "Blockly.Msg.LANG_MATH_OCTAL_FORMAT": "oktal",
    "Blockly.Msg.LANG_MATH_BINARY_FORMAT": "binär",
    "Blockly.Msg.LANG_MATH_DECIMAL_FORMAT": "dezimal",
    "Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_TOOLTIP": "Öffnet einen anderen Bildschirm in einer Multi-Bildschirm-App und übergibt einen Startwert an diesen.",
    "Blockly.Msg.LANG_CONTROLS_FOREACH_DICT_TOOLTIP": "Dies bearbeitet alle Blöcke in der 'mache'-Sektion für jeden Schlüssel(wort)-Eintrag im Wörterbuch. Benutze die angegebene Variablennamen um auf den/ das Schlüssel(wort) des aktuellen Wörterbucheintrags zu verweisen!",
    "Blockly.Msg.LANG_CONTROLS_FOREACH_DICT_TITLE": "Für jede(n/s) im Wörterbuch",
    "Blockly.Msg.LANG_CONTROLS_FOREACH_DICT_INPUT_VALUE": "Wert",
    "Blockly.Msg.LANG_CONTROLS_FOREACH_DICT_INPUT_KEY": "Schlüssel(wort)",
    "Blockly.Msg.LANG_CONTROLS_FOREACH_DICT_INPUT_DO": "mache",
    "Blockly.Msg.LANG_CONTROLS_FOREACH_DICT_INPUT": "Für jede(n/s) %1 mit %2 im Wörterbuch %3",
    "Blockly.Msg.ERROR_INVALID_NUMBER_CONTENT": "Dieser Text-Bock enthält keine gültige Nummer!",
    "Blockly.Msg.UNGENERICIZE_BLOCK": "Block spezifisch machen",
    "Blockly.Msg.GENERICIZE_BLOCK": "Block generisch machen",
    "Blockly.Msg.SHOW": "Steuersymbole anzeigen",
    "Blockly.Msg.HIDE": "Steuersymbole verstecken",
    "Blockly.Msg.LANG_DICTIONARIES_DELETE_PAIR_INPUT": "entferne Eintrag mit Schlüssel %2 aus dem Wörterbuch %1",
    "Blockly.Msg.LANG_DICTIONARIES_SET_PAIR_TOOLTIP": "Setze ein Paar im Wörterbuch",
    "Blockly.Msg.LANG_DICTIONARIES_GET_VALUES_TYPEBLOCK": "hole die Werte aus dem Wörterbuch",
    "Blockly.Msg.LANG_DICTIONARIES_GET_VALUES_TOOLTIP": "Gibt eine Liste aller Werte im Wörterbuch zurück.",
    "Blockly.Msg.LANG_DICTIONARIES_GET_VALUES_INPUT": "Wörterbuch",
    "Blockly.Msg.LANG_DICTIONARIES_GET_VALUES_TITLE": "Werte",
    "Blockly.Msg.LANG_DICTIONARIES_GET_KEYS_TYPEBLOCK": "hole die Schlüssel",
    "Blockly.Msg.LANG_DICTIONARIES_GET_KEYS_TOOLTIP": "Gibt eine Liste aller Schlüssel in dem Wörterbuch zurück.",
    "Blockly.Msg.LANG_DICTIONARIES_GET_KEYS_INPUT": "Wörterbuch",
    "Blockly.Msg.LANG_DICTIONARIES_GET_KEYS_TITLE": "Schlüssel",
    "Blockly.Msg.LANG_DICTIONARIES_GETTERS_TITLE": "hole",
    "Blockly.Msg.LANG_DICTIONARIES_DICTIONARY_RECURSIVE_LOOKUP_TITLE": "hole den Wert zum Schlüssel im Wörterbuch",
    "Blockly.Msg.LANG_DICTIONARIES_DICTIONARY_LOOKUP_TITLE": "Hole den Wert zum Schlüssel im Wörterbuch",
    "Blockly.Msg.LANG_DICTIONARIES_DICTIONARY_LOOKUP_TOOLTIP": "Gibt den Wert im Wörterbuch zum Schlüssel.",
    "Blockly.Msg.LANG_DICTIONARIES_DICTIONARY_LOOKUP_INPUT": "hole Wert für den Schlüssel %1 im Wörterbuch %2, oder, wenn nicht gefunden, %3",
    "Blockly.Msg.LANG_DICTIONARIES_DELETE_PAIR_TOOLTIP": "Lösche einen Eintrag im Wörterbuch anhand des übergebenen Schlüssels.",
    "Blockly.Msg.LANG_DICTIONARIES_DELETE_PAIR_TITLE": "Entferne den Eintrag mit dem übergebenen Schlüssel aus dem Wörterbuch"
}
