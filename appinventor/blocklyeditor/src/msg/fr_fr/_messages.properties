
# Blocks editor definitions
blockseditor.Blockly.Msg.ERROR_BLOCK_CANNOT_BE_IN_DEFINTION = Ce bloc ne peut pas être dans une définition
# Description: Switch language to French.
blockseditor.Blockly.Msg.ERROR_DUPLICATE_EVENT_HANDLER = Ceci est un gestionnaire d''évènement dupliqué pour ce composant.
blockseditor.Blockly.Msg.ERROR_SELECT_VALID_ITEM_FROM_DROPDOWN = Sélectionner un élément valide dans le menu déroulant.
blockseditor.Blockly.Msg.CHANGE_VALUE_TITLE = Modifier la valeur \:
blockseditor.Blockly.Msg.NEW_VARIABLE = Nouvelle variable...
blockseditor.Blockly.Msg.NEW_VARIABLE_TITLE = Nom de la nouvelle variable\:
blockseditor.Blockly.Msg.PROCEDURE_CATEGORY = Procédures
blockseditor.Blockly.Msg.RENAME_VARIABLE = Renommer la variable...
blockseditor.Blockly.Msg.RENAME_VARIABLE_TITLE = Renommer les "%1" variables en\:'' 
blockseditor.Blockly.Msg.VARIABLE_CATEGORY = Variables
blockseditor.Blockly.Msg.ADD_COMMENT = Ajouter un commentaire
blockseditor.Blockly.Msg.ARRANGE_H = Arranger les blocs horizontalement
blockseditor.Blockly.Msg.ARRANGE_S = Arrange les blocs en diagonale
blockseditor.Blockly.Msg.ARRANGE_V = Arranger les blocs verticalement
blockseditor.Blockly.Msg.CAN_NOT_DO_IT = Impossible de le faire
blockseditor.Blockly.Msg.CLEAR_DO_IT_ERROR = Effacer l''erreur
blockseditor.Blockly.Msg.COLLAPSE_ALL = Réduire les blocs
blockseditor.Blockly.Msg.COLLAPSE_BLOCK = Réduire le bloc
blockseditor.Blockly.Msg.CONNECT_TO_DO_IT = Vous devriez être connecté au compagnon ou émulateur pour utiliser "Faire"
blockseditor.Blockly.Msg.DELETE_BLOCK = Supprimer un bloc
blockseditor.Blockly.Msg.DELETE_X_BLOCKS = Supprimer %1 blocs
blockseditor.Blockly.Msg.DISABLE_BLOCK = Désactiver le bloc
blockseditor.Blockly.Msg.DO_IT = Faire
blockseditor.Blockly.Msg.DUPLICATE_BLOCK = Dupliquer
blockseditor.Blockly.Msg.ENABLE_BLOCK = Activer le bloc
blockseditor.Blockly.Msg.EXPAND_ALL = Développer les blocs
blockseditor.Blockly.Msg.EXPAND_BLOCK = Développer le bloc
blockseditor.Blockly.Msg.EXTERNAL_INPUTS = Entrées externes
blockseditor.Blockly.Msg.GENERATE_YAIL = Générer Yail
blockseditor.Blockly.Msg.HELP = Aide
blockseditor.Blockly.Msg.HIDE_WARNINGS = Cacher les avertissements
blockseditor.Blockly.Msg.HORIZONTAL_PARAMETERS = Arrange les paramètres horizontalement
blockseditor.Blockly.Msg.INLINE_INPUTS = Entrées en ligne
blockseditor.Blockly.Msg.LANG_CATEGORY_CONTROLS = Contrôle
blockseditor.Blockly.Msg.LANG_CATEGORY_LISTS = Listes
blockseditor.Blockly.Msg.LANG_CATEGORY_LOGIC = Logique
blockseditor.Blockly.Msg.LANG_CATEGORY_MATH = Maths
blockseditor.Blockly.Msg.LANG_CATEGORY_TEXT = Texte
blockseditor.Blockly.Msg.LANG_COLOUR_BLACK = noir
blockseditor.Blockly.Msg.LANG_COLOUR_BLUE = bleu
blockseditor.Blockly.Msg.LANG_COLOUR_CYAN = cyan
blockseditor.Blockly.Msg.LANG_COLOUR_DARK_GRAY = gris foncé
blockseditor.Blockly.Msg.LANG_COLOUR_GRAY = gris
blockseditor.Blockly.Msg.LANG_COLOUR_GREEN = vert
blockseditor.Blockly.Msg.LANG_COLOUR_LIGHT_GRAY = gris clair
blockseditor.Blockly.Msg.LANG_COLOUR_MAGENTA = magenta
blockseditor.Blockly.Msg.LANG_COLOUR_MAKE_COLOUR = créer couleur
blockseditor.Blockly.Msg.LANG_COLOUR_MAKE_COLOUR_TOOLTIP = Une couleur avec rouge, vert, bleu donné, et optionnellement des composants alpha
blockseditor.Blockly.Msg.LANG_COLOUR_ORANGE = orange
blockseditor.Blockly.Msg.LANG_COLOUR_PICKER_TOOLTIP = Cliquer sur le carré pour choisir une couleur.
blockseditor.Blockly.Msg.LANG_COLOUR_PINK = rose
blockseditor.Blockly.Msg.LANG_COLOUR_RED = rouge
blockseditor.Blockly.Msg.LANG_COLOUR_SPLIT_COLOUR = Diviser couleur
blockseditor.Blockly.Msg.LANG_COLOUR_SPLIT_COLOUR_TOOLTIP = Quatre éléments, chacun entre 0 et 255, représentant les composantes rouge, verte, bleu et alpha.''  
blockseditor.Blockly.Msg.LANG_COLOUR_WHITE = blanc
blockseditor.Blockly.Msg.LANG_COLOUR_YELLOW = jaune
blockseditor.Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_GETTER_TITLE_OF_COMPONENT = de composant
blockseditor.Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_METHOD_TITLE_CALL = appeler 
blockseditor.Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_METHOD_TITLE_FOR_COMPONENT = pour composant
blockseditor.Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_SETTER_TITLE_OF_COMPONENT = de composant
blockseditor.Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_SETTER_TITLE_SET = mettre 
blockseditor.Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_SETTER_TITLE_TO =  à
blockseditor.Blockly.Msg.LANG_COMPONENT_BLOCK_METHOD_TITLE_CALL = appeler 
blockseditor.Blockly.Msg.LANG_COMPONENT_BLOCK_SETTER_TITLE_SET = mettre 
blockseditor.Blockly.Msg.LANG_COMPONENT_BLOCK_SETTER_TITLE_TO =  à
blockseditor.Blockly.Msg.LANG_COMPONENT_BLOCK_TITLE_DO = faire
blockseditor.Blockly.Msg.LANG_COMPONENT_BLOCK_TITLE_WHEN = quand 
blockseditor.Blockly.Msg.LANG_CONTROLS_CHOOSE_COLLAPSED_TEXT = si
blockseditor.Blockly.Msg.LANG_CONTROLS_CHOOSE_INPUT_ELSE_RETURN = sinon
blockseditor.Blockly.Msg.LANG_CONTROLS_CHOOSE_INPUT_TEST = 
blockseditor.Blockly.Msg.LANG_CONTROLS_CHOOSE_INPUT_THEN_RETURN = alors
blockseditor.Blockly.Msg.LANG_CONTROLS_CHOOSE_TITLE = si
blockseditor.Blockly.Msg.LANG_CONTROLS_CHOOSE_TOOLTIP = Si la condition testée est vraie, retourne le résultat de l''évaluation de l''expression attaché à la section ''alors''; sinon retourne le résultat de l''évaluation de l''expression attaché à la section ''sinon''; au maximum, le résultat de l''un des deux sections va être évalué.
blockseditor.Blockly.Msg.LANG_CONTROLS_CLOSE_APPLICATION_COLLAPSED_TEXT = fermer l''application
blockseditor.Blockly.Msg.LANG_CONTROLS_CLOSE_APPLICATION_TITLE = fermer l''application
blockseditor.Blockly.Msg.LANG_CONTROLS_CLOSE_APPLICATION_TOOLTIP = Ferme tous les écrans dans cette application puis l''arrête.
blockseditor.Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_COLLAPSED_TEXT = fermer l''écran
blockseditor.Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_TITLE = fermer l''écran
blockseditor.Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_TOOLTIP = Ferme l''écran actuel
blockseditor.Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_PLAIN_TEXT_COLLAPSED_TEXT = ferme l''écran avec texte brut
blockseditor.Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_PLAIN_TEXT_INPUT_TEXT = texte
blockseditor.Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_PLAIN_TEXT_TITLE = ferme l''écran avec texte brut
blockseditor.Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_PLAIN_TEXT_TOOLTIP = Ferme l''écran actuel et retourne un texte à l''application qui l''a ouvert''. Cette commande est pour retourner du texte aux activités non réalisées par App Inventor, et non pas aux écrans App Inventor. Pour les écrans App Inventor, comme dans les applications multi-écrans, utilisez Fermer écran avec valeur, et non Fermer écran avec texte brut.
blockseditor.Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_VALUE_COLLAPSED_TEXT = ferme écran avec valeur
blockseditor.Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_VALUE_INPUT_RESULT = résultat
blockseditor.Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_VALUE_TITLE = ferme écran avec valeur
blockseditor.Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_VALUE_TOOLTIP = Ferme l''écran actuel et retourne un résultat à l''écran qui a ouvert celui-ci
blockseditor.Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_COLLAPSED_TEXT = faire/résultat
blockseditor.Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_INPUT_DO = faire
blockseditor.Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_INPUT_RETURN = résultat
blockseditor.Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_TITLE = faire résultat
blockseditor.Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_TOOLTIP = Exécute les blocs dans la section ''faire'' et retourne un résultat. Pratique si vous avez besoin d''une procédure avant de retourner une valeur à une variable.
blockseditor.Blockly.Msg.LANG_CONTROLS_EVAL_BUT_COLLAPSED_TEXT = évaluer mais ignorer
blockseditor.Blockly.Msg.LANG_CONTROLS_EVAL_BUT_IGNORE_TITLE = évaluer mais ignorer résultat
blockseditor.Blockly.Msg.LANG_CONTROLS_EVAL_BUT_IGNORE_TOOLTIP = Exécute les blocs connectés et ignore la valeur retournée (s''il y en a). Pratique si vous avez besoin d''appeler une procédure qui retourne une valeur sans en avoir besoin.
blockseditor.Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_INPUT_OFLOOP = de boucle
blockseditor.Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK = interrompre
blockseditor.Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE = continue avec l''itération suivante
blockseditor.Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK = sortir de la boucle
blockseditor.Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE = Ignorer le reste de cette boucle, et\ncontinuer avec l''itération suivante.
blockseditor.Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_WARNING = Avertissement\:\nCe bloc ne peut être utilisé\nqu''avec une boucle.
blockseditor.Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_COLLAPSED_PREFIX = pour
blockseditor.Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_COLLAPSED_SUFFIX =  dans la liste
blockseditor.Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_COLLAPSED_TEXT = pour élément dans la liste
blockseditor.Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_DO = faire
blockseditor.Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_INLIST = dans la liste
blockseditor.Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_ITEM = pour chaque
blockseditor.Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_VAR = élément
blockseditor.Blockly.Msg.LANG_CONTROLS_FOREACH_TOOLTIP = Exécute les blocs dans la section ''faire'' pour chaque élément de la liste. Utilise  le nom de variable donné pour faire référence à l''élément de la liste courant.
blockseditor.Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_COLLAPSED_PREFIX = pour
blockseditor.Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_COLLAPSED_SUFFIX =  dans intervalle
blockseditor.Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_COLLAPSED_TEXT = pour nombre dans intervalle
blockseditor.Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_DO = faire
blockseditor.Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_END = à
blockseditor.Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_ITEM = pour chaque
blockseditor.Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_START = de
blockseditor.Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_STEP = par
blockseditor.Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_VAR = nombre
blockseditor.Blockly.Msg.LANG_CONTROLS_FORRANGE_TOOLTIP = Exécute les blocs dans la section ''faire'' pour chaque valeur dans l''intervalle du début à la fin, en incrémentant la valeur à chaque fois.     Utilise le nom de la variable donné pour se référer à la valeur actuelle.'' 
blockseditor.Blockly.Msg.LANG_CONTROLS_FOR_INPUT_DO = faire
blockseditor.Blockly.Msg.LANG_CONTROLS_FOR_INPUT_FROM = de
blockseditor.Blockly.Msg.LANG_CONTROLS_FOR_INPUT_TO = à
blockseditor.Blockly.Msg.LANG_CONTROLS_FOR_INPUT_VAR = x
blockseditor.Blockly.Msg.LANG_CONTROLS_FOR_INPUT_WITH = compter avec
blockseditor.Blockly.Msg.LANG_CONTROLS_FOR_TOOLTIP = Compter d''un nombre de début à un nombre de fin.\nPour chaque itération, fixer le compteur à \nla variable "%1", puis faire un traitement.
blockseditor.Blockly.Msg.LANG_CONTROLS_GET_PLAIN_START_TEXT_COLLAPSED_TEXT = obtenir texte brut de début'' 
blockseditor.Blockly.Msg.LANG_CONTROLS_GET_PLAIN_START_TEXT_TITLE = obtenir texte brut de début
blockseditor.Blockly.Msg.LANG_CONTROLS_GET_PLAIN_START_TEXT_TOOLTIP = Retourne le texte brut qui a été passé à cet écran quand il a été lancé par une autre application. Si aucune valeur passé, retourne un texte vide. Pour les applications multi-écrans, utilisez obtenir valeur de début au lieu de obtenir texte brut de départ.
blockseditor.Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_COLLAPSED_TEXT = obtenir valeur de départ
blockseditor.Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_INPUT_SCREENNAME = nom écran
blockseditor.Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_INPUT_STARTVALUE = valeur départ
blockseditor.Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_TITLE = Obtenir valeur de départ
blockseditor.Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_TOOLTIP = Retourne la valeur qui a été passée à cet écran quand il a été ouvert, typiquement par un autre écran dans une application à plusieurs écrans. Si aucune valeur n''a été passée, retourne un texte vide.
blockseditor.Blockly.Msg.LANG_CONTROLS_IF_ELSEIF_TITLE_ELSEIF = sinon si
blockseditor.Blockly.Msg.LANG_CONTROLS_IF_ELSEIF_TOOLTIP = Ajoute une condition au bloc si.
blockseditor.Blockly.Msg.LANG_CONTROLS_IF_ELSE_TITLE_ELSE = sinon
blockseditor.Blockly.Msg.LANG_CONTROLS_IF_ELSE_TOOLTIP = Ajoute une dernière condition au bloc si.
blockseditor.Blockly.Msg.LANG_CONTROLS_IF_IF_TITLE_IF = si
blockseditor.Blockly.Msg.LANG_CONTROLS_IF_IF_TOOLTIP = Ajouter, supprimer, ou réorganiser les sections\npour reconfigurer ce bloc si.
blockseditor.Blockly.Msg.LANG_CONTROLS_IF_MSG_ELSE = sinon
blockseditor.Blockly.Msg.LANG_CONTROLS_IF_MSG_ELSEIF = sinon si
blockseditor.Blockly.Msg.LANG_CONTROLS_IF_MSG_IF = si
blockseditor.Blockly.Msg.LANG_CONTROLS_IF_MSG_THEN = alors
blockseditor.Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_COLLAPSED_TEXT = ouvre écran
blockseditor.Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_INPUT_SCREENNAME = Nom écran
blockseditor.Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_TITLE = ouvre un autre écran
blockseditor.Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_TOOLTIP = Ouvre un nouvel écran dans une application à écrans multiples
blockseditor.Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_COLLAPSED_TEXT = ouvrir écran avec valeur
blockseditor.Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_INPUT_SCREENNAME = nom écran
blockseditor.Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_INPUT_STARTVALUE = valeur de départ
blockseditor.Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_TITLE = ouvre un autre écran avec une valeur de départ
blockseditor.Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_TOOLTIP = Ouvre un nouvel écran dans une application multi-écrans et passe la valeur de départ à cet écran
blockseditor.Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_INPUT_DO = faire
blockseditor.Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_OPERATOR_UNTIL = jusqu''à
blockseditor.Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_OPERATOR_WHILE = tant que
blockseditor.Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_TITLE_REPEAT = répéter
blockseditor.Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL = Tant que la valeur est fausse, alors faire quelques choses.
blockseditor.Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_TOOLTIP_WHILE = Tant que la valeur est vraie, alors faire quelques choses.
blockseditor.Blockly.Msg.LANG_CONTROLS_WHILE_COLLAPSED_TEXT = tant que
blockseditor.Blockly.Msg.LANG_CONTROLS_WHILE_INPUT_DO = faire
blockseditor.Blockly.Msg.LANG_CONTROLS_WHILE_INPUT_TEST = test
blockseditor.Blockly.Msg.LANG_CONTROLS_WHILE_TITLE = tant que
blockseditor.Blockly.Msg.LANG_CONTROLS_WHILE_TOOLTIP = Exécute le bloc dans la partie ''faire'' tant que le test est vrai
blockseditor.Blockly.Msg.LANG_LISTS_ADD_ITEMS_CONTAINER_TITLE_ADD = liste
blockseditor.Blockly.Msg.LANG_LISTS_ADD_ITEMS_CONTAINER_TOOLTIP = Ajouter, supprimer, ou réorganiser les sections pour reconfigurer ce bloc de liste.
blockseditor.Blockly.Msg.LANG_LISTS_ADD_ITEMS_INPUT = ajouter éléments à la liste liste %1 élément %2
blockseditor.Blockly.Msg.LANG_LISTS_ADD_ITEMS_INPUT_ITEM = élément
blockseditor.Blockly.Msg.LANG_LISTS_ADD_ITEMS_INPUT_LIST = liste
blockseditor.Blockly.Msg.LANG_LISTS_ADD_ITEMS_TITLE_ADD = ajouter éléments à la liste
blockseditor.Blockly.Msg.LANG_LISTS_ADD_ITEMS_TOOLTIP = Ajoute des éléments à la fin d''une liste.
blockseditor.Blockly.Msg.LANG_LISTS_ADD_ITEM_TITLE = élément
blockseditor.Blockly.Msg.LANG_LISTS_ADD_ITEM_TOOLTIP = Ajouter un élément à la liste
blockseditor.Blockly.Msg.LANG_LISTS_APPEND_LIST_INPUT = ajouter à la liste    liste1 %1 liste2 %2
blockseditor.Blockly.Msg.LANG_LISTS_APPEND_LIST_TITLE_APPEND = ajouter à la liste
blockseditor.Blockly.Msg.LANG_LISTS_APPEND_LIST_TOOLTIP = Ajoute tous les éléments dans liste2 à la fin de liste1. Après l''ajout, liste1 va contenir ces éléments additionnels, par contre  liste2 reste inchangée.
blockseditor.Blockly.Msg.LANG_LISTS_COPY_INPUT_LIST = liste
blockseditor.Blockly.Msg.LANG_LISTS_COPY_TITLE_COPY = copier liste
blockseditor.Blockly.Msg.LANG_LISTS_COPY_TOOLTIP = Réalise une copie de la liste, y compris toutes les sous-listes
blockseditor.Blockly.Msg.LANG_LISTS_CREATE_EMPTY_TITLE = créer une liste vide
blockseditor.Blockly.Msg.LANG_LISTS_CREATE_WITH_CONTAINER_TITLE_ADD = liste
blockseditor.Blockly.Msg.LANG_LISTS_CREATE_WITH_CONTAINER_TOOLTIP = Ajouter, supprimer ou réorganiser les sections pour reconfigurer ce bloc de liste.
blockseditor.Blockly.Msg.LANG_LISTS_CREATE_WITH_ITEM_TITLE = élément
blockseditor.Blockly.Msg.LANG_LISTS_CREATE_WITH_ITEM_TOOLTIP = Ajouter un élément à la liste
blockseditor.Blockly.Msg.LANG_LISTS_CREATE_WITH_TITLE_MAKE_LIST = créer une liste
blockseditor.Blockly.Msg.LANG_LISTS_CREATE_WITH_TOOLTIP = Créer une liste avec n''importe quel nombre d''éléments.
blockseditor.Blockly.Msg.LANG_LISTS_FROM_CSV_ROW_INPUT_TEXT = texte
blockseditor.Blockly.Msg.LANG_LISTS_FROM_CSV_ROW_TITLE_FROM_CSV = liste de ligne csv
blockseditor.Blockly.Msg.LANG_LISTS_FROM_CSV_ROW_TOOLTIP = Analyse un texte comme une ligne au format CSV (valeurs séparées par des virgules) pour produire une liste de champs. Si la ligne de texte contient des sauts de ligne à l''intérieur de champs , ceci est considéré comme erreur (plusieurs lignes). Il est accepté pour la ligne de texte de finir en une seule nouvelle ligne ou CRLF.
blockseditor.Blockly.Msg.LANG_LISTS_FROM_CSV_TABLE_INPUT_TEXT = texte
blockseditor.Blockly.Msg.LANG_LISTS_FROM_CSV_TABLE_TITLE_FROM_CSV = liste de table csv
blockseditor.Blockly.Msg.LANG_LISTS_FROM_CSV_TABLE_TOOLTIP = Analyse un texte comme un tableau formaté au format CSV pour produire une liste de lignes, chacune d''elles est une liste de champs. Les lignes peuvent être séparées par des nouvelles lignes  (\n) ou CRLF (\r\n).
blockseditor.Blockly.Msg.LANG_LISTS_INPUT_LIST = liste
blockseditor.Blockly.Msg.LANG_LISTS_INSERT_INPUT = insérer liste élément     liste %1 index %2 élément %3
blockseditor.Blockly.Msg.LANG_LISTS_INSERT_INPUT_INDEX = index
blockseditor.Blockly.Msg.LANG_LISTS_INSERT_INPUT_ITEM = élément
blockseditor.Blockly.Msg.LANG_LISTS_INSERT_INPUT_LIST = liste
blockseditor.Blockly.Msg.LANG_LISTS_INSERT_TITLE_INSERT_LIST = insérer liste élément
blockseditor.Blockly.Msg.LANG_LISTS_INSERT_TOOLTIP = Insérer un élément dans une liste dans la position spécifiée. 
blockseditor.Blockly.Msg.LANG_LISTS_IS_EMPTY_TOOLTIP = retourne vrai si la liste est vide
blockseditor.Blockly.Msg.LANG_LISTS_IS_IN_INPUT = est dans la liste? objet %1 liste %2?
blockseditor.Blockly.Msg.LANG_LISTS_IS_IN_INPUT_LIST = liste
blockseditor.Blockly.Msg.LANG_LISTS_IS_IN_INPUT_THING = objet
blockseditor.Blockly.Msg.LANG_LISTS_IS_IN_TITLE_IS_IN = est dans la liste?
blockseditor.Blockly.Msg.LANG_LISTS_IS_IN_TOOLTIP = Retourne vrai si l''objet est un élément dans la liste et faux dans le cas contraire.
blockseditor.Blockly.Msg.LANG_LISTS_IS_LIST_INPUT_THING = objet
blockseditor.Blockly.Msg.LANG_LISTS_IS_LIST_TITLE_IS_LIST = est une liste?
blockseditor.Blockly.Msg.LANG_LISTS_IS_LIST_TOOLTIP = Teste si quelque-chose est une liste.
blockseditor.Blockly.Msg.LANG_LISTS_LENGTH_INPUT = taille de la liste liste %1
blockseditor.Blockly.Msg.LANG_LISTS_LENGTH_INPUT_LENGTH = taille de la liste
blockseditor.Blockly.Msg.LANG_LISTS_LENGTH_INPUT_LIST = liste
blockseditor.Blockly.Msg.LANG_LISTS_LENGTH_TOOLTIP = Compte le nombre d''éléments dans la liste.
blockseditor.Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_INPUT = recherche dans les paires     clé %1 paires %2 nonTrouvé %3
blockseditor.Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_INPUT_KEY = clé
blockseditor.Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_INPUT_NOT_FOUND = non trouvé
blockseditor.Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_INPUT_PAIRS = paires
blockseditor.Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_TITLE_LOOKUP_IN_PAIRS = recherche dans les paires"
blockseditor.Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_TOOLTIP = Retourne la valeur associée à la clé dans la liste des paires
blockseditor.Blockly.Msg.LANG_LISTS_PICK_RANDOM_ITEM_INPUT_LIST = liste
blockseditor.Blockly.Msg.LANG_LISTS_PICK_RANDOM_TITLE_PICK_RANDOM = choisir un élément aléatoire
blockseditor.Blockly.Msg.LANG_LISTS_PICK_RANDOM_TOOLTIP = Choisir un élément aléatoirement de la liste
blockseditor.Blockly.Msg.LANG_LISTS_POSITION_IN_INPUT = index dans la liste    objet %1 liste %2
blockseditor.Blockly.Msg.LANG_LISTS_POSITION_IN_INPUT_LIST = liste
blockseditor.Blockly.Msg.LANG_LISTS_POSITION_IN_INPUT_THING = objet
blockseditor.Blockly.Msg.LANG_LISTS_POSITION_IN_TITLE_POSITION = index dans la liste
blockseditor.Blockly.Msg.LANG_LISTS_POSITION_IN_TOOLTIP = Trouver la position de l''objet dans la liste. S''il n''est pas dans la liste, retourne 0.
blockseditor.Blockly.Msg.LANG_LISTS_REMOVE_ITEM_INPUT = supprimer liste élément    liste %1 index %2
blockseditor.Blockly.Msg.LANG_LISTS_REMOVE_ITEM_INPUT_INDEX = index
blockseditor.Blockly.Msg.LANG_LISTS_REMOVE_ITEM_INPUT_LIST = liste
blockseditor.Blockly.Msg.LANG_LISTS_REMOVE_ITEM_TITLE_REMOVE = supprimer élément de la liste
blockseditor.Blockly.Msg.LANG_LISTS_REMOVE_ITEM_TOOLTIP = Supprime l''élément à la position spécifiée de la liste
blockseditor.Blockly.Msg.LANG_LISTS_REPLACE_ITEM_INPUT = remplacer élément de liste     liste %1 indexe %2 remplacent %3
blockseditor.Blockly.Msg.LANG_LISTS_REPLACE_ITEM_INPUT_INDEX = index
blockseditor.Blockly.Msg.LANG_LISTS_REPLACE_ITEM_INPUT_LIST = liste
blockseditor.Blockly.Msg.LANG_LISTS_REPLACE_ITEM_INPUT_REPLACEMENT = remplacent
blockseditor.Blockly.Msg.LANG_LISTS_REPLACE_ITEM_TITLE_REPLACE = remplacer liste élément
blockseditor.Blockly.Msg.LANG_LISTS_REPLACE_ITEM_TOOLTIP = Remplacer un élément dans la liste à l''emplacement spécifié
blockseditor.Blockly.Msg.LANG_LISTS_SELECT_ITEM_INPUT = choisir liste élément      liste %1 index %2
blockseditor.Blockly.Msg.LANG_LISTS_SELECT_ITEM_INPUT_INDEX = index
blockseditor.Blockly.Msg.LANG_LISTS_SELECT_ITEM_INPUT_LIST = liste
blockseditor.Blockly.Msg.LANG_LISTS_SELECT_ITEM_TITLE_SELECT = sélectionner élément de la liste 
blockseditor.Blockly.Msg.LANG_LISTS_SELECT_ITEM_TOOLTIP = Retourne l''élément à la position index dans la liste
blockseditor.Blockly.Msg.LANG_LISTS_TITLE_IS_EMPTY = est une liste vide?
blockseditor.Blockly.Msg.LANG_LISTS_TO_CSV_ROW_INPUT_LIST = liste
blockseditor.Blockly.Msg.LANG_LISTS_TO_CSV_ROW_TITLE_TO_CSV = liste vers ligne csv
blockseditor.Blockly.Msg.LANG_LISTS_TO_CSV_ROW_TOOLTIP = Interprète la liste comme une ligne d''une table et retourne un texte CSV (valeur séparée par des virgules) représentant la ligne. Chaque élément dans la liste de la ligne est considéré comme un champ, et est cotée avec guillemets dans le texte CSV résultant. Les éléments sont séparées par des virgules. Le texte de la ligne retournée n''a pas de séparateur de ligne à la fin.
blockseditor.Blockly.Msg.LANG_LISTS_TO_CSV_TABLE_INPUT_LIST = liste
blockseditor.Blockly.Msg.LANG_LISTS_TO_CSV_TABLE_TITLE_TO_CSV = liste vers table csv
blockseditor.Blockly.Msg.LANG_LISTS_TO_CSV_TABLE_TOOLTIP = Interprète la liste comme un tableau en format ligne-major (row-major ) et renvoie un texte CSV (valeur séparée par des virgules) représentant la table. Chaque élément de la liste elle-même doit être une liste représentant une ligne de la table CSV. Chaque élément dans la ligne de la liste est considérée comme un champ, et est cotée avec guillemets dans le texte CSV résultant. Dans le texte renvoyé, les éléments en lignes sont séparés par des virgules et les lignes sont séparées par CRLF(\r\n).
blockseditor.Blockly.Msg.LANG_LOGIC_BOOLEAN_FALSE = faux
blockseditor.Blockly.Msg.LANG_LOGIC_BOOLEAN_TOOLTIP_FALSE = Retourne la valeur booléenne faux.
blockseditor.Blockly.Msg.LANG_LOGIC_BOOLEAN_TOOLTIP_TRUE = Retourne la valeur booléenne vrai.
blockseditor.Blockly.Msg.LANG_LOGIC_BOOLEAN_TRUE = vrai
blockseditor.Blockly.Msg.LANG_LOGIC_COMPARE_EQ = \=
blockseditor.Blockly.Msg.LANG_LOGIC_COMPARE_NEQ = \u2260
blockseditor.Blockly.Msg.LANG_LOGIC_COMPARE_TOOLTIP_EQ = Teste si deux objets sont égaux.\nLes objets à comparer peuvent être n''importe quoi, pas seulement des nombres.\nLes nombres sont considérés égaux à leur format de chaine de caractère,\npar exemple, le numéro 0 est égal au texte "0"
blockseditor.Blockly.Msg.LANG_LOGIC_COMPARE_TOOLTIP_NEQ = Retourne vrai si les deux entrées ne sont pas égales.
blockseditor.Blockly.Msg.LANG_LOGIC_COMPARE_TRANSLATED_NAME = égalité logique
blockseditor.Blockly.Msg.LANG_LOGIC_NEGATE_INPUT_NOT = pas
blockseditor.Blockly.Msg.LANG_LOGIC_NEGATE_TOOLTIP = Retourne vrai si l''entrée est fausse.\nRetourne faux si l''entrée est vraie.
blockseditor.Blockly.Msg.LANG_LOGIC_OPERATION_AND = et
blockseditor.Blockly.Msg.LANG_LOGIC_OPERATION_OR = ou
blockseditor.Blockly.Msg.LANG_LOGIC_OPERATION_TOOLTIP_AND = Retourne vrai si toutes les entrées sont égales.
blockseditor.Blockly.Msg.LANG_LOGIC_OPERATION_TOOLTIP_OR = Retourne vrai si une des entrées est vrai.
blockseditor.Blockly.Msg.LANG_MATH_ARITHMETIC_ADD = +
blockseditor.Blockly.Msg.LANG_MATH_ARITHMETIC_DIVIDE = /
blockseditor.Blockly.Msg.LANG_MATH_ARITHMETIC_MINUS = -
blockseditor.Blockly.Msg.LANG_MATH_ARITHMETIC_MULTIPLY = *
blockseditor.Blockly.Msg.LANG_MATH_ARITHMETIC_POWER = ^
blockseditor.Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_ADD = Retourne la somme des deux nombres.
blockseditor.Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_DIVIDE = Retourne le quotient des deux nombres.
blockseditor.Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_MINUS = Renvoie la différence entre les deux nombres.
blockseditor.Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_MULTIPLY = Renvoie le produit des deux nombres.
blockseditor.Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_POWER = Retourne le premier nombre\nà la puissance du second nombre.
blockseditor.Blockly.Msg.LANG_MATH_COMPARE_EQ = \=
blockseditor.Blockly.Msg.LANG_MATH_COMPARE_GT = >
blockseditor.Blockly.Msg.LANG_MATH_COMPARE_GTE = \u2265
blockseditor.Blockly.Msg.LANG_MATH_COMPARE_LT = <
blockseditor.Blockly.Msg.LANG_MATH_COMPARE_LTE = \u2264
blockseditor.Blockly.Msg.LANG_MATH_COMPARE_NEQ = \u2260
blockseditor.Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_EQ = Retourne vrai si les deux nombres sont égaux.
blockseditor.Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_GT = Retourne vrai si le premier nombre est plus grand\nque le deuxième nombre.
blockseditor.Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_GTE = Retourne vrai si le premier nombre est plus grand\nou égal au second nombre.
blockseditor.Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_LT = Retourne vrai si le premier nombre et plus petit  \nque le deuxième nombre.
blockseditor.Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_LTE = Retourne vrai si le premier nombre est plus petit\nou égal au deuxième nombre.
blockseditor.Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_NEQ = Retourne vrai si les deux nombres ne sont pas égaux.
blockseditor.Blockly.Msg.LANG_MATH_CONVERT_ANGLES_OP_DEG_TO_RAD = degrés à radians
blockseditor.Blockly.Msg.LANG_MATH_CONVERT_ANGLES_OP_RAD_TO_DEG = radians à degrés'' 
blockseditor.Blockly.Msg.LANG_MATH_CONVERT_ANGLES_TITLE_CONVERT = convertir
blockseditor.Blockly.Msg.LANG_MATH_CONVERT_ANGLES_TOOLTIP_DEG_TO_RAD = Retourne la valeur en radian dans l''intervalle\ n[-u03C0, + u03C0) correspondant à son argument en degrés.
blockseditor.Blockly.Msg.LANG_MATH_CONVERT_ANGLES_TOOLTIP_RAD_TO_DEG = Renvoie la valeur de degré dans l''intervalle\ n[0, 360) correspondant à son argument en radians.
blockseditor.Blockly.Msg.LANG_MATH_DIVIDE = u00F7
blockseditor.Blockly.Msg.LANG_MATH_DIVIDE_OPERATOR_MODULO = modulo de
blockseditor.Blockly.Msg.LANG_MATH_DIVIDE_OPERATOR_QUOTIENT = quotient de'' 
blockseditor.Blockly.Msg.LANG_MATH_DIVIDE_OPERATOR_REMAINDER = le reste de
blockseditor.Blockly.Msg.LANG_MATH_DIVIDE_TOOLTIP_MODULO = Renvoie le module.
blockseditor.Blockly.Msg.LANG_MATH_DIVIDE_TOOLTIP_QUOTIENT = Retourne le quotient.
blockseditor.Blockly.Msg.LANG_MATH_DIVIDE_TOOLTIP_REMAINDER = Renvoie le reste.
blockseditor.Blockly.Msg.LANG_MATH_FORMAT_AS_DECIMAL_INPUT = format décimal nombre %1 places %2
blockseditor.Blockly.Msg.LANG_MATH_FORMAT_AS_DECIMAL_INPUT_NUM = nombre
blockseditor.Blockly.Msg.LANG_MATH_FORMAT_AS_DECIMAL_INPUT_PLACES = places
blockseditor.Blockly.Msg.LANG_MATH_FORMAT_AS_DECIMAL_TITLE = format comme décimal
blockseditor.Blockly.Msg.LANG_MATH_FORMAT_AS_DECIMAL_TOOLTIP = Retourne le nombre au format décimal\navec un nombre spécifique de places'' 
blockseditor.Blockly.Msg.LANG_MATH_IS_A_NUMBER_INPUT_NUM = est un nombre?
blockseditor.Blockly.Msg.LANG_MATH_IS_A_NUMBER_TOOLTIP = Teste si quelque-chose est un nombre.
blockseditor.Blockly.Msg.LANG_MATH_MUTATOR_ITEM_INPUT_NUMBER = nombre
blockseditor.Blockly.Msg.LANG_MATH_NUMBER_TOOLTIP = Signaler le numéro indiqué
blockseditor.Blockly.Msg.LANG_MATH_ONLIST_OPERATOR_MAX = max
blockseditor.Blockly.Msg.LANG_MATH_ONLIST_OPERATOR_MIN = min
blockseditor.Blockly.Msg.LANG_MATH_RANDOM_FLOAT_TITLE_RANDOM = fraction aléatoire
blockseditor.Blockly.Msg.LANG_MATH_RANDOM_FLOAT_TOOLTIP = Renvoie un nombre aléatoire entre 0 et 1.
blockseditor.Blockly.Msg.LANG_MATH_RANDOM_INT_INPUT = entier aléatoire entre %1 et %2
blockseditor.Blockly.Msg.LANG_MATH_RANDOM_INT_INPUT_FROM = de
blockseditor.Blockly.Msg.LANG_MATH_RANDOM_INT_INPUT_TO = à
blockseditor.Blockly.Msg.LANG_MATH_RANDOM_INT_TITLE_RANDOM = Entier aléatoire
blockseditor.Blockly.Msg.LANG_MATH_RANDOM_INT_TOOLTIP = Retourne un nombre aléatoire compris entre la limite supérieure\net la limite inférieur. Les limites seront coupées pour être plus petites\nque 2**30.
blockseditor.Blockly.Msg.LANG_MATH_RANDOM_SEED_INPUT_TO = à
blockseditor.Blockly.Msg.LANG_MATH_RANDOM_SEED_TITLE_RANDOM = génère des ensembles de nombres aléatoires répétables
blockseditor.Blockly.Msg.LANG_MATH_RANDOM_SEED_TOOLTIP = spécifie la valeur de référence \npour le générateur de nombres aléatoires répétables
blockseditor.Blockly.Msg.LANG_MATH_ROUND_OPERATOR_CEILING = plafond
blockseditor.Blockly.Msg.LANG_MATH_ROUND_OPERATOR_FLOOR = plancher
blockseditor.Blockly.Msg.LANG_MATH_ROUND_OPERATOR_ROUND = arrondi
blockseditor.Blockly.Msg.LANG_MATH_ROUND_TOOLTIP_CEILING = Arrondi l''entrée au plus petit nombre\nmais pas moins que l''entrée
blockseditor.Blockly.Msg.LANG_MATH_ROUND_TOOLTIP_FLOOR = Arrondi l''entrée au plus grand nombre\nnon supérieur à l''entrée
blockseditor.Blockly.Msg.LANG_MATH_ROUND_TOOLTIP_ROUND = Arrondi un nombre en l''augmentant ou en le diminuant
blockseditor.Blockly.Msg.LANG_MATH_SINGLE_OP_ABSOLUTE = absolue
blockseditor.Blockly.Msg.LANG_MATH_SINGLE_OP_EXP = e^
blockseditor.Blockly.Msg.LANG_MATH_SINGLE_OP_LN = log
blockseditor.Blockly.Msg.LANG_MATH_SINGLE_OP_NEG = neg
blockseditor.Blockly.Msg.LANG_MATH_SINGLE_OP_ROOT = racine carrée
blockseditor.Blockly.Msg.LANG_MATH_SINGLE_TOOLTIP_ABS = Renvoie la valeur absolue d''un nombre.
blockseditor.Blockly.Msg.LANG_MATH_SINGLE_TOOLTIP_EXP = Renvoie e (2,71828...) à la puissance d''un nombre.
blockseditor.Blockly.Msg.LANG_MATH_SINGLE_TOOLTIP_LN = Renvoie le logarithme népérien d''un nombre, i.e. le logarithme de base e (2,71828...)
blockseditor.Blockly.Msg.LANG_MATH_SINGLE_TOOLTIP_NEG = Renvoie l''opposé d''un nombre.
blockseditor.Blockly.Msg.LANG_MATH_SINGLE_TOOLTIP_ROOT = Renvoie la racine carrée d''un nombre.
blockseditor.Blockly.Msg.LANG_MATH_TRIG_ACOS = acos
blockseditor.Blockly.Msg.LANG_MATH_TRIG_ASIN = asin
blockseditor.Blockly.Msg.LANG_MATH_TRIG_ATAN = atan
blockseditor.Blockly.Msg.LANG_MATH_TRIG_COS = cos
blockseditor.Blockly.Msg.LANG_MATH_TRIG_SIN = sin
blockseditor.Blockly.Msg.LANG_MATH_TRIG_TAN = tan
blockseditor.Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_ACOS = Fournit l''angle dans l''intervalle [0, 180)\ndegrés avec la valeur cosinus donnée.
blockseditor.Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_ASIN = Fournit l''angle dans l''intervalle  (-90,+90]\ndegrés avec la valeur sinus donnée.
blockseditor.Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_ATAN = Fournit l''angle dans l''intervalle (-90, 90) \ndegrés avec la valeur de la tangente donnée.
blockseditor.Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_COS = Fournit le cosinus de l''angle donné en degrés
blockseditor.Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_SIN = Fournit le sinus de l''angle donné en degrés
blockseditor.Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_TAN = Renvoie la tangente de l''angle en degrés.
blockseditor.Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_CALL = appeler 
blockseditor.Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_COLLAPSED_PREFIX = appeler 
blockseditor.Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_PROCEDURE = procédure
blockseditor.Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_TOOLTIP = Appeler une procédure sans retour de valeur.
blockseditor.Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_TRANSLATED_NAME = Appeler sans retour
blockseditor.Blockly.Msg.LANG_PROCEDURES_CALLRETURN_CALL = 
blockseditor.Blockly.Msg.LANG_PROCEDURES_CALLRETURN_COLLAPSED_PREFIX = appeler 
blockseditor.Blockly.Msg.LANG_PROCEDURES_CALLRETURN_PROCEDURE = 
blockseditor.Blockly.Msg.LANG_PROCEDURES_CALLRETURN_TOOLTIP = Appeler une procédure avec une valeur de retour.
blockseditor.Blockly.Msg.LANG_PROCEDURES_CALLRETURN_TRANSLATED_NAME = retour d''appel
blockseditor.Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_COLLAPSED_PREFIX = à
blockseditor.Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_DEFINE = à
blockseditor.Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_DO = faire
blockseditor.Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_PROCEDURE = procédure
blockseditor.Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_TOOLTIP = Une procédure qui ne retourne pas de valeur.
blockseditor.Blockly.Msg.LANG_PROCEDURES_DEFRETURN_COLLAPSED_PREFIX = à
blockseditor.Blockly.Msg.LANG_PROCEDURES_DEFRETURN_DEFINE = à
blockseditor.Blockly.Msg.LANG_PROCEDURES_DEFRETURN_DO = 
blockseditor.Blockly.Msg.LANG_PROCEDURES_DEFRETURN_PROCEDURE = 
blockseditor.Blockly.Msg.LANG_PROCEDURES_DEFRETURN_RETURN = résultat
blockseditor.Blockly.Msg.LANG_PROCEDURES_DEFRETURN_TOOLTIP = Une procédure qui retourne une valeur résultat.
blockseditor.Blockly.Msg.LANG_PROCEDURES_DEF_DUPLICATE_WARNING = Avertissement\:\nCette procédure a\ndeux entrées dupliquées.
blockseditor.Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_COLLAPSED_TEXT = faire/résultat
blockseditor.Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_DO = faire
blockseditor.Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_RETURN = résultat
blockseditor.Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_THEN_RETURN = résultat
blockseditor.Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_TOOLTIP = Exécute les blocs dans la partie ''faire'' et retourne un résultat. Pratique si vous avez besoin d''exécuter une procédure avant de retourner une valeur à une variable.
blockseditor.Blockly.Msg.LANG_PROCEDURES_HIGHLIGHT_DEF = Procédure en surbrillance
blockseditor.Blockly.Msg.LANG_PROCEDURES_MUTATORARG_TITLE = entrée \:
blockseditor.Blockly.Msg.LANG_PROCEDURES_MUTATORARG_TOOLTIP = 
blockseditor.Blockly.Msg.LANG_PROCEDURES_MUTATORCONTAINER_TITLE = entrées
blockseditor.Blockly.Msg.LANG_PROCEDURES_MUTATORCONTAINER_TOOLTIP = 
blockseditor.Blockly.Msg.LANG_TEXT_APPEND_APPENDTEXT = ajouter le texte
blockseditor.Blockly.Msg.LANG_TEXT_APPEND_TO = à
blockseditor.Blockly.Msg.LANG_TEXT_APPEND_TOOLTIP = Ajoute du texte à la variable "%1".
blockseditor.Blockly.Msg.LANG_TEXT_APPEND_VARIABLE = élément
blockseditor.Blockly.Msg.LANG_TEXT_CHANGECASE_OPERATOR_DOWNCASE = minuscule
blockseditor.Blockly.Msg.LANG_TEXT_CHANGECASE_OPERATOR_UPPERCASE = majuscule
blockseditor.Blockly.Msg.LANG_TEXT_CHANGECASE_TOOLTIP_DOWNCASE = Retourne une copie de sa chaine de caractère en argument convertie en minuscule.
blockseditor.Blockly.Msg.LANG_TEXT_CHANGECASE_TOOLTIP_UPPERCASE = Retourne une copie de sa chaine de caractère en argument convertie en majuscule.
blockseditor.Blockly.Msg.LANG_TEXT_COMPARE_EQUAL =  \=
blockseditor.Blockly.Msg.LANG_TEXT_COMPARE_NEQ =  ≠
blockseditor.Blockly.Msg.LANG_TEXT_COMPARE_GT =  >
blockseditor.Blockly.Msg.LANG_TEXT_COMPARE_INPUT_COMPARE = comparer textes
blockseditor.Blockly.Msg.LANG_TEXT_COMPARE_LT =  <
blockseditor.Blockly.Msg.LANG_TEXT_COMPARE_TOOLTIP_EQUAL = Teste si les chaines de caractères sont identiques, c-à-d, ont les mêmes\ncaractères dans le même ordre. Ceci est différent du \= ordinaire\ndans le case où les chaines sont des nombres\: 123 et 0123 sont égales\nmais pas en tant que texte.
blockseditor.Blockly.Msg.LANG_TEXT_COMPARE_TOOLTIP_GT = Rapporte si text1 est supérieur à texte2 d''une façon lexicographique.\n Si un texte est le préfixe de l''autre, le texte le plus court est considéré plus petit.\nLes caractères en majuscules précèdent les caractères en minuscules.
blockseditor.Blockly.Msg.LANG_TEXT_COMPARE_TOOLTIP_LT = Teste si text1 est inférieur à text2 (d''une façon lexicographique).\nSi un texte est le préfixe de l''autre, le texte le plus court est\nconsidéré comme plus petit. Les caractères en majuscules précèdent les caractères en minuscules.
blockseditor.Blockly.Msg.LANG_TEXT_CONTAINS_INPUT = contient       texte %1 sous-chaine %2
blockseditor.Blockly.Msg.LANG_TEXT_CONTAINS_INPUT_CONTAINS = contient
blockseditor.Blockly.Msg.LANG_TEXT_CONTAINS_INPUT_PIECE = sous-chaine
blockseditor.Blockly.Msg.LANG_TEXT_CONTAINS_INPUT_TEXT = texte
blockseditor.Blockly.Msg.LANG_TEXT_CONTAINS_TOOLTIP = Teste si la sous-chaine se trouve dans le texte
blockseditor.Blockly.Msg.LANG_TEXT_ISEMPTY_INPUT_ISEMPTY = est vide
blockseditor.Blockly.Msg.LANG_TEXT_ISEMPTY_TOOLTIP = Retourne vrai si la taille du\ntexte est 0, sinon retourne faux.
blockseditor.Blockly.Msg.LANG_TEXT_JOIN_ITEM_TITLE_ITEM = chaîne de caractères
blockseditor.Blockly.Msg.LANG_TEXT_JOIN_ITEM_TOOLTIP = 
blockseditor.Blockly.Msg.LANG_TEXT_JOIN_TITLE_CREATEWITH = créer un texte avec
blockseditor.Blockly.Msg.LANG_TEXT_JOIN_TITLE_JOIN = joint
blockseditor.Blockly.Msg.LANG_TEXT_JOIN_TOOLTIP = Joindre toutes les entrées pour former une seule chaine de caractère.\nS''il n''y a aucunes entrées, créé un texte vide.
blockseditor.Blockly.Msg.LANG_TEXT_LENGTH_INPUT_LENGTH = longueur
blockseditor.Blockly.Msg.LANG_TEXT_LENGTH_TOOLTIP = Retourne le nombre de caractères (espaces inclus)\ndans le texte donnée.
blockseditor.Blockly.Msg.LANG_TEXT_REPLACE_ALL_INPUT = remplacer tout texte %1 segment %2 remplacent  %3
blockseditor.Blockly.Msg.LANG_TEXT_REPLACE_ALL_INPUT_REPLACEMENT = remplacent
blockseditor.Blockly.Msg.LANG_TEXT_REPLACE_ALL_INPUT_SEGMENT = segment
blockseditor.Blockly.Msg.LANG_TEXT_REPLACE_ALL_INPUT_TEXT = texte
blockseditor.Blockly.Msg.LANG_TEXT_REPLACE_ALL_TITLE_REPLACE_ALL = tout remplacer
blockseditor.Blockly.Msg.LANG_TEXT_REPLACE_ALL_TOOLTIP = Retourne un nouveau texte obtenu par le remplacement de toutes les occurrences\ndu segment avec le remplacent
blockseditor.Blockly.Msg.LANG_TEXT_SEGMENT_AT_TOOLTIP = Extraits le segment de la taille donnée à partir du texte donné\nen commençant du texte donnée à partir de la position donnée. Position\n1 donne le début du texte.
blockseditor.Blockly.Msg.LANG_TEXT_SEGMENT_INPUT = segment       texte %1 début %2 taille %3
blockseditor.Blockly.Msg.LANG_TEXT_SEGMENT_INPUT_LENGTH = longueur
blockseditor.Blockly.Msg.LANG_TEXT_SEGMENT_INPUT_START = début
blockseditor.Blockly.Msg.LANG_TEXT_SEGMENT_INPUT_TEXT = texte
blockseditor.Blockly.Msg.LANG_TEXT_SEGMENT_TITLE_SEGMENT = segment
blockseditor.Blockly.Msg.LANG_TEXT_SPLIT_AT_SPACES_TITLE = diviser aux espaces
blockseditor.Blockly.Msg.LANG_TEXT_SPLIT_AT_TOOLTIP = Diviser le texte en sous-chaines séparées par des espaces.
blockseditor.Blockly.Msg.LANG_TEXT_SPLIT_INPUT_AT = à
blockseditor.Blockly.Msg.LANG_TEXT_SPLIT_INPUT_AT_LIST = à (liste)
blockseditor.Blockly.Msg.LANG_TEXT_SPLIT_INPUT_TEXT = texte
blockseditor.Blockly.Msg.LANG_TEXT_SPLIT_OPERATOR_SPLIT = diviser
blockseditor.Blockly.Msg.LANG_TEXT_SPLIT_OPERATOR_SPLIT_AT_ANY = diviser à n''importe
blockseditor.Blockly.Msg.LANG_TEXT_SPLIT_OPERATOR_SPLIT_AT_FIRST = diviser au début
blockseditor.Blockly.Msg.LANG_TEXT_SPLIT_OPERATOR_SPLIT_AT_FIRST_OF_ANY = diviser au début de n''importe
blockseditor.Blockly.Msg.LANG_TEXT_SPLIT_TOOLTIP_SPLIT = Divise le texte en sous-chaines en utilisant le texte ''à'' comme point de division et produit une liste\nde résultats. Diviser "one,two,three,four" à "," (virgule) retourne la liste "(one two three four)". \nDiviser "one-potato,two-potato,three-potato,four" à "-potato", retourne la liste "(one two three four)".
blockseditor.Blockly.Msg.LANG_TEXT_SPLIT_TOOLTIP_SPLIT_AT_ANY = Divise le texte donné dans une liste, en utilisant n''importe quels éléments dans la liste, ''à'' est le point de division, et retourne une liste de résultats.\nDiviser "appleberry,banana,cherry,dogfood" avec ''à'' contient une liste à deux éléments qui sont\nla virgule et "rry" va retourner une liste à 4 éléments\: "(applebe banana che dogfood)".
blockseditor.Blockly.Msg.LANG_TEXT_SPLIT_TOOLTIP_SPLIT_AT_FIRST = Divise le texte donné en deux partie en utilisant la position de la première occurrence du\ntexte ''à'' comme point de division, et retourne une liste à deux éléments consistant en la sous-chaine\navant le point de division et la sous-chaine d''après.\nDiviser "apple,banana,cherry,dogfood" avec la virgule comme point de division retourne\nune liste de deux éléments\: le premier est le texte  "apple" et le deuxième est le texte\n"banana,cherry,dogfood". \nNotez que la virgule après "apple" n''apparaît pas dans le résultat,\n parce que c''est le point diviseur.
blockseditor.Blockly.Msg.LANG_TEXT_SPLIT_TOOLTIP_SPLIT_AT_FIRST_OF_ANY = Divise le texte donné en deux éléments de liste, en utilisant la première position de n''importe\nquel élément dans la liste ''à'' comme point de division\n\nDiviser "I love apples bananas apples grapes" par la liste "(ba,ap)" retourne \nune liste de deux éléments, le premier est  "I love" et le deuxième est\n "ples bananas apples grapes."
blockseditor.Blockly.Msg.LANG_TEXT_STARTS_AT_INPUT = Commence à      texte %1 sous-chaine %2
blockseditor.Blockly.Msg.LANG_TEXT_STARTS_AT_INPUT_PIECE = sous-chaine
blockseditor.Blockly.Msg.LANG_TEXT_STARTS_AT_INPUT_STARTS_AT = commence avec
blockseditor.Blockly.Msg.LANG_TEXT_STARTS_AT_INPUT_TEXT = texte
blockseditor.Blockly.Msg.LANG_TEXT_STARTS_AT_TOOLTIP = Retourne l''index de début de la sous-chaine dans le texte\noù index 1 indique le début du texte. Retourne 0 si la\nsous-chaine n''est pas dans le texte.
blockseditor.Blockly.Msg.LANG_TEXT_TEXT_LEFT_QUOTE = \u201C
blockseditor.Blockly.Msg.LANG_TEXT_TEXT_OBFUSCATE = Texte masqué
blockseditor.Blockly.Msg.LANG_TEXT_TEXT_OBFUSCATE_TOOLTIP = Produit un texte
blockseditor.Blockly.Msg.LANG_TEXT_TEXT_RIGHT_QUOTE = \u201D
blockseditor.Blockly.Msg.LANG_TEXT_TEXT_TOOLTIP = Une chaine de caractère
blockseditor.Blockly.Msg.LANG_TEXT_TRIM_TITLE_TRIM = couper
blockseditor.Blockly.Msg.LANG_TEXT_TRIM_TOOLTIP = Retourne une copie de ses arguments textes avec\nla suppression des espaces de début et de fin.'' 
blockseditor.Blockly.Msg.LANG_VARIABLES_GET_COLLAPSED_TEXT = obtenir
blockseditor.Blockly.Msg.LANG_VARIABLES_GET_TITLE_GET = obtenir
blockseditor.Blockly.Msg.LANG_VARIABLES_GET_TOOLTIP = Retourne la valeur de cette variable.
blockseditor.Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_COLLAPSED_TEXT = global
blockseditor.Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_NAME = nom
blockseditor.Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_TITLE_INIT = initialise global
blockseditor.Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_TO = à
blockseditor.Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_TOOLTIP = Créé une variable globale et lui donne la valeur du bloc attaché 
blockseditor.Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_COLLAPSED_TEXT = local
blockseditor.Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_DEFAULT_NAME = nom
blockseditor.Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_COLLAPSED_TEXT = local
blockseditor.Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_IN_RETURN = dans
blockseditor.Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_TOOLTIP = Vous permet de créer des variables qui sont accessibles uniquement dans la partie retour de ce bloc.
blockseditor.Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_TRANSLATED_NAME = initialise local en retour
blockseditor.Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_INPUT_TO = à
blockseditor.Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_IN_DO = dans
blockseditor.Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_TITLE_INIT = initialise local
blockseditor.Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_TOOLTIP = Vous permet de créer des variables qui sont uniquement accessibles dans la partie faire de ce bloc.
blockseditor.Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_TRANSLATED_NAME = initialise local dans faire?
blockseditor.Blockly.Msg.LANG_VARIABLES_LOCAL_MUTATOR_ARG_DEFAULT_VARIABLE = x
blockseditor.Blockly.Msg.LANG_VARIABLES_LOCAL_MUTATOR_ARG_TITLE_NAME = nom
blockseditor.Blockly.Msg.LANG_VARIABLES_LOCAL_MUTATOR_CONTAINER_TITLE_LOCAL_NAMES = noms locaux
blockseditor.Blockly.Msg.LANG_VARIABLES_LOCAL_MUTATOR_CONTAINER_TOOLTIP = 
blockseditor.Blockly.Msg.LANG_VARIABLES_SET_COLLAPSED_TEXT = mettre
blockseditor.Blockly.Msg.LANG_VARIABLES_SET_TITLE_SET = mettre
blockseditor.Blockly.Msg.LANG_VARIABLES_SET_TITLE_TO = à
blockseditor.Blockly.Msg.LANG_VARIABLES_SET_TOOLTIP = Fixe cette variable pour être égale à l''entrée.
blockseditor.Blockly.Msg.LANG_VARIABLES_VARIABLE =  variable
blockseditor.Blockly.Msg.MISSING_SOCKETS_WARNINGS = Vous devez remplir tous les trous avec des blocs
blockseditor.Blockly.Msg.REMOVE_COMMENT = Supprimer le commentaire
blockseditor.Blockly.Msg.REPL_AI_NO_SEE_DEVICE = AI2 ne peut pas voir votre appareil, soyez sûr que le câble est branché et que les pilotes sont corrects.
blockseditor.Blockly.Msg.REPL_APPROVE_UPDATE =  écran car vous allez être appelé à accepter la mise à jour.
blockseditor.Blockly.Msg.REPL_CANCEL = Annuler
blockseditor.Blockly.Msg.REPL_COMPANION_OUT_OF_DATE = Votre application compagnon est obsolète. Cliquez sur "OK" pour démarrer la mise à jour. Regardez votre 
blockseditor.Blockly.Msg.REPL_COMPANION_OUT_OF_DATE_IMMEDIATE = Vous utilisez un compagnon obsolète. Vous n''avez pas besoin de mettre à jour le compagnon immédiatement mais vous devriez le faire prochainement.
blockseditor.Blockly.Msg.REPL_COMPANION_STARTED_WAITING = Compagnon en cours de lancement, attente 
blockseditor.Blockly.Msg.REPL_COMPANION_VERSION_CHECK = Contrôle de la version compagnon
blockseditor.Blockly.Msg.REPL_CONNECTING = Connexion en cours...
blockseditor.Blockly.Msg.REPL_CONNECTING_USB_CABLE = Connexion via le câble USB'' 
blockseditor.Blockly.Msg.REPL_CONNECT_TO_COMPANION = Se connecter au Compagnon
blockseditor.Blockly.Msg.REPL_DEVICES = appareil(s)
blockseditor.Blockly.Msg.REPL_DISMISS = Rejeter
blockseditor.Blockly.Msg.REPL_DO_YOU_REALLY_Q = Voulez-vous vraiment ?
blockseditor.Blockly.Msg.REPL_EMULATORS = Émulateurs
blockseditor.Blockly.Msg.REPL_EMULATOR_STARTED = Émulateur démarré, en attente 
blockseditor.Blockly.Msg.REPL_ERROR_FROM_COMPANION = Erreur de Compagnon
blockseditor.Blockly.Msg.REPL_FACTORY_RESET = Ceci va essayer de réinitialiser votre Émulateur à son état d''usine. Si vous avez auparavant mis à jour le Compagnon installé dans l''émulateur, vous allez probablement devoir le faire une autre fois. 
blockseditor.Blockly.Msg.REPL_GIVE_UP = Abandonner
blockseditor.Blockly.Msg.REPL_GOT_IT = Entendu
blockseditor.Blockly.Msg.REPL_HELPER_NOT_RUNNING = L''assistant aiStarter semble ne pas fonctionné<br /><a href\="http\://appinventor.mit.edu" target\="_blank">Besoin d''aide?</a>
blockseditor.Blockly.Msg.REPL_HELPER_Q = Assistant?
blockseditor.Blockly.Msg.REPL_KEEP_TRYING = Continuer à essayer
blockseditor.Blockly.Msg.REPL_NETWORK_CONNECTION_ERROR = Erreur de connexion réseau
blockseditor.Blockly.Msg.REPL_NETWORK_ERROR = Erreur réseau
blockseditor.Blockly.Msg.REPL_NETWORK_ERROR_RESTART = Erreur de communication réseau avec le compagnon .<br />Essayez de redémarrer le compagnon et reconnecter''  
blockseditor.Blockly.Msg.REPL_NOT_NOW = Pas maintenant
blockseditor.Blockly.Msg.REPL_NOW_DOWNLOADING = Nous sommes en train de télécharger des mises à jour du serveur App Inventor, attendez svp
blockseditor.Blockly.Msg.REPL_NO_ERROR_FIVE_SECONDS = <br/><i>Note\:</i>&nbsp;Vous n''allez pas voir une autre erreur rapportée pour 5 secondes.
blockseditor.Blockly.Msg.REPL_NO_START_EMULATOR = On ne peut pas ouvrir le compagnon avec l''émulateur
blockseditor.Blockly.Msg.REPL_OK = OK
blockseditor.Blockly.Msg.REPL_OK_LOWER = Ok
blockseditor.Blockly.Msg.REPL_PLUGGED_IN_Q = Branché?
blockseditor.Blockly.Msg.REPL_RUNTIME_ERROR = Erreur d''exécution
blockseditor.Blockly.Msg.REPL_SECONDS_ENSURE_RUNNING =  secondes pour être sûr que tout fonctionne.
blockseditor.Blockly.Msg.REPL_SOFTWARE_UPDATE = Rejeter
blockseditor.Blockly.Msg.REPL_STARTING_COMPANION_IN_EMULATOR = Lancement de l''application Compagnon dans l''émulateur.
blockseditor.Blockly.Msg.REPL_STARTING_COMPANION_ON_PHONE = Lancement de l''application compagnon dans l''appareil connecté.
blockseditor.Blockly.Msg.REPL_STARTING_EMULATOR = Lancement de l''émulateur Android <br/>Attendez svp\: ceci peut prendre une minute ou deux.
blockseditor.Blockly.Msg.REPL_UNABLE_TO_LOAD = Impossible de charger les mises à jour du serveur App Inventor
blockseditor.Blockly.Msg.REPL_UNABLE_TO_LOAD_NO_RESPOND = Impossible de charger les mises à jour du serveur App Inventor (le serveur ne répond pas)
blockseditor.Blockly.Msg.REPL_UNABLE_TO_UPDATE = Impossible d''envoyer les mises à jour à l''appareil/émulateur
blockseditor.Blockly.Msg.REPL_UPDATE_INFO = La mise à jour est actuellement en cours d''installation sur votre appareil. Regardez votre appareil (ou émulateur) et acceptez l''installation du logiciel quand c''est demandé.<br /><br />IMPORTANT\:  Quand la mise à jour est terminée, choisissez "terminé" (ne pas cliquer sur "Ouvrir"). Ensuite, allez à App Inventor dans votre navigateur, cliquez sur le menu "Connecte" et choisissez "Réinitialiser Connexion". Ensuite, reconnectez l''appareil.
blockseditor.Blockly.Msg.REPL_USB_CONNECTED_WAIT = USB connecté, attente '' 
blockseditor.Blockly.Msg.REPL_VERIFYING_COMPANION = Vérification que le Compagnon est lancé ...
blockseditor.Blockly.Msg.REPL_YOUR_CODE_IS = Votre code est
blockseditor.Blockly.Msg.SHOW_WARNINGS = Afficher les avertissements
blockseditor.Blockly.Msg.SORT_C = Trier les blocs par catégorie
blockseditor.Blockly.Msg.SORT_H = Trier les blocs par hauteur'' 
blockseditor.Blockly.Msg.SORT_W = Trier les blocs par largeur'' 
blockseditor.Blockly.Msg.VERTICAL_PARAMETERS = Arrange les paramètres verticalement
blockseditor.Blockly.Msg.WARNING_DELETE_X_BLOCKS = Voulez-vous vraiment supprimer tous les %1 blocs ?
blockseditor.Blockly.Msg.WRONG_TYPE_BLOCK_WARINGS = Ce bloc doit être connecté à un bloc d''évènement ou la définition d''une procédure
blockseditor.Blockly.Msg.TIME_YEARS = Années
blockseditor.Blockly.Msg.TIME_MONTHS = Mois
blockseditor.Blockly.Msg.TIME_WEEKS = Semaines
blockseditor.Blockly.Msg.TIME_DAYS = Jours
blockseditor.Blockly.Msg.TIME_HOURS = Heures
blockseditor.Blockly.Msg.TIME_MINUTES = Minutes
blockseditor.Blockly.Msg.TIME_SECONDS = Secondes
blockseditor.Blockly.Msg.TIME_DURATION = Durée
