
# Blocks editor definitions
blockseditor.Blockly.Msg.UNDO = Rückgängig machen
# Description: Context menus.
blockseditor.Blockly.Msg.REDO = Wiederherstellen
blockseditor.Blockly.Msg.CLEAN_UP = Blöcke aufräumen
blockseditor.Blockly.Msg.DUPLICATE_BLOCK = Duplizieren
blockseditor.Blockly.Msg.REMOVE_COMMENT = Kommentar entfernen
blockseditor.Blockly.Msg.ADD_COMMENT = Kommentar hinzufügen
blockseditor.Blockly.Msg.EXTERNAL_INPUTS = Externe Eingänge
blockseditor.Blockly.Msg.INLINE_INPUTS = Inzeilige Eingänge
blockseditor.Blockly.Msg.HORIZONTAL_PARAMETERS = Parameter horizontal anordnen
blockseditor.Blockly.Msg.VERTICAL_PARAMETERS = Parameter vertikal anordnen
blockseditor.Blockly.Msg.CONFIRM_DELETE = Löschen bestätigen
blockseditor.Blockly.Msg.DELETE_ALL_BLOCKS = Alle %1 Blöcke löschen?
blockseditor.Blockly.Msg.DELETE_BLOCK = Block löschen
blockseditor.Blockly.Msg.DELETE_X_BLOCKS = %1 Blöcke löschen
blockseditor.Blockly.Msg.COLLAPSE_BLOCK = Block zuklappen
blockseditor.Blockly.Msg.EXPAND_BLOCK = Block aufklappen
blockseditor.Blockly.Msg.DISABLE_BLOCK = Block deaktivieren
blockseditor.Blockly.Msg.ENABLE_BLOCK = Block aktivieren
blockseditor.Blockly.Msg.HELP = Hilfe
blockseditor.Blockly.Msg.EXPORT_IMAGE = Blöcke als Bild herunterladen
blockseditor.Blockly.Msg.COLLAPSE_ALL = Blöcke zuklappen
blockseditor.Blockly.Msg.EXPAND_ALL = Blöcke aufklappen
blockseditor.Blockly.Msg.ARRANGE_H = Blöcke horizontal anordnen
blockseditor.Blockly.Msg.ARRANGE_V = Blöcke vertikal anordnen
blockseditor.Blockly.Msg.ARRANGE_S = Blöcke diagonal anordnen
blockseditor.Blockly.Msg.SORT_W = Blöcke nach Breite sortieren
blockseditor.Blockly.Msg.SORT_H = Blöcke nach Höhe sortieren
blockseditor.Blockly.Msg.SORT_C = Blöcke nach Kategorie sortieren
blockseditor.Blockly.Msg.COPY_TO_BACKPACK = Zum Rucksack hinzufügen
blockseditor.Blockly.Msg.COPY_ALLBLOCKS = Alle Blöcke in den Rucksack kopieren
blockseditor.Blockly.Msg.REMOVE_FROM_BACKPACK = Vom Rucksack entfernen
blockseditor.Blockly.Msg.BACKPACK_GET = Alle Blöcke vom Rucksack einfügen
blockseditor.Blockly.Msg.BACKPACK_EMPTY = Rucksack leeren
blockseditor.Blockly.Msg.BACKPACK_CONFIRM_EMPTY = Bist Du dir sicher, dass Du den Rucksack leeren möchtest?
blockseditor.Blockly.Msg.BACKPACK_DOC_TITLE = Rucksackinformationen
blockseditor.Blockly.Msg.SHOW_BACKPACK_DOCUMENTATION = Rucksack Dokumentation anzeigen
blockseditor.Blockly.Msg.BACKPACK_DOCUMENTATION = Der Rucksack ist eine Kopieren-/Einfügen-Funktion. Sie erlaubt es, Blöcke von einem Projekt oder einem Screen  zu kopieren und in ein anderes Projekt oder einem anderen Screen einzufügen.  Um zu kopieren, kannst Du per Drag und Drop die Blöcke in den Rucksack ablegen. Um einzufügen,  klicke auf das Rucksacksymbol und lege die Blöcke in den Arbeitsbereich per Drag und Drop ab.</p><p>Falls Du den MIT App Inventor verlässt und sich Blöcke in Deinem Rucksack befinden,  werden sie noch dort sein, wenn Du dich das nächste Mal einloggst.</p><p>Für weitere Dokumentation und einem Anleitungsvideo, besuche\:</p><p><a href\="http\://ai2.appinventor.mit.edu/reference/other/backpack.html" target\="_blank">http\://ai2.appinventor.mit.edu/reference/other/backpack.html</a>
blockseditor.Blockly.Msg.ENABLE_GRID = Gitter im Arbeitsbereich einblenden
blockseditor.Blockly.Msg.DISABLE_GRID = Gitter im Arbeitsbereich ausblenden
blockseditor.Blockly.Msg.ENABLE_SNAPPING = Einrasten in Gitter aktivieren
blockseditor.Blockly.Msg.DISABLE_SNAPPING = Einrasten in Gitter deaktivieren
blockseditor.Blockly.Msg.CHANGE_VALUE_TITLE = Wert ändern\:
# Description: Variable renaming.
blockseditor.Blockly.Msg.NEW_VARIABLE = Neue Variable...
blockseditor.Blockly.Msg.NEW_VARIABLE_TITLE = Neuer Variablenname\:
blockseditor.Blockly.Msg.RENAME_VARIABLE = Variable umbenennen...
blockseditor.Blockly.Msg.RENAME_VARIABLE_TITLE = Alle "%1" Variablen umbenennen in\:
blockseditor.Blockly.Msg.VARIABLE_CATEGORY = Variablen
# Description: Toolbox.
blockseditor.Blockly.Msg.PROCEDURE_CATEGORY = Prozeduren
blockseditor.Blockly.Msg.ERROR_BLOCK_CANNOT_BE_IN_DEFINTION = Dieser Block darf nicht in einer Definition sein
# Description: Warnings/Errors
blockseditor.Blockly.Msg.ERROR_SELECT_VALID_ITEM_FROM_DROPDOWN = Wählen Sie einen gültigen Eintrag im Dropdown.
blockseditor.Blockly.Msg.ERROR_DUPLICATE_EVENT_HANDLER = Das ist ein duplizierter Ereignisbehandler für diese Komponente.
blockseditor.Blockly.Msg.ERROR_COMPONENT_DOES_NOT_EXIST = Komponente existiert nicht
blockseditor.Blockly.Msg.ERROR_BLOCK_IS_NOT_DEFINED = Dieser Block ist nicht definiert. Diesen Block löschen!
blockseditor.Blockly.Msg.ERROR_BREAK_ONLY_IN_LOOP = Der Break-Block sollte nur innerhalb von Schleifen verwendet werden
blockseditor.Blockly.Msg.LANG_COLOUR_PICKER_HELPURL = http\://appinventor.mit.edu/explore/ai2/support/blocks/colors#basic
# Description: Colour Blocks.
blockseditor.Blockly.Msg.LANG_COLOUR_PICKER_TOOLTIP = Auf das Quadrat klicken, um eine Farbe zu wählen.
blockseditor.Blockly.Msg.LANG_COLOUR_BLACK = schwarz
blockseditor.Blockly.Msg.LANG_COLOUR_WHITE = weiss
blockseditor.Blockly.Msg.LANG_COLOUR_RED = rot
blockseditor.Blockly.Msg.LANG_COLOUR_PINK = rosa
blockseditor.Blockly.Msg.LANG_COLOUR_ORANGE = orange
blockseditor.Blockly.Msg.LANG_COLOUR_YELLOW = gelb
blockseditor.Blockly.Msg.LANG_COLOUR_GREEN = grün
blockseditor.Blockly.Msg.LANG_COLOUR_CYAN = cyan
blockseditor.Blockly.Msg.LANG_COLOUR_BLUE = blau
blockseditor.Blockly.Msg.LANG_COLOUR_MAGENTA = magenta
blockseditor.Blockly.Msg.LANG_COLOUR_LIGHT_GRAY = hellgrau
blockseditor.Blockly.Msg.LANG_COLOUR_DARK_GRAY = dunkelgrau
blockseditor.Blockly.Msg.LANG_COLOUR_GRAY = grau
blockseditor.Blockly.Msg.LANG_COLOUR_SPLIT_COLOUR = Farbe aufteilen
blockseditor.Blockly.Msg.LANG_COLOUR_SPLIT_COLOUR_HELPURL = http\://appinventor.mit.edu/explore/ai2/support/blocks/colors#split
blockseditor.Blockly.Msg.LANG_COLOUR_SPLIT_COLOUR_TOOLTIP = Eine Liste mit vier Elementen, je im Bereich 0 bis 255, die die Rot-, Grün-, Blau- und Alpha-Komponenten repräsentieren.
blockseditor.Blockly.Msg.LANG_COLOUR_MAKE_COLOUR = Farbe erstellen
blockseditor.Blockly.Msg.LANG_COLOUR_MAKE_COLOUR_HELPURL = http\://appinventor.mit.edu/explore/ai2/support/blocks/colors#make
blockseditor.Blockly.Msg.LANG_COLOUR_MAKE_COLOUR_TOOLTIP = Eine Farbe mit den gegebenen Rot-, Grün-, Blau- und optionalen Alpha-Komponenten.
blockseditor.Blockly.Msg.LANG_CATEGORY_CONTROLS = Steuerung
# Description: Control Blocks
blockseditor.Blockly.Msg.LANG_CONTROLS_IF_HELPURL = http\://appinventor.mit.edu/explore/ai2/support/blocks/control#if
blockseditor.Blockly.Msg.LANG_CONTROLS_IF_MSG_IF = wenn
blockseditor.Blockly.Msg.LANG_CONTROLS_IF_MSG_ELSEIF = sonst wenn
blockseditor.Blockly.Msg.LANG_CONTROLS_IF_MSG_ELSE = sonst
blockseditor.Blockly.Msg.LANG_CONTROLS_IF_MSG_THEN = dann
blockseditor.Blockly.Msg.LANG_CONTROLS_IF_IF_TITLE_IF = wenn
blockseditor.Blockly.Msg.LANG_CONTROLS_IF_IF_TOOLTIP = Sektionen hinzufügen, entfernen oder neu ordnen,\num diesen wenn-Block neu zu konfigurieren.
blockseditor.Blockly.Msg.LANG_CONTROLS_IF_ELSEIF_TITLE_ELSEIF = sonst wenn
blockseditor.Blockly.Msg.LANG_CONTROLS_IF_ELSEIF_TOOLTIP = Eine Bedingung dem wenn-Block hinzufügen.
blockseditor.Blockly.Msg.LANG_CONTROLS_IF_ELSE_TITLE_ELSE = sonst
blockseditor.Blockly.Msg.LANG_CONTROLS_IF_ELSE_TOOLTIP = Eine sonst-Bedingung hinzufügen. Führt einen Block\nAnweisungen aus, falls keine Bedingung zutrifft.
blockseditor.Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_HELPURL = http\://appinventor.mit.edu/explore/ai2/support/blocks/control#while
blockseditor.Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_TITLE_REPEAT = wiederhole
blockseditor.Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_INPUT_DO = mache
blockseditor.Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_OPERATOR_WHILE = solange
blockseditor.Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_OPERATOR_UNTIL = bis
blockseditor.Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_TOOLTIP_WHILE = Führe einen Block Anweisungen solange die Bedingung wahr (true) ist aus.
blockseditor.Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL = Führe einen Block Anweisungen solange wie die Bedingung falsch (false) ist aus.
blockseditor.Blockly.Msg.LANG_CONTROLS_FOR_INPUT_WITH = Zähle
blockseditor.Blockly.Msg.LANG_CONTROLS_FOR_INPUT_VAR = x
blockseditor.Blockly.Msg.LANG_CONTROLS_FOR_INPUT_FROM = von
blockseditor.Blockly.Msg.LANG_CONTROLS_FOR_INPUT_TO = bis
blockseditor.Blockly.Msg.LANG_CONTROLS_FOR_INPUT_DO = mache
blockseditor.Blockly.Msg.LANG_CONTROLS_FOR_TOOLTIP = Zähle von einem Startwert bis zu einem Zielwert.\nSetze pro Zählung die Variable "%1" auf die gezählte Zahl\nund führe dann Anweisungen aus.
blockseditor.Blockly.Msg.LANG_CONTROLS_FORRANGE_HELPURL = http\://appinventor.mit.edu/explore/ai2/support/blocks/control#forrange
blockseditor.Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_ITEM = für jede
blockseditor.Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_VAR = Zahl
blockseditor.Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_START = von
blockseditor.Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_END = bis
blockseditor.Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_STEP = um
blockseditor.Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_DO = mache
blockseditor.Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_COLLAPSED_TEXT = für eine Zahl im Bereich
blockseditor.Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_COLLAPSED_PREFIX = für 
blockseditor.Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_COLLAPSED_SUFFIX =  im Bereich
blockseditor.Blockly.Msg.LANG_CONTROLS_FORRANGE_TOOLTIP = Führt die Anweisungen in der ''mache''-Sektion für jeden numerischen Wert ''im Bereich von Start bis Ende aus und erhöht den Wert jedes Mal. Benutze den gegebenen Variablennamen, um auf den aktuellen Wert zu verweisen.lockly.Msg.LANG_CONTROLS_FOREACH_HELPURL \= ''http\://appinventor.mit.edu/explore/ai2/support/blocks/control#foreach
blockseditor.Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_ITEM = für jedes
blockseditor.Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_VAR = Element
blockseditor.Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_INLIST = in Liste
blockseditor.Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_DO = mache
blockseditor.Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_COLLAPSED_TEXT = für Element in Liste
blockseditor.Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_COLLAPSED_PREFIX = für 
blockseditor.Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_COLLAPSED_SUFFIX =  in Liste
blockseditor.Blockly.Msg.LANG_CONTROLS_FOREACH_TOOLTIP = Führt die Anweisungen in der ''mache''-Sektion  für jedes Element in ''der Liste aus. Verwende den gegebenen Variablennamen, um auf das aktuelle Listenelement zu verweisen.lockly.Msg.LANG_CONTROLS_GET_HELPURL \= ''http\://appinventor.mit.edu/explore/ai2/support/blocks/control#get
blockseditor.Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_HELPURL = http\://en.wikipedia.org/wiki/Control_flow
blockseditor.Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_INPUT_OFLOOP = Schleife
blockseditor.Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK = abbrechen
blockseditor.Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE = fahre mit der nächsten Iteration fort
blockseditor.Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK = Die aktuelle Schleife abbrechen.
blockseditor.Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE = Ignoriere die restlichen Anweisungen dieser Schleife\nund fahre mit der nächsten Iteration fort.
blockseditor.Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_WARNING = Warnung\:\nDieser Block darf nur innerhalb\neiner Schleife verwendet werden.
blockseditor.Blockly.Msg.LANG_CONTROLS_WHILE_HELPURL = http\://appinventor.mit.edu/explore/ai2/support/blocks/control#while
blockseditor.Blockly.Msg.LANG_CONTROLS_WHILE_TITLE = während
blockseditor.Blockly.Msg.LANG_CONTROLS_WHILE_INPUT_TEST = 
blockseditor.Blockly.Msg.LANG_CONTROLS_WHILE_INPUT_DO = mache
blockseditor.Blockly.Msg.LANG_CONTROLS_WHILE_COLLAPSED_TEXT = während
blockseditor.Blockly.Msg.LANG_CONTROLS_WHILE_TOOLTIP = Führt die Anweisungen der ''mache''-Sektion aus, solange der test ''wahr (true) ist.lockly.Msg.LANG_CONTROLS_CHOOSE_HELPURL \= ''http\://appinventor.mit.edu/explore/ai2/support/blocks/control#choose
blockseditor.Blockly.Msg.LANG_CONTROLS_CHOOSE_TITLE = wenn''Blockly.Msg.LANG_CONTROLS_CHOOSE_INPUT_TEST \= ''
blockseditor.Blockly.Msg.LANG_CONTROLS_CHOOSE_INPUT_THEN_RETURN = dann
blockseditor.Blockly.Msg.LANG_CONTROLS_CHOOSE_INPUT_ELSE_RETURN = sonst
blockseditor.Blockly.Msg.LANG_CONTROLS_CHOOSE_COLLAPSED_TEXT = wenn
blockseditor.Blockly.Msg.LANG_CONTROLS_CHOOSE_TOOLTIP = Wenn die getestete Bedingung wahr (true) ist,'' gebe das Resultat der Auswertung des Ausdrucks, der im ''dann''-Sektion eingefügt ist, zurück; ansonsten gebe das Resultat der Auswertung des Ausdrucks, der im ''sonst''-Sektion eingefügt ist, zurück; es wird maximal ein Ausdruck der Rückgabesektionen ausgewertet.lockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_HELPURL \= ''http\://appinventor.mit.edu/explore/ai2/support/blocks/control#doreturn
blockseditor.Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_INPUT_DO = mache
blockseditor.Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_INPUT_RETURN = Resultat
blockseditor.Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_TOOLTIP = Führt die Blöcke in ''mache'' aus und gibt eine Anweisung zurück. Nützlich, wenn eine Prozedur ausgeführt werden soll bevor ein Wert einer Variable zurückgegeben wird.
blockseditor.Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_COLLAPSED_TEXT = mache/Resultat
blockseditor.Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_TITLE = mache Resultat
blockseditor.Blockly.Msg.LANG_CONTROLS_EVAL_BUT_IGNORE_TITLE = auswerten aber Resultat ignorieren''Blockly.Msg.LANG_CONTROLS_EVAL_BUT_IGNORE_HELPURL \= ''http\://appinventor.mit.edu/explore/ai2/support/blocks/control#evaluate
blockseditor.Blockly.Msg.LANG_CONTROLS_EVAL_BUT_COLLAPSED_TEXT = auswerten aber ignorieren''Blockly.Msg.LANG_CONTROLS_EVAL_BUT_IGNORE_TOOLTIP \= ''Führt den verbundenen Codeblock aus und ignoriert den zurückgegebenen Wert (falls vorhanden). Nützlich, wenn eine Prozedur aufgerufen werden soll, die einen Rückgabewert hat, der nicht benötigt wird.
blockseditor.Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_HELPURL = http\://appinventor.mit.edu/explore/ai2/support/blocks/control#openscreen
# Description: /* [lyn, 10/14/13] Removed for now. May come back some day.Blockly.Msg.LANG_CONTROLS_NOTHING_TITLE = 'nothing';Blockly.Msg.LANG_CONTROLS_NOTHING_HELPURL = 'http://appinventor.mit.edu/explore/ai2/support/blocks/control#nothing';Blockly.Msg.LANG_CONTROLS_NOTHING_TOOLTIP = 'Returns nothing. Used to initialize variables or can be plugged into a return socket if no value needed to return. this is equivalent to null or None.';*/
blockseditor.Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_TITLE = ein weiterer Bildschirm öffnen
blockseditor.Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_INPUT_SCREENNAME = bildschirmName
blockseditor.Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_COLLAPSED_TEXT = Bildschirm öffnen
blockseditor.Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_TOOLTIP = Öffnet einen neuen Bildschirm in einer Multi-Bildschirm-App.
blockseditor.Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_HELPURL = http\://appinventor.mit.edu/explore/ai2/support/blocks/control#openscreenwithvalue
blockseditor.Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_TITLE = öffne einen weiteren Bildschirm mit startwert
blockseditor.Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_INPUT_SCREENNAME = bildschirmName
blockseditor.Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_INPUT_STARTVALUE = startWert
blockseditor.Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_COLLAPSED_TEXT = öffne Bildschirm mit Wert''Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_TOOLTIP \= ''Öffnet einen neuen Bildschirm in einer Multi-Bildschirm-App und gibt den ''Startwert diesem Bildschirm weiter.lockly.Msg.LANG_CONTROLS_GET_START_VALUE_HELPURL \= ''http\://appinventor.mit.edu/explore/ai2/support/blocks/control#getstartvalue
blockseditor.Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_TITLE = gib Startwert
blockseditor.Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_INPUT_SCREENNAME = bildschirmName
blockseditor.Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_INPUT_STARTVALUE = startwert
blockseditor.Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_COLLAPSED_TEXT = gib Startwert
blockseditor.Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_TOOLTIP = Gibt den Startwert, der diesem Bildschirm beim Öffnen weitergegeben wurde, ''zurück. Normalerweise wird der Startwert durch einen anderen Bildschirm des Multi-Bildschirm-App weitergegeben. Wenn kein Wert weitergegeben wurde, wird ein leerer Text zurückgegeben.lockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_HELPURL \= ''http\://appinventor.mit.edu/explore/ai2/support/blocks/control#closescreen
blockseditor.Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_TITLE = Bildschirm schliessen
blockseditor.Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_COLLAPSED_TEXT = Bildschirm schliessen
blockseditor.Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_TOOLTIP = Schliesst den aktuellen Bildschirm
blockseditor.Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_VALUE_HELPURL = http\://appinventor.mit.edu/explore/ai2/support/blocks/control#closescreenwithvalue
blockseditor.Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_VALUE_TITLE = Schliesse Bildschirm mit Wert
blockseditor.Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_VALUE_INPUT_RESULT = Resultat
blockseditor.Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_VALUE_COLLAPSED_TEXT = Schliesse Bildschirm mit Wert
blockseditor.Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_VALUE_TOOLTIP = Schliesst den aktuellen Bildschirm und gibt ein Resultat dem Bildschirm, der ''diesen Bildschirm geöffnet hat, zurück.lockly.Msg.LANG_CONTROLS_CLOSE_APPLICATION_HELPURL \= ''http\://appinventor.mit.edu/explore/ai2/support/blocks/control#closeapp
blockseditor.Blockly.Msg.LANG_CONTROLS_CLOSE_APPLICATION_TITLE = Applikation schliessen
blockseditor.Blockly.Msg.LANG_CONTROLS_CLOSE_APPLICATION_COLLAPSED_TEXT = Applikation schliessen
blockseditor.Blockly.Msg.LANG_CONTROLS_CLOSE_APPLICATION_TOOLTIP = Schliesst alle Bildschirme in dieser App und stoppt die App.
blockseditor.Blockly.Msg.LANG_CONTROLS_GET_PLAIN_START_TEXT_HELPURL = http\://appinventor.mit.edu/explore/ai2/support/blocks/control#getplainstarttext
blockseditor.Blockly.Msg.LANG_CONTROLS_GET_PLAIN_START_TEXT_TITLE = gib Starttext
blockseditor.Blockly.Msg.LANG_CONTROLS_GET_PLAIN_START_TEXT_COLLAPSED_TEXT = gib Starttext
blockseditor.Blockly.Msg.LANG_CONTROLS_GET_PLAIN_START_TEXT_TOOLTIP = Gibt den Klartext zurück, der diesem Bildschirm weitergegeben wurde, ''als er von einer anderen App gestartet wurde. Falls kein Wert weitergegeben wurde, wird ein leerer Text zurückgegeben. Für Multi-Bildschirm-Apps sollte gib Startwert statt gib Starttext verwendet werden.lockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_PLAIN_TEXT_HELPURL \= ''http\://appinventor.mit.edu/explore/ai2/support/blocks/control#closescreenwithplaintext
blockseditor.Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_PLAIN_TEXT_TITLE = schliesse Bildschirm mit Klartext
blockseditor.Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_PLAIN_TEXT_INPUT_TEXT = Text
blockseditor.Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_PLAIN_TEXT_COLLAPSED_TEXT = schliesse Bildschirm mit Klartext
blockseditor.Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_PLAIN_TEXT_TOOLTIP = Schliesst den aktuellen Bildschirm und gibt den Text der App zurück, die diesen Bildschirm ''geöffnet hat.   Dieser Befehl ist für das Zurückgeben von Text an Aktivitäten, die nicht im App Inventor sind. Der Befehl wird nicht für die Rückgabe an App Inventor Bildschirme verwendet. Für App Inventor Bildschirme, wie Multi-Bildschirm-Apps, sollte schliesse Bildschirm mit Wert statt schliesseScreen mit Klartext verwendet werden.lockly.Msg.LANG_CONTROLS_BREAK_HELPURL \= ''http\://appinventor.mit.edu/explore/ai2/support/blocks/control#break
blockseditor.Blockly.Msg.LANG_CONTROLS_BREAK_TITLE = break
blockseditor.Blockly.Msg.LANG_CONTROLS_BREAK_INPUT_TEXT = Wert
blockseditor.Blockly.Msg.LANG_CONTROLS_BREAK_COLLAPSED_TEXT = break
blockseditor.Blockly.Msg.LANG_CATEGORY_LOGIC = Logik
# Description: Logic Blocks.
blockseditor.Blockly.Msg.LANG_LOGIC_COMPARE_HELPURL = http\://en.wikipedia.org/wiki/Inequality_(mathematics)
blockseditor.Blockly.Msg.LANG_LOGIC_COMPARE_HELPURL_EQ = http\://appinventor.mit.edu/explore/ai2/support/blocks/logic#\=
blockseditor.Blockly.Msg.LANG_LOGIC_COMPARE_HELPURL_NEQ = http\://appinventor.mit.edu/explore/ai2/support/blocks/logic#not\=
blockseditor.Blockly.Msg.LANG_LOGIC_COMPARE_TOOLTIP_EQ = Testet, ob zwei Dinge gleich sind. \nDie Dinge, die verglichen werden, können irgendwelche Dinge sein, nicht nur Zahlen. \nZahlen werden gleich wie ihre gedruckte Form als Zeichenkette betrachtet. \nZum Beispiel ist die Zahl 0 gleich wie der Text "0". Zudem sind zwei Zeichenketten, \ndie Zahlen repräsentieren, gleich, wenn die Zahlen gleich sind, zum Beispiel \n"1" ist gleich wie "01".
blockseditor.Blockly.Msg.LANG_LOGIC_COMPARE_TOOLTIP_NEQ = Gibt wahr (true) zurück, wenn die Eingaben nicht gleich sind.
blockseditor.Blockly.Msg.LANG_LOGIC_COMPARE_TRANSLATED_NAME = logik gleich
blockseditor.Blockly.Msg.LANG_LOGIC_COMPARE_EQ = \=
blockseditor.Blockly.Msg.LANG_LOGIC_COMPARE_NEQ = \u2260
blockseditor.Blockly.Msg.LANG_LOGIC_OPERATION_HELPURL_AND = http\://appinventor.mit.edu/explore/ai2/support/blocks/logic#and
blockseditor.Blockly.Msg.LANG_LOGIC_OPERATION_HELPURL_OR = http\://appinventor.mit.edu/explore/ai2/support/blocks/logic#or
blockseditor.Blockly.Msg.LANG_LOGIC_OPERATION_AND = und
blockseditor.Blockly.Msg.LANG_LOGIC_OPERATION_OR = oder
blockseditor.Blockly.Msg.LANG_LOGIC_OPERATION_TOOLTIP_AND = Gibt wahr (true) zurück, wenn alle Eingaben wahr sind.
blockseditor.Blockly.Msg.LANG_LOGIC_OPERATION_TOOLTIP_OR = Gibt wahr (true) zurück, wenn irgendeine Eingabe wahr (true) ist.
blockseditor.Blockly.Msg.LANG_LOGIC_NEGATE_HELPURL = http\://appinventor.mit.edu/explore/ai2/support/blocks/logic#not
blockseditor.Blockly.Msg.LANG_LOGIC_NEGATE_INPUT_NOT = nicht
blockseditor.Blockly.Msg.LANG_LOGIC_NEGATE_TOOLTIP = Gibt wahr (true) zurück, wenn die Eingabe falsch (false) ist.\nGibt falsch (false) zurück, wenn die Eingabe wahr (true) ist.
blockseditor.Blockly.Msg.LANG_LOGIC_BOOLEAN_TRUE_HELPURL = http\://appinventor.mit.edu/explore/ai2/support/blocks/logic#true
blockseditor.Blockly.Msg.LANG_LOGIC_BOOLEAN_FALSE_HELPURL = http\://appinventor.mit.edu/explore/ai2/support/blocks/logic#false
blockseditor.Blockly.Msg.LANG_LOGIC_BOOLEAN_TRUE = wahr
blockseditor.Blockly.Msg.LANG_LOGIC_BOOLEAN_FALSE = falsch
blockseditor.Blockly.Msg.LANG_LOGIC_BOOLEAN_TOOLTIP_TRUE = Gibt die Boolean wahr (true) zurück.
blockseditor.Blockly.Msg.LANG_LOGIC_BOOLEAN_TOOLTIP_FALSE = Gibt die Boolean falsch (false) zurück.
blockseditor.Blockly.Msg.LANG_CATEGORY_MATH = Mathematik
# Description: Math Blocks.
blockseditor.Blockly.Msg.LANG_MATH_NUMBER_HELPURL = http\://appinventor.mit.edu/explore/ai2/support/blocks/math#number
blockseditor.Blockly.Msg.LANG_MATH_NUMBER_TOOLTIP = Eine Zahl.
blockseditor.Blockly.Msg.LANG_MATH_MUTATOR_ITEM_INPUT_NUMBER = Zahl
blockseditor.Blockly.Msg.LANG_MATH_COMPARE_HELPURL = 
blockseditor.Blockly.Msg.LANG_MATH_COMPARE_HELPURL_EQ = http\://appinventor.mit.edu/explore/ai2/support/blocks/math#\=
blockseditor.Blockly.Msg.LANG_MATH_COMPARE_HELPURL_NEQ = http\://appinventor.mit.edu/explore/ai2/support/blocks/math#not\=
blockseditor.Blockly.Msg.LANG_MATH_COMPARE_HELPURL_LT = http\://appinventor.mit.edu/explore/ai2/support/blocks/math#lt
blockseditor.Blockly.Msg.LANG_MATH_COMPARE_HELPURL_LTE = http\://appinventor.mit.edu/explore/ai2/support/blocks/math#lte
blockseditor.Blockly.Msg.LANG_MATH_COMPARE_HELPURL_GT = http\://appinventor.mit.edu/explore/ai2/support/blocks/math#gt
blockseditor.Blockly.Msg.LANG_MATH_COMPARE_HELPURL_GTE = http\://appinventor.mit.edu/explore/ai2/support/blocks/math#gte
blockseditor.Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_EQ = Gibt wahr (true) zurück, wenn beide Zahlen gleich sind.
blockseditor.Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_NEQ = Gibt wahr (true) zurück, wenn beide Zahlen nicht gleich sind.
blockseditor.Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_LT = Gibt wahr (true) zurück, wenn die erste Zahl kleiner als\ndie zweite Zahl ist.
blockseditor.Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_LTE = Gibt wahr (true) zurück, wenn die erste Zahl kleiner\noder gleich die zweite Zahl ist.
blockseditor.Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_GT = Gibt wahr (true) zurück, wenn die erste Zahl grösser\nals die zweite Zahl ist.
blockseditor.Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_GTE = Gibt wahr (true) zurück, wenn die erste Zahl grösser\noder gleich die zweite Zahl ist.
blockseditor.Blockly.Msg.LANG_MATH_COMPARE_EQ = \=
blockseditor.Blockly.Msg.LANG_MATH_COMPARE_NEQ = \u2260
blockseditor.Blockly.Msg.LANG_MATH_COMPARE_LT = <
blockseditor.Blockly.Msg.LANG_MATH_COMPARE_LTE = \u2264
blockseditor.Blockly.Msg.LANG_MATH_COMPARE_GT = >
blockseditor.Blockly.Msg.LANG_MATH_COMPARE_GTE = \u2265
blockseditor.Blockly.Msg.LANG_MATH_ARITHMETIC_HELPURL_ADD = http\://appinventor.mit.edu/explore/ai2/support/blocks/math#add
blockseditor.Blockly.Msg.LANG_MATH_ARITHMETIC_HELPURL_MINUS = http\://appinventor.mit.edu/explore/ai2/support/blocks/math#subtract
blockseditor.Blockly.Msg.LANG_MATH_ARITHMETIC_HELPURL_MULTIPLY = http\://appinventor.mit.edu/explore/ai2/support/blocks/math#multiply
blockseditor.Blockly.Msg.LANG_MATH_ARITHMETIC_HELPURL_DIVIDE = http\://appinventor.mit.edu/explore/ai2/support/blocks/math#divide
blockseditor.Blockly.Msg.LANG_MATH_ARITHMETIC_HELPURL_POWER = http\://appinventor.mit.edu/explore/ai2/support/blocks/math#exponent
blockseditor.Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_ADD = Gibt die Summe der beiden Zahlen zurück.
blockseditor.Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_MINUS = Gibt die Differenz der beiden Zahlen zurück.
blockseditor.Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_MULTIPLY = Gibt das Produkt der beiden Zahlen zurück.
blockseditor.Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_DIVIDE = Gibt den Quotient der beiden Zahlen zurück.
blockseditor.Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_POWER = Gibt das Resultat der ersten Zahl potenziert\nmit der zweiten Zahl zurück.
blockseditor.Blockly.Msg.LANG_MATH_ARITHMETIC_ADD = +
blockseditor.Blockly.Msg.LANG_MATH_ARITHMETIC_MINUS = -
blockseditor.Blockly.Msg.LANG_MATH_ARITHMETIC_MULTIPLY = *
blockseditor.Blockly.Msg.LANG_MATH_ARITHMETIC_DIVIDE = /
blockseditor.Blockly.Msg.LANG_MATH_ARITHMETIC_POWER = ^
blockseditor.Blockly.Msg.LANG_MATH_SINGLE_OP_ROOT = Quadratwurzel
# Description: /*Blockly.Msg.LANG_MATH_CHANGE_TITLE_CHANGE = 'change';Blockly.Msg.LANG_MATH_CHANGE_TITLE_ITEM = 'item';Blockly.Msg.LANG_MATH_CHANGE_INPUT_BY = 'by';Blockly.Msg.LANG_MATH_CHANGE_TOOLTIP = 'Add a number to variable "%1".';*/
blockseditor.Blockly.Msg.LANG_MATH_SINGLE_OP_ABSOLUTE = Absolutwert
blockseditor.Blockly.Msg.LANG_MATH_SINGLE_OP_NEG = neg
blockseditor.Blockly.Msg.LANG_MATH_SINGLE_OP_LN = log
blockseditor.Blockly.Msg.LANG_MATH_SINGLE_OP_EXP = e^
blockseditor.Blockly.Msg.LANG_MATH_SINGLE_TOOLTIP_ROOT = Gibt die Quadratwurzel einer Zahl zurück.
blockseditor.Blockly.Msg.LANG_MATH_SINGLE_HELPURL_ROOT = http\://appinventor.mit.edu/explore/ai2/support/blocks/math#sqrt
blockseditor.Blockly.Msg.LANG_MATH_SINGLE_TOOLTIP_ABS = Gibt den Absolutwert einer Zahl zurück.
blockseditor.Blockly.Msg.LANG_MATH_SINGLE_HELPURL_ABS = http\://appinventor.mit.edu/explore/ai2/support/blocks/math#abs
blockseditor.Blockly.Msg.LANG_MATH_SINGLE_TOOLTIP_NEG = Gibt die Negation einer Zahl zurück.
blockseditor.Blockly.Msg.LANG_MATH_SINGLE_HELPURL_NEG = http\://appinventor.mit.edu/explore/ai2/support/blocks/math#neg
blockseditor.Blockly.Msg.LANG_MATH_SINGLE_TOOLTIP_LN = Gibt den natürlichen Logarithmus zurück, d.h. den Logarithmus zur Basis e (2.71828...)
blockseditor.Blockly.Msg.LANG_MATH_SINGLE_HELPURL_LN = http\://appinventor.mit.edu/explore/ai2/support/blocks/math#log
blockseditor.Blockly.Msg.LANG_MATH_SINGLE_TOOLTIP_EXP = Gibt e (2.71828...) potenziert mit einer Zahl zurück.
blockseditor.Blockly.Msg.LANG_MATH_SINGLE_HELPURL_EXP = http\://appinventor.mit.edu/explore/ai2/support/blocks/math#e
blockseditor.Blockly.Msg.LANG_TEXT_SPLIT_AT_SPACES_HELPURL = http\://appinventor.mit.edu/explore/ai2/support/blocks/text#splitspaces
# Description: /*Blockly.Msg.LANG_TEXT_PROMPT_HELPURL = 'http://www.liv.ac.uk/HPC/HTMLF90Course/HTMLF90CourseNotesnode92.html';Blockly.Msg.LANG_TEXT_PROMPT_TITLE_PROMPT_FOR = 'prompt for';Blockly.Msg.LANG_TEXT_PROMPT_TITILE_WITH_MESSAGE = 'with message';Blockly.Msg.LANG_TEXT_PROMPT_TOOLTIP = 'Prompt for user input with the specified text.';Blockly.Msg.LANG_TEXT_PROMPT_TYPE_TEXT = 'text';Blockly.Msg.LANG_TEXT_PROMPT_TYPE_NUMBER = 'number';*/
blockseditor.Blockly.Msg.LANG_TEXT_SPLIT_AT_SPACES_TITLE = bei Leerzeichen teilen
blockseditor.Blockly.Msg.LANG_TEXT_SPLIT_AT_TOOLTIP = Teile den Text in Stücke, die von Leerzeichen getrennt sind.
blockseditor.Blockly.Msg.LANG_TEXT_SEGMENT_HELPURL = http\://appinventor.mit.edu/explore/ai2/support/blocks/text#segment
blockseditor.Blockly.Msg.LANG_TEXT_SEGMENT_TITLE_SEGMENT = Segment
blockseditor.Blockly.Msg.LANG_TEXT_SEGMENT_INPUT_START = Start
blockseditor.Blockly.Msg.LANG_TEXT_SEGMENT_INPUT_LENGTH = Länge
blockseditor.Blockly.Msg.LANG_TEXT_SEGMENT_INPUT_TEXT = Text
blockseditor.Blockly.Msg.LANG_TEXT_SEGMENT_INPUT = Segment  Text %1 Start %2 Länge %3
blockseditor.Blockly.Msg.LANG_TEXT_SEGMENT_AT_TOOLTIP = Extrahiert das Segment der gegebenen Länge vom gegebenen Text,\n''beginnend von der gegebenen Position im gegebenen Text. Position\n1 kennzeichnet den Anfang des Textes.lockly.Msg.LANG_TEXT_REPLACE_ALL_HELPURL \= ''http\://appinventor.mit.edu/explore/ai2/support/blocks/text#replaceall
blockseditor.Blockly.Msg.LANG_TEXT_REPLACE_ALL_INPUT_SEGMENT = Segment
blockseditor.Blockly.Msg.LANG_TEXT_REPLACE_ALL_INPUT_TEXT = Text
blockseditor.Blockly.Msg.LANG_TEXT_REPLACE_ALL_TITLE_REPLACE_ALL = alle ersetzen
blockseditor.Blockly.Msg.LANG_TEXT_REPLACE_ALL_INPUT_REPLACEMENT = Ersatz
blockseditor.Blockly.Msg.LANG_TEXT_REPLACE_ALL_INPUT = ersetze alle Text %1 Segment %2 Ersatz %3
blockseditor.Blockly.Msg.LANG_TEXT_REPLACE_ALL_TOOLTIP = Gibt einen neuen Text zurück, der erhalten wird, indem alle Vorkomnisse des Segments\n''mit dem Ersatz ersetzt werden.lockly.Msg.LANG_TEXT_TEXT_IS_STRING_HELPURL \= ''http\://appinventor.mit.edu/explore/ai2/support/blocks/text#isstring
blockseditor.Blockly.Msg.LANG_TEXT_TEXT_IS_STRING_TITLE = ist eine Zeichenkette?
blockseditor.Blockly.Msg.LANG_TEXT_TEXT_IS_STRING_INPUT_THING = Ding
blockseditor.Blockly.Msg.LANG_TEXT_TEXT_IS_STRING_TOOLTIP = Gibt wahr (true) zurück, wenn <code>Ding</code> eine Zeichenkette ist.
blockseditor.Blockly.Msg.LANG_CATEGORY_LISTS = Listen
# Description: Lists Blocks.
blockseditor.Blockly.Msg.LANG_LISTS_CREATE_EMPTY_TITLE = leere Liste erstellen
# Description: lockly.Msg.LANG_LISTS_CREATE_EMPTY_HELPURL = 'http://en.wikipedia.org/wiki/Linked_list#Empty_lists';
blockseditor.Blockly.Msg.LANG_LISTS_CREATE_WITH_EMPTY_HELPURL = http\://appinventor.mit.edu/explore/ai2/support/blocks/lists#makealist
# Description: lockly.Msg.LANG_LISTS_CREATE_EMPTY_TOOLTIP = 'Returns a list, of length 0, containing no data records';
blockseditor.Blockly.Msg.LANG_LISTS_CREATE_WITH_TITLE_MAKE_LIST = Liste erstellen
blockseditor.Blockly.Msg.LANG_LISTS_CREATE_WITH_TOOLTIP = Eine Liste mit einer beliebigen Anzahl Elemente erstellen.
blockseditor.Blockly.Msg.LANG_LISTS_CREATE_WITH_CONTAINER_TITLE_ADD = Liste
blockseditor.Blockly.Msg.LANG_LISTS_CREATE_WITH_CONTAINER_TOOLTIP = Sektionen hinzufügen, entfernen oder neu ordnen, um diesen Listenblock neu zu konfigurieren.
blockseditor.Blockly.Msg.LANG_LISTS_CREATE_WITH_ITEM_TITLE = Element
blockseditor.Blockly.Msg.LANG_LISTS_CREATE_WITH_ITEM_TOOLTIP = Ein Element der Liste hinzufügen.
blockseditor.Blockly.Msg.LANG_LISTS_ADD_ITEM_TITLE = Element
blockseditor.Blockly.Msg.LANG_LISTS_ADD_ITEM_TOOLTIP = Ein Element der Liste hinzufügen.
blockseditor.Blockly.Msg.LANG_LISTS_ADD_ITEM_HELPURL = http\://appinventor.mit.edu/explore/ai2/support/blocks/lists#additems
blockseditor.Blockly.Msg.LANG_LISTS_SELECT_ITEM_TITLE_HELPURL = http\://appinventor.mit.edu/explore/ai2/support/blocks/lists#selectlistitem
blockseditor.Blockly.Msg.LANG_LISTS_SELECT_ITEM_TITLE_SELECT = Listenelement wählen
blockseditor.Blockly.Msg.LANG_LISTS_SELECT_ITEM_INPUT_LIST = Liste
blockseditor.Blockly.Msg.LANG_LISTS_SELECT_ITEM_INPUT_INDEX = Index
blockseditor.Blockly.Msg.LANG_LISTS_SELECT_ITEM_INPUT = Listenelement wählen  Liste %1 Index %2
blockseditor.Blockly.Msg.LANG_LISTS_SELECT_ITEM_TOOLTIP = Gibt das Element der Liste an der Position Index zurück.
blockseditor.Blockly.Msg.LANG_LISTS_IS_IN_HELPURL = http\://appinventor.mit.edu/explore/ai2/support/blocks/lists#inlist
blockseditor.Blockly.Msg.LANG_LISTS_IS_IN_TITLE_IS_IN = ist in der Liste?
blockseditor.Blockly.Msg.LANG_LISTS_IS_IN_INPUT_THING = Ding
blockseditor.Blockly.Msg.LANG_LISTS_IS_IN_INPUT_LIST = Liste
blockseditor.Blockly.Msg.LANG_LISTS_IS_IN_INPUT = ist in der Liste? Ding %1 Liste %2''Blockly.Msg.LANG_LISTS_IS_IN_TOOLTIP \= ''Gibt wahr (true) zurück, wenn Ding ein Element der Liste ist, und ''falsch (false) falls nicht.lockly.Msg.LANG_LISTS_POSITION_IN_HELPURL \= ''http\://appinventor.mit.edu/explore/ai2/support/blocks/lists#indexinlist
blockseditor.Blockly.Msg.LANG_LISTS_POSITION_IN_TITLE_POSITION = Index in Liste
blockseditor.Blockly.Msg.LANG_LISTS_POSITION_IN_INPUT_THING = Ding
blockseditor.Blockly.Msg.LANG_LISTS_POSITION_IN_INPUT_LIST = Liste
blockseditor.Blockly.Msg.LANG_LISTS_POSITION_IN_INPUT = Index in Liste  Ding %1 Liste %2
blockseditor.Blockly.Msg.LANG_LISTS_POSITION_IN_TOOLTIP = Finde die Position von Ding in der Liste. Falls Ding nicht in ''der Liste ist, 0 zurückgeben.lockly.Msg.LANG_LISTS_PICK_RANDOM_ITEM_HELPURL \= ''http\://appinventor.mit.edu/explore/ai2/support/blocks/lists#pickrandomitem
blockseditor.Blockly.Msg.LANG_LISTS_PICK_RANDOM_TITLE_PICK_RANDOM = ein zufälliges Element wählen
blockseditor.Blockly.Msg.LANG_LISTS_PICK_RANDOM_ITEM_INPUT_LIST = Liste
blockseditor.Blockly.Msg.LANG_LISTS_PICK_RANDOM_TOOLTIP = Ein zufälliges Element der Liste wählen.
blockseditor.Blockly.Msg.LANG_LISTS_REPLACE_ITEM_HELPURL = http\://appinventor.mit.edu/explore/ai2/support/blocks/lists#replace
blockseditor.Blockly.Msg.LANG_LISTS_REPLACE_ITEM_TITLE_REPLACE = Listenelement ersetzen
blockseditor.Blockly.Msg.LANG_LISTS_REPLACE_ITEM_INPUT_LIST = Liste
blockseditor.Blockly.Msg.LANG_LISTS_REPLACE_ITEM_INPUT_INDEX = Index
blockseditor.Blockly.Msg.LANG_LISTS_REPLACE_ITEM_INPUT_REPLACEMENT = Ersatz
blockseditor.Blockly.Msg.LANG_LISTS_REPLACE_ITEM_INPUT = Listenelement ersetzen  Liste %1 Index %2 Ersatz %3
blockseditor.Blockly.Msg.LANG_LISTS_REPLACE_ITEM_TOOLTIP = Das nte Element einer Liste ersetzen.
blockseditor.Blockly.Msg.LANG_LISTS_REMOVE_ITEM_HELPURL = http\://appinventor.mit.edu/explore/ai2/support/blocks/lists#removeitem
blockseditor.Blockly.Msg.LANG_LISTS_REMOVE_ITEM_TITLE_REMOVE = Listenelement entfernen
blockseditor.Blockly.Msg.LANG_LISTS_REMOVE_ITEM_INPUT_LIST = Liste
blockseditor.Blockly.Msg.LANG_LISTS_REMOVE_ITEM_INPUT_INDEX = Index
blockseditor.Blockly.Msg.LANG_LISTS_REMOVE_ITEM_INPUT = Listenelement entfernen  Liste %1 Index %2
blockseditor.Blockly.Msg.LANG_LISTS_REMOVE_ITEM_TOOLTIP = Entfernt das Element an der gegebenen Position in der Liste.
blockseditor.Blockly.Msg.LANG_LISTS_LENGTH_HELPURL = http\://appinventor.mit.edu/explore/ai2/support/blocks/lists#lengthoflist
# Description: /*Blockly.Msg.LANG_LISTS_REPEAT_HELPURL = 'http://publib.boulder.ibm.com/infocenter/lnxpcomp/v8v101/index.jsp?topic=%2Fcom.ibm.xlcpp8l.doc%2Flanguage%2Fref%2Farsubex.htm';Blockly.Msg.LANG_LISTS_REPEAT_TITLE_CREATE = 'create list with item';Blockly.Msg.LANG_LISTS_REPEAT_INPUT_REPEATED = 'repeated';Blockly.Msg.LANG_LISTS_REPEAT_INPUT_TIMES = 'times';Blockly.Msg.LANG_LISTS_REPEAT_TOOLTIP = 'Creates a list consisting of the given value\n' +'repeated the specified number of times.';*/
blockseditor.Blockly.Msg.LANG_LISTS_LENGTH_INPUT_LENGTH = Länge der Liste
blockseditor.Blockly.Msg.LANG_LISTS_LENGTH_INPUT_LIST = Liste
blockseditor.Blockly.Msg.LANG_LISTS_LENGTH_INPUT = Länge der Liste Liste %1
blockseditor.Blockly.Msg.LANG_LISTS_LENGTH_TOOLTIP = Anzahl der Listenelemente zählen.
blockseditor.Blockly.Msg.LANG_LISTS_APPEND_LIST_HELPURL = http\://appinventor.mit.edu/explore/ai2/support/blocks/lists#append
blockseditor.Blockly.Msg.LANG_LISTS_APPEND_LIST_TITLE_APPEND = der Liste hinzufügen
blockseditor.Blockly.Msg.LANG_LISTS_APPEND_LIST_INPUT = der Liste hinzufügen  Liste1 %1 Liste2 %2
blockseditor.Blockly.Msg.LANG_LISTS_APPEND_LIST_TOOLTIP = Fügt alle Elemente der Liste2 ans Ende der Liste1 hinzu. Nach dem ''Hinzufügen enthält Liste1 diese zusätzlichen Elemente, aber Liste2 bleibt unverändert.lockly.Msg.LANG_LISTS_ADD_ITEMS_HELPURL \= ''http\://appinventor.mit.edu/explore/ai2/support/blocks/lists#additems
blockseditor.Blockly.Msg.LANG_LISTS_ADD_ITEMS_TITLE_ADD = Elemente der Liste hinzufügen
blockseditor.Blockly.Msg.LANG_LISTS_ADD_ITEMS_INPUT_LIST =  Liste
blockseditor.Blockly.Msg.LANG_LISTS_ADD_ITEMS_INPUT_ITEM = Element
blockseditor.Blockly.Msg.LANG_LISTS_ADD_ITEMS_INPUT = Elemente der Liste hinzufügen Liste %1 Element %2
blockseditor.Blockly.Msg.LANG_LISTS_ADD_ITEMS_TOOLTIP = Fügt Elemente ans Ende einer Liste hinzu.
blockseditor.Blockly.Msg.LANG_LISTS_ADD_ITEMS_CONTAINER_TITLE_ADD = Liste
blockseditor.Blockly.Msg.LANG_LISTS_ADD_ITEMS_CONTAINER_TOOLTIP = Sektionen hinzufügen, entfernen oder neu ordnen, um diesen Listenblock neu zu konfigurieren.
blockseditor.Blockly.Msg.LANG_LISTS_COPY_HELPURL = http\://appinventor.mit.edu/explore/ai2/support/blocks/lists#copy
blockseditor.Blockly.Msg.LANG_LISTS_COPY_TITLE_COPY = Liste kopieren
blockseditor.Blockly.Msg.LANG_LISTS_COPY_INPUT_LIST = Liste
blockseditor.Blockly.Msg.LANG_LISTS_COPY_TOOLTIP = Erstellt eine Kopie einer Liste. Kopiert auch alle Teillisten.
blockseditor.Blockly.Msg.LANG_LISTS_IS_LIST_HELPURL = http\://appinventor.mit.edu/explore/ai2/support/blocks/lists#isalist
blockseditor.Blockly.Msg.LANG_LISTS_IS_LIST_TITLE_IS_LIST = ist eine Liste?
blockseditor.Blockly.Msg.LANG_LISTS_IS_LIST_INPUT_THING = Ding
blockseditor.Blockly.Msg.LANG_LISTS_IS_LIST_TOOLTIP = Testet, ob etwas eine Liste ist.
blockseditor.Blockly.Msg.LANG_LISTS_TO_CSV_ROW_HELPURL = http\://appinventor.mit.edu/explore/ai2/support/blocks/lists#listtocsvrow
blockseditor.Blockly.Msg.LANG_LISTS_TO_CSV_ROW_TITLE_TO_CSV = Liste in csv Zeile
blockseditor.Blockly.Msg.LANG_LISTS_TO_CSV_ROW_INPUT_LIST = Liste
blockseditor.Blockly.Msg.LANG_LISTS_TO_CSV_ROW_TOOLTIP = Interpretiert die Liste als eine Zeile in einer Tabelle und gibt ein CSV ''\(mit Komma getrennte Werte\) Text zurück, der der Zeile entspricht. Jedes Element in der Liste wird als Feld betrachtet und ist mit Anführungszeichen im resultierenden CSV Text zitiert. Elemente sind mittels Komma getrennt. Der zurückgegebene Zeilentext hat keine Zeilentrennung am Ende.lockly.Msg.LANG_LISTS_FROM_CSV_ROW_HELPURL \= ''http\://appinventor.mit.edu/explore/ai2/support/blocks/lists#listfromcsvrow
blockseditor.Blockly.Msg.LANG_LISTS_FROM_CSV_ROW_TITLE_FROM_CSV = Liste aus csv Zeile
blockseditor.Blockly.Msg.LANG_LISTS_FROM_CSV_ROW_INPUT_TEXT = Text
blockseditor.Blockly.Msg.LANG_LISTS_FROM_CSV_ROW_TOOLTIP = Konvertiert eine CSV formattierte Textzeile \(mit Komma getrennte Werte\), ''um eine Liste von Feldern zu erstellen. Enthält ein Zeilentext innerhalb eines Feldes Zeilenumbrüche  \(d.h. mehrere Zeilen\) ohne Escape-Zeichen, wird er als Fehler gekennzeichnet. Ein einziger Zeilenumbruch oder CRLF am Ende eines Zeilentextes ist zugelassen.lockly.Msg.LANG_LISTS_TO_CSV_TABLE_HELPURL \= ''http\://appinventor.mit.edu/explore/ai2/support/blocks/lists#listtocsvtable
blockseditor.Blockly.Msg.LANG_LISTS_TO_CSV_TABLE_TITLE_TO_CSV = Liste in csv Tabelle
blockseditor.Blockly.Msg.LANG_LISTS_TO_CSV_TABLE_INPUT_LIST = Liste
blockseditor.Blockly.Msg.LANG_LISTS_TO_CSV_TABLE_TOOLTIP = Interpretiert die Liste als Tabelle in zeilendominierter Formatierung und ''gibt ein CSV \(mit Komma getrennte Werte\) Text zurück, der der Tabelle entspricht. Jedes Element in der Liste sollte selbst eine Liste sein, die einer Zeile innerhalb der CSV Tabelle entspricht. Jedes Element in der Zeilenliste wird als Feld betrachtet und ist mit Anführungszeichen im resultierenden CSV Text zitiert. Im zurückgegebenen Text sind Elemente in Zeilen mittels Komma getrennt und Zeilen sind mittels CRLF getrennt \(\r\n\).lockly.Msg.LANG_LISTS_FROM_CSV_TABLE_HELPURL \= ''http\://appinventor.mit.edu/explore/ai2/support/blocks/lists#listfromcsvtable
blockseditor.Blockly.Msg.LANG_LISTS_FROM_CSV_TABLE_TITLE_FROM_CSV = Liste aus csv Tabelle
blockseditor.Blockly.Msg.LANG_LISTS_FROM_CSV_TABLE_INPUT_TEXT = Text
blockseditor.Blockly.Msg.LANG_LISTS_FROM_CSV_TABLE_TOOLTIP = Konvertiert ein Text, der einer CSV \(mit Komma getrennte Werte\) formattierten ''Tabelle entspricht, um eine Liste von Zeilen zu erstellen. Jede Zeile entspricht einer Liste von Feldern. Zeilen können mittels Zeilenumbrüche \(\n\) oder CRLF \(\r\n\) getrennt sein.lockly.Msg.LANG_LISTS_INSERT_ITEM_HELPURL \= ''http\://appinventor.mit.edu/explore/ai2/support/blocks/lists#insert
blockseditor.Blockly.Msg.LANG_LISTS_INSERT_TITLE_INSERT_LIST = Listenelement einfügen
blockseditor.Blockly.Msg.LANG_LISTS_INSERT_INPUT_LIST = Liste
blockseditor.Blockly.Msg.LANG_LISTS_INSERT_INPUT_INDEX = Index
blockseditor.Blockly.Msg.LANG_LISTS_INSERT_INPUT_ITEM = Element
blockseditor.Blockly.Msg.LANG_LISTS_INSERT_INPUT = Listenelement einfügen  Liste %1 Index %2 Element %3
blockseditor.Blockly.Msg.LANG_LISTS_INSERT_TOOLTIP = Ein Element in eine Liste an der definierten Position (Index) einfügen.
blockseditor.Blockly.Msg.LANG_LISTS_IS_EMPTY_HELPURL = http\://appinventor.mit.edu/explore/ai2/support/blocks/lists#islistempty
blockseditor.Blockly.Msg.LANG_LISTS_TITLE_IS_EMPTY = ist Liste leer?
blockseditor.Blockly.Msg.LANG_LISTS_INPUT_LIST = Liste
blockseditor.Blockly.Msg.LANG_LISTS_IS_EMPTY_TOOLTIP = Gibt wahr (true) zurück, wenn die Liste leer ist.
blockseditor.Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_HELPURL = http\://appinventor.mit.edu/explore/ai2/support/blocks/lists#lookuppairs
blockseditor.Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_TITLE_LOOKUP_IN_PAIRS = Paare nachschlagen
blockseditor.Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_INPUT_KEY = Schlüssel
blockseditor.Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_INPUT_PAIRS = Paare
blockseditor.Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_INPUT_NOT_FOUND = nichtGefunden
blockseditor.Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_INPUT = Paare nachschlagen  Schlüssel %1 Paare %2 nichtGefunden %3
blockseditor.Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_TOOLTIP = Gibt aus der Liste von Paare den Wert zurück, der dem Schlüssel zugeordnet wird
blockseditor.Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_HELPURL = http\://appinventor.mit.edu/explore/ai2/support/blocks/variables#global
# Description: Variables Blocks.
blockseditor.Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_TITLE_INIT = global initialisieren
blockseditor.Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_NAME = Name
blockseditor.Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_TO = auf
blockseditor.Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_COLLAPSED_TEXT = global
blockseditor.Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_TOOLTIP = Erstellt eine globale Variable und weist ihr den Wert der eingefügten Blöcke zu.
blockseditor.Blockly.Msg.LANG_VARIABLES_GET_HELPURL = http\://appinventor.mit.edu/explore/ai2/support/blocks/variables#get
blockseditor.Blockly.Msg.LANG_VARIABLES_GET_TITLE_GET = hole
blockseditor.Blockly.Msg.LANG_VARIABLES_GET_COLLAPSED_TEXT = hole
blockseditor.Blockly.Msg.LANG_VARIABLES_GET_TOOLTIP = Gibt den Wert dieser Variable zurück.
blockseditor.Blockly.Msg.LANG_VARIABLES_SET_HELPURL = http\://appinventor.mit.edu/explore/ai2/support/blocks/variables#set
blockseditor.Blockly.Msg.LANG_VARIABLES_SET_TITLE_SET = setze
blockseditor.Blockly.Msg.LANG_VARIABLES_SET_TITLE_TO = auf
blockseditor.Blockly.Msg.LANG_VARIABLES_SET_COLLAPSED_TEXT = setze
blockseditor.Blockly.Msg.LANG_VARIABLES_SET_TOOLTIP = Setze diese Variable so dass ihr Wert der Eingabe entspricht.
blockseditor.Blockly.Msg.LANG_VARIABLES_VARIABLE =  Variable
blockseditor.Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_HELPURL = http\://appinventor.mit.edu/explore/ai2/support/blocks/variables#do
blockseditor.Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_TITLE_INIT = lokal initialisieren
blockseditor.Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_DEFAULT_NAME = Name
blockseditor.Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_INPUT_TO = auf
blockseditor.Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_IN_DO = in
blockseditor.Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_COLLAPSED_TEXT = lokal
blockseditor.Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_TOOLTIP = Erlaubt das Erstellen von Variablen, die nur innerhalb des mache-Teil dieses Blockes erreichbar sind.
blockseditor.Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_TRANSLATED_NAME = initialisiere lokal in mache
blockseditor.Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_HELPURL = http\://appinventor.mit.edu/explore/ai2/support/blocks/variables#return
blockseditor.Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_IN_RETURN = in
blockseditor.Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_COLLAPSED_TEXT = lokal
blockseditor.Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_TOOLTIP = Erlaubt das Erstellen von Variablen, die nur innerhalb der Rückgabe dieses Blockes erreichbar sind.
blockseditor.Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_TRANSLATED_NAME = initialisiere lokal in Rückgabe
blockseditor.Blockly.Msg.LANG_VARIABLES_LOCAL_MUTATOR_CONTAINER_TITLE_LOCAL_NAMES = lokale Namen
blockseditor.Blockly.Msg.LANG_VARIABLES_LOCAL_MUTATOR_CONTAINER_TOOLTIP = 
blockseditor.Blockly.Msg.LANG_VARIABLES_LOCAL_MUTATOR_ARG_TITLE_NAME = Name
blockseditor.Blockly.Msg.LANG_VARIABLES_LOCAL_MUTATOR_ARG_DEFAULT_VARIABLE = x
blockseditor.Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_HELPURL = http\://appinventor.mit.edu/explore/ai2/support/blocks/procedures#do
# Description: Procedures Blocks.
blockseditor.Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_DEFINE = zu
blockseditor.Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_PROCEDURE = Prozedur
blockseditor.Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_DO = mache
blockseditor.Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_COLLAPSED_PREFIX = zu 
blockseditor.Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_TOOLTIP = Eine Prozedur, die keinen Wert zurückgibt.
blockseditor.Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_HELPURL = http\://appinventor.mit.edu/explore/ai2/support/blocks/procedures#doreturn
blockseditor.Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_THEN_RETURN = Resultat
blockseditor.Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_DO = mache
blockseditor.Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_RETURN = Resultat
blockseditor.Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_TOOLTIP = Führt die Blöcke in ''mache'' aus und gibt eine Anweisung zurück. Nützlich wenn eine Prozedur ausgeführt werden soll, bevor einer Variable ein Wert zurückgegeben wird.
blockseditor.Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_COLLAPSED_TEXT = mache/Resultat
blockseditor.Blockly.Msg.LANG_PROCEDURES_DEFRETURN_HELPURL = http\://appinventor.mit.edu/explore/ai2/support/blocks/procedures#return
blockseditor.Blockly.Msg.LANG_PROCEDURES_DEFRETURN_DEFINE = zu
blockseditor.Blockly.Msg.LANG_PROCEDURES_DEFRETURN_RETURN = Resultat
blockseditor.Blockly.Msg.LANG_PROCEDURES_DEFRETURN_COLLAPSED_PREFIX = zu 
blockseditor.Blockly.Msg.LANG_PROCEDURES_DEFRETURN_TOOLTIP = Eine Prozedur, die ein Resultat zurückgibt.
blockseditor.Blockly.Msg.LANG_PROCEDURES_DEF_DUPLICATE_WARNING = Warnung\:\nDiese Prozedur hat\nduplizierte Eingaben.
blockseditor.Blockly.Msg.LANG_PROCEDURES_GET_HELPURL = http\://appinventor.mit.edu/explore/ai2/support/blocks/procedures#get
blockseditor.Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_HELPURL = http\://appinventor.mit.edu/explore/ai2/support/blocks/procedures#do
blockseditor.Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_CALL = aufrufen 
blockseditor.Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_PROCEDURE = Prozedur
blockseditor.Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_COLLAPSED_PREFIX = aufrufen 
blockseditor.Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_TOOLTIP = Eine Prozedur ohne Rückgabewert aufrufen.
blockseditor.Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_TRANSLATED_NAME = aufrufen ohne Rückgabe
blockseditor.Blockly.Msg.LANG_PROCEDURES_CALLRETURN_HELPURL = http\://appinventor.mit.edu/explore/ai2/support/blocks/procedures#return
blockseditor.Blockly.Msg.LANG_PROCEDURES_CALLRETURN_COLLAPSED_PREFIX = aufrufen 
blockseditor.Blockly.Msg.LANG_PROCEDURES_CALLRETURN_TOOLTIP = Eine Prozedur mit einem Rückgabewert aufrufen.
blockseditor.Blockly.Msg.LANG_PROCEDURES_CALLRETURN_TRANSLATED_NAME = aufrufen mit Rückgabe
blockseditor.Blockly.Msg.LANG_PROCEDURES_MUTATORCONTAINER_TITLE = Eingaben
blockseditor.Blockly.Msg.LANG_PROCEDURES_MUTATORARG_TITLE = Eingabe\:
blockseditor.Blockly.Msg.LANG_PROCEDURES_HIGHLIGHT_DEF = Prozedur hervorheben
blockseditor.Blockly.Msg.LANG_PROCEDURES_MUTATORCONTAINER_TOOLTIP = 
blockseditor.Blockly.Msg.LANG_PROCEDURES_MUTATORARG_TOOLTIP = 
blockseditor.Blockly.Msg.UNDEFINED_BLOCK_TOOLTIP = Dieser Block ist nicht definiert. Diesen Block löschen!
# Description: Components Blocks.
blockseditor.Blockly.Msg.LANG_COMPONENT_BLOCK_HELPURL = 
blockseditor.Blockly.Msg.LANG_COMPONENT_BLOCK_TITLE_WHEN = wenn 
blockseditor.Blockly.Msg.LANG_COMPONENT_BLOCK_TITLE_DO = mache
blockseditor.Blockly.Msg.LANG_COMPONENT_BLOCK_METHOD_HELPURL = 
blockseditor.Blockly.Msg.LANG_COMPONENT_BLOCK_METHOD_TITLE_CALL = aufrufen 
blockseditor.Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_METHOD_HELPURL = 
blockseditor.Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_METHOD_TITLE_CALL = aufrufen 
blockseditor.Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_METHOD_TITLE_FOR_COMPONENT = für Komponente
blockseditor.Blockly.Msg.LANG_COMPONENT_BLOCK_GETTER_HELPURL = 
blockseditor.Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_GETTER_HELPURL = 
blockseditor.Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_GETTER_TITLE_OF_COMPONENT = von Komponente
blockseditor.Blockly.Msg.LANG_COMPONENT_BLOCK_SETTER_HELPURL = 
blockseditor.Blockly.Msg.LANG_COMPONENT_BLOCK_SETTER_TITLE_SET = setze 
blockseditor.Blockly.Msg.LANG_COMPONENT_BLOCK_SETTER_TITLE_TO = auf
blockseditor.Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_SETTER_HELPURL = 
blockseditor.Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_SETTER_TITLE_SET = setze 
blockseditor.Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_SETTER_TITLE_TO = auf
blockseditor.Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_SETTER_TITLE_OF_COMPONENT = von Komponente
blockseditor.Blockly.Msg.SHOW_WARNINGS = Warnungen einblenden
# Description: isc
blockseditor.Blockly.Msg.HIDE_WARNINGS = Warnungen ausblenden
blockseditor.Blockly.Msg.MISSING_SOCKETS_WARNINGS = Alle Steckplätze sollten mit Blöcken befüllt werden
blockseditor.Blockly.Msg.WRONG_TYPE_BLOCK_WARINGS = Dieser Block sollte mit einem Ereignis Block oder einer Prozedur Definition verbunden sein
blockseditor.Blockly.Msg.REPL_ERROR_FROM_COMPANION = Fehler vom Companion
# Description: Messages from replmgr.js
blockseditor.Blockly.Msg.REPL_NETWORK_CONNECTION_ERROR = Netzwerkverbindungsfehler
blockseditor.Blockly.Msg.REPL_NETWORK_ERROR = Netzwerkfehler
blockseditor.Blockly.Msg.REPL_NETWORK_ERROR_RESTART = Netzwerkfehler in der Kommunikation mit dem Companion.<br />Versuche, den Companion neuzustarten und neu zu verbinden
blockseditor.Blockly.Msg.REPL_OK = OK
blockseditor.Blockly.Msg.REPL_COMPANION_VERSION_CHECK = Companion Version Check
blockseditor.Blockly.Msg.REPL_COMPANION_OUT_OF_DATE = Deine Companion App ist veraltet. Klicke "OK", um das Update zu starten. Achte auf Deine 
blockseditor.Blockly.Msg.REPL_EMULATORS = Emulator
blockseditor.Blockly.Msg.REPL_DEVICES = Geräte
blockseditor.Blockly.Msg.REPL_APPROVE_UPDATE =  Bildschirm, da Du gebeten wirst, den Update zu bestätigen.
blockseditor.Blockly.Msg.REPL_NOT_NOW = Nicht jetzt
blockseditor.Blockly.Msg.REPL_COMPANION_OUT_OF_DATE_IMMEDIATE = Du verwendest einen veralteten Companion. Du solltest den MIT AI2 Companion baldmöglichst aktualisieren. Falls Du Auto-Updates im Store aktiviert hast, wird der Update bald selbstständig erfolgen.
blockseditor.Blockly.Msg.REPL_COMPANION_WRONG_PACKAGE = Der Companion den Du verwendest wurde für eine andere Instanz des App Inventor gebaut. Um den korrekten Companion zu erhalten, schaue im App Inventor Bildschirm im Menü unter Hilfe->Companion Information.
blockseditor.Blockly.Msg.REPL_DISMISS = Schliessen
blockseditor.Blockly.Msg.REPL_SOFTWARE_UPDATE = Software Update
blockseditor.Blockly.Msg.REPL_OK_LOWER = Ok
blockseditor.Blockly.Msg.REPL_GOT_IT = Verstanden
blockseditor.Blockly.Msg.REPL_UPDATE_INFO = Das Update wird nun auf Deinem Gerät installiert. Achte auf Deinen Geräte- oder Emulatorbildschirm und, wenn aufgefordert, bestätige die Software Installation.<br /><br />WICHTIG\: Wenn das Update fertig ist, wähle "FERTIG" \(nicht auf "öffnen" klicken\). Gehe dann zum App Inventor in Deinem Browser, klicke auf das "Verbinden"-Menü und wähle "Verbindung zurücksetzen". Dann verbinde das Gerät erneut.
blockseditor.Blockly.Msg.REPL_UPDATE_NO_UPDATE = Kein Update ist verfügbar
blockseditor.Blockly.Msg.REPL_UPDATE_NO_CONNECTION = Du musst mit einem Companion verbunden sein, um ihn zu aktualisieren
blockseditor.Blockly.Msg.REPL_UNABLE_TO_UPDATE = Update kann nicht an Gerät/Emulator gesendet werden
blockseditor.Blockly.Msg.REPL_UNABLE_TO_LOAD = Update kann nicht vom App Inventor Server geladen werden
blockseditor.Blockly.Msg.REPL_UNABLE_TO_LOAD_NO_RESPOND = Update kann nicht vom App Inventor Server geladen werden (Server antwortet nicht)
blockseditor.Blockly.Msg.REPL_NOW_DOWNLOADING = Das Update wird nun vom App Inventor Server heruntergeladen, bitte warten
blockseditor.Blockly.Msg.REPL_RUNTIME_ERROR = Laufzeitfehler
blockseditor.Blockly.Msg.REPL_NO_ERROR_FIVE_SECONDS = <br/><i>Bemerkung\:</i>&nbsp;Du wirst in den nächsten 5 Sekunden keinen weiteren Fehlerbericht sehen.
blockseditor.Blockly.Msg.REPL_CONNECTING_USB_CABLE = Verbindung wird mittels USB Kabel hergestellt
blockseditor.Blockly.Msg.REPL_STARTING_EMULATOR = Android Emulator wird gestartet<br/>Bitte warten\: Das könnte ein oder zwei Minuten dauern.
blockseditor.Blockly.Msg.REPL_CONNECTING = Verbindung wird hergestellt...
blockseditor.Blockly.Msg.REPL_CANCEL = Abbrechen
blockseditor.Blockly.Msg.REPL_GIVE_UP = Aufgeben
blockseditor.Blockly.Msg.REPL_KEEP_TRYING = Weiter versuchen
blockseditor.Blockly.Msg.REPL_NO_START_EMULATOR = Der MIT AI Companion konnte innerhalb des Emulators nicht gestartet werden
blockseditor.Blockly.Msg.REPL_PLUGGED_IN_Q = Angeschlossen?
blockseditor.Blockly.Msg.REPL_AI_NO_SEE_DEVICE = AI2 kann Dein Gerät nicht sehen. Bitte versichere, dass das Kabel eingesteckt ist und alle Treiber richtig installiert sind.
blockseditor.Blockly.Msg.REPL_HELPER_Q = Helper?
blockseditor.Blockly.Msg.REPL_HELPER_NOT_RUNNING = Der aiStarter helper scheint nicht zu laufen<br /><a href\="http\://appinventor.mit.edu" target\="_blank">Hilfe benötigt?</a>
blockseditor.Blockly.Msg.REPL_USB_CONNECTED_WAIT = USB verbunden, wartet 
blockseditor.Blockly.Msg.REPL_SECONDS_ENSURE_RUNNING =  Sekunden um sicherzustellen, dass alles läuft.
blockseditor.Blockly.Msg.REPL_EMULATOR_STARTED = Emulator gestartet, wartet 
blockseditor.Blockly.Msg.REPL_STARTING_COMPANION_ON_PHONE = Companion App wird auf dem verbundenen Smartphone gestartet.
blockseditor.Blockly.Msg.REPL_STARTING_COMPANION_IN_EMULATOR = Companion App wird im Emulator gestartet.
blockseditor.Blockly.Msg.REPL_COMPANION_STARTED_WAITING = Companion wird gestartet, wartet 
blockseditor.Blockly.Msg.REPL_VERIFYING_COMPANION = Überprüfung, dass der Companion gestartet ist....
blockseditor.Blockly.Msg.REPL_CONNECT_TO_COMPANION = Mit Companion verbinden
blockseditor.Blockly.Msg.REPL_YOUR_CODE_IS = Dein Code ist
blockseditor.Blockly.Msg.REPL_DO_YOU_REALLY_Q = Möchtest Du wirklich?
blockseditor.Blockly.Msg.REPL_FACTORY_RESET = Es wird versucht, Deinen Emulator auf den Werkzustand zurückzusetzen. Wenn Du zuvor den Companion im Emulator aktualisiert hast, wirst Du dies wahrscheinlich erneut machen müssen.
blockseditor.Blockly.Msg.WARNING_DELETE_X_BLOCKS = Bist Du dir sicher, dass Du alle %1 dieser Blöcke löschen möchtest?
# Description: Messages from Blockly.js
blockseditor.Blockly.Msg.GENERATE_YAIL = Erstelle YAIL
# Description: Blocklyeditor.js
blockseditor.Blockly.Msg.DO_IT = Mache es
blockseditor.Blockly.Msg.CLEAR_DO_IT_ERROR = Fehler beheben
blockseditor.Blockly.Msg.CAN_NOT_DO_IT = Kann es nicht machen
blockseditor.Blockly.Msg.CONNECT_TO_DO_IT = Du musst mit dem Companion oder Emulator verbunden sein, um "Mache es" zu nutzen
blockseditor.Blockly.Msg.TIME_YEARS = Jahre
# Description: Clock Component Menu Items
blockseditor.Blockly.Msg.TIME_MONTHS = Monate
blockseditor.Blockly.Msg.TIME_WEEKS = Wochen
blockseditor.Blockly.Msg.TIME_DAYS = Tage
blockseditor.Blockly.Msg.TIME_HOURS = Stunden
blockseditor.Blockly.Msg.TIME_MINUTES = Minuten
blockseditor.Blockly.Msg.TIME_SECONDS = Sekunden
blockseditor.Blockly.Msg.TIME_DURATION = Dauer
