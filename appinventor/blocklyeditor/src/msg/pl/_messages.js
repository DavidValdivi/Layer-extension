// -*- mode: javascript; js-indent-level: 2; -*-
// Copyright 2018-2019 Massachusetts Institute of Technology. All rights reserved.
// Released under the Apache License, Version 2.0
// http://www.apache.org/licenses/LICENSE-2.0

'use strict';

goog.provide('AI.Blockly.Msg.pl');
goog.require('Blockly.Msg.pl');

Blockly.Msg.pl.switch_language_to_polish = {
  // Switch language to polish.
  category: '',
  helpUrl: '',
  init: function() {
    Blockly.Msg.UNDO = 'Cofnij';
    Blockly.Msg.REDO = 'Ponów';
    Blockly.Msg.CLEAN_UP = 'Oczyść bloki';
    Blockly.Msg.DUPLICATE_BLOCK = 'Duplikuj';
    Blockly.Msg.REMOVE_COMMENT = 'Usuń komentarz';
    Blockly.Msg.ADD_COMMENT = 'Dodaj komentarz';
    Blockly.Msg.EXTERNAL_INPUTS = 'Wejścia zewnętrzne';
    Blockly.Msg.INLINE_INPUTS = 'Wejścia liniowe';
    Blockly.Msg.HORIZONTAL_PARAMETERS = 'Rozmieść parametry w poziomie';
    Blockly.Msg.VERTICAL_PARAMETERS = 'Rozmieść parametry w pionie';
    Blockly.Msg.CONFIRM_DELETE = 'Potwierdź usunięcie';
    Blockly.Msg.DELETE_ALL_BLOCKS = 'Usuń wszystkie %1 bloki?';
    Blockly.Msg.DELETE_BLOCK = 'Usuń blok';
    Blockly.Msg.DELETE_X_BLOCKS = 'Usuń %1 bloków';
    Blockly.Msg.COLLAPSE_BLOCK = 'Zwiń blok';
    Blockly.Msg.EXPAND_BLOCK = 'Rozwiń blok';
    Blockly.Msg.DISABLE_BLOCK = 'Wyłącz blok';
    Blockly.Msg.ENABLE_BLOCK = 'Włącz blok';
    Blockly.Msg.HELP = 'Pomoc';
    Blockly.Msg.EXPORT_IMAGE = 'Pobierz bloki jako obraz';
    Blockly.Msg.COLLAPSE_ALL = 'Zwiń bloki';
    Blockly.Msg.EXPAND_ALL = 'Rozwiń bloki';
    Blockly.Msg.ARRANGE_H = 'Rozmieść bloki w poziomie';
    Blockly.Msg.ARRANGE_V = 'Rozmieść bloki pionowo';
    Blockly.Msg.ARRANGE_S = 'Ułóż bloki po przekątnej';
    Blockly.Msg.SORT_W = 'Sortuj bloki według szerokości';
    Blockly.Msg.SORT_H = 'Sortuj bloki według wysokości';
    Blockly.Msg.SORT_C = 'Sortuj bloki według kategorii';
    Blockly.Msg.COPY_TO_BACKPACK = 'Dodaj do plecaka';
    Blockly.Msg.COPY_ALLBLOCKS = 'Skopiuj wszystkie bloki do plecaka';
    Blockly.Msg.REMOVE_FROM_BACKPACK = 'Usuń z plecaka';
    Blockly.Msg.BACKPACK_GET = 'Wklej wszystkie bloki z plecaka';
    Blockly.Msg.BACKPACK_EMPTY = 'Opróżnij plecak';
    Blockly.Msg.BACKPACK_CONFIRM_EMPTY = 'Czy na pewno chcesz opróżnić plecak?';
    Blockly.Msg.BACKPACK_DOC_TITLE = 'Informacje o plecaku';
    Blockly.Msg.SHOW_BACKPACK_DOCUMENTATION = 'Pokaż dokumentację plecaka';
    Blockly.Msg.BACKPACK_DOCUMENTATION = 'Plecak to funkcja kopiowania / wklejania. Pozwala kopiować bloki z jednego projektu lub ekranu i wklejać je do innego projektu lub ekranu. Aby skopiować, możesz przeciągać i upuszczać bloki do plecaka. Aby wkleić, kliknij ikonę Plecaka i przeciągnij i upuść bloki do obszaru roboczego. </p> <p> Jeśli opuścisz MIT App Inventor z blokami pozostawionymi w plecaku, będą tam przy następnym logowaniu. < / p> <p> <a href=\'/reference/other/backpack.html\' target=\'_blank\'> Kliknij tutaj </a>, aby uzyskać dalszą dokumentację i wideo „jak to zrobić”.';
    Blockly.Msg.ENABLE_GRID = 'Włącz siatkę Pulpitu';
    Blockly.Msg.DISABLE_GRID = 'Wyłącz siatkę Pulpitu';
    Blockly.Msg.ENABLE_SNAPPING = 'Włącz przyciąganie do siatki';
    Blockly.Msg.DISABLE_SNAPPING = 'Wyłącz przyciąganie do siatki';
    Blockly.Msg.DISABLE_ALL_BLOCKS = 'Wyłącz wszystkie bloki';
    Blockly.Msg.ENABLE_ALL_BLOCKS = 'Włącz wszystkie bloki';
    Blockly.Msg.HIDE_ALL_COMMENTS = 'Ukryj wszystkie komentarze';
    Blockly.Msg.SHOW_ALL_COMMENTS = 'Pokaż wszystkie komentarze';
    Blockly.Msg.CHANGE_VALUE_TITLE = 'Zmiana waluty:';
    Blockly.Msg.NEW_VARIABLE = 'Nowa zmienna ...';
    Blockly.Msg.NEW_VARIABLE_TITLE = 'Nowa nazwa zmiennej:';
    Blockly.Msg.RENAME_VARIABLE = 'Zmień nazwę zmiennej...';
    Blockly.Msg.RENAME_VARIABLE_TITLE = 'Zmień nazwę wszystkich zmiennych „%1” na:';
    Blockly.Msg.VARIABLE_CATEGORY = 'Zmienne';
    Blockly.Msg.PROCEDURE_CATEGORY = 'Funkcje';
    Blockly.Msg.ERROR_BLOCK_CANNOT_BE_IN_DEFINTION = 'Ten blok nie może być w definicji';
    Blockly.Msg.ERROR_SELECT_VALID_ITEM_FROM_DROPDOWN = 'Wybierz prawidłowy element na liście rozwijanej.';
    Blockly.Msg.ERROR_DUPLICATE_EVENT_HANDLER = 'Jest to zduplikowana obsługa zdarzeń dla tego komponentu.';
    Blockly.Msg.ERROR_COMPONENT_DOES_NOT_EXIST = 'Komponent nie istnieje';
    Blockly.Msg.ERROR_BLOCK_IS_NOT_DEFINED = 'Ten blok nie jest zdefiniowany. Usuń ten blok!';
    Blockly.Msg.ERROR_BREAK_ONLY_IN_LOOP = 'Blok przerwania powinien być używany tylko w pętlach';
    Blockly.Msg.LANG_COLOUR_PICKER_TOOLTIP = 'Kliknij kwadrat, aby wybrać kolor.';
    Blockly.Msg.LANG_COLOUR_BLACK = 'czarny';
    Blockly.Msg.LANG_COLOUR_WHITE = 'biały';
    Blockly.Msg.LANG_COLOUR_RED = 'czerwony';
    Blockly.Msg.LANG_COLOUR_PINK = 'różowy';
    Blockly.Msg.LANG_COLOUR_ORANGE = 'pomarańczowy';
    Blockly.Msg.LANG_COLOUR_YELLOW = 'żółty';
    Blockly.Msg.LANG_COLOUR_GREEN = 'zielony';
    Blockly.Msg.LANG_COLOUR_CYAN = 'cyjan';
    Blockly.Msg.LANG_COLOUR_BLUE = 'niebieski';
    Blockly.Msg.LANG_COLOUR_MAGENTA = 'magenta';
    Blockly.Msg.LANG_COLOUR_LIGHT_GRAY = 'jasny szary';
    Blockly.Msg.LANG_COLOUR_DARK_GRAY = 'ciemny szary';
    Blockly.Msg.LANG_COLOUR_GRAY = 'szary';
    Blockly.Msg.LANG_COLOUR_SPLIT_COLOUR = 'złóż kolor';
    Blockly.Msg.LANG_COLOUR_SPLIT_COLOUR_TOOLTIP = 'Lista czterech elementów, każdy w zakresie od 0 do 255, reprezentujących składniki czerwony, zielony, niebieski i alfa.';
    Blockly.Msg.LANG_COLOUR_MAKE_COLOUR = 'Stwórz kolor';
    Blockly.Msg.LANG_COLOUR_MAKE_COLOUR_TOOLTIP = 'Kolor z podanymi komponentami czerwony, zielony, niebieski i opcjonalnie alfa';
    Blockly.Msg.LANG_CATEGORY_CONTROLS = 'Kontrola';
    Blockly.Msg.LANG_CONTROLS_IF_MSG_IF = 'Jeśli';
    Blockly.Msg.LANG_CONTROLS_IF_MSG_ELSEIF = 'inaczej jeśli';
    Blockly.Msg.LANG_CONTROLS_IF_MSG_ELSE = 'inaczej';
    Blockly.Msg.LANG_CONTROLS_IF_MSG_THEN = 'wtedy';
    Blockly.Msg.LANG_CONTROLS_IF_IF_TITLE_IF = 'Jeśli';
    Blockly.Msg.LANG_CONTROLS_IF_IF_TOOLTIP = 'Dodaj, usuń lub zmień kolejność sekcji, aby zmienić konfigurację, bloku \"Jeśli\".';
    Blockly.Msg.LANG_CONTROLS_IF_ELSEIF_TITLE_ELSEIF = 'inaczej jeśli';
    Blockly.Msg.LANG_CONTROLS_IF_ELSEIF_TOOLTIP = 'Dodaj warunek do bloku Jeśli.';
    Blockly.Msg.LANG_CONTROLS_IF_ELSE_TITLE_ELSE = 'inaczej';
    Blockly.Msg.LANG_CONTROLS_IF_ELSE_TOOLTIP = 'Dodaj ostateczny warunek catch-all do bloku Jeśli.';
    Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_TITLE_REPEAT = 'powtórz';
    Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_INPUT_DO = 'wykonaj';
    Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_OPERATOR_WHILE = 'gdy';
    Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_OPERATOR_UNTIL = 'dopóki';
    Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_TOOLTIP_WHILE = 'Gdy wartość jest Prawdą, wykonaj kilka instrukcji.';
    Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL = 'Gdy wartość jest Fałszem, wykonaj kilka instrukcji.';
    Blockly.Msg.LANG_CONTROLS_FOR_INPUT_WITH = 'Oblicz z';
    Blockly.Msg.LANG_CONTROLS_FOR_INPUT_VAR = 'x';
    Blockly.Msg.LANG_CONTROLS_FOR_INPUT_FROM = 'z';
    Blockly.Msg.LANG_CONTROLS_FOR_INPUT_TO = 'do';
    Blockly.Msg.LANG_CONTROLS_FOR_INPUT_DO = 'wykonaj';
    Blockly.Msg.LANG_CONTROLS_FOR_TOOLTIP = 'Policz od numeru początkowego do numeru końcowego. Dla każdego licznika ustaw bieżący numer licznika na zmienną „%1”, a następnie wykonaj kilka instrukcji.';
    Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_ITEM = 'dla każdego';
    Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_VAR = 'numeru';
    Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_START = 'od';
    Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_END = 'do';
    Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_STEP = 'przez';
    Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_DO = 'wykonaj';
    Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_COLLAPSED_TEXT = 'dla numeru w zasięgu';
    Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_COLLAPSED_PREFIX = 'dla';
    Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_COLLAPSED_SUFFIX = 'w zakresie';
    Blockly.Msg.LANG_CONTROLS_FORRANGE_TOOLTIP = 'Uruchamia bloki w sekcji „wykonaj” dla każdej wartości liczbowej w zakresie od początku do końca, zwiększając wartość za każdym razem. Użyj podanej nazwy zmiennej, aby odnieść się do bieżącej value';
    Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_ITEM = 'dla każdej';
    Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_VAR = 'pozycji';
    Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_INLIST = 'na liście';
    Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_DO = 'wykonaj';
    Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_COLLAPSED_TEXT = 'dla pozycji na liście';
    Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_COLLAPSED_PREFIX = 'dla';
    Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_COLLAPSED_SUFFIX = 'na liście';
    Blockly.Msg.LANG_CONTROLS_FOREACH_TOOLTIP = 'Uruchamia bloki w sekcji „wykonaj” dla każdego elementu na liście. Użyj podanej nazwy zmiennej, aby odnieść się do bieżącej listy item';
    Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_INPUT_OFLOOP = 'pętli';
    Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK = 'przerwa';
    Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE = 'kontynuuj następną iterację';
    Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK = 'Wyjdź z pętli zawierającej.';
    Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE = 'Pomiń resztę tej pętli i przejdź do następnej iteracji.';
    Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_WARNING = 'Ostrzeżenie: ten blok może być używany tylko w pętli.';
    Blockly.Msg.LANG_CONTROLS_WHILE_TITLE = 'gdy';
    Blockly.Msg.LANG_CONTROLS_WHILE_INPUT_TEST = 'test';
    Blockly.Msg.LANG_CONTROLS_WHILE_INPUT_DO = 'wykonaj';
    Blockly.Msg.LANG_CONTROLS_WHILE_COLLAPSED_TEXT = 'gdy';
    Blockly.Msg.LANG_CONTROLS_WHILE_TOOLTIP = 'Uruchamia bloki w sekcji „wykonaj”, gdy test jest „true';
    Blockly.Msg.LANG_CONTROLS_CHOOSE_TITLE = '';
    Blockly.Msg.LANG_CONTROLS_CHOOSE_INPUT_THEN_RETURN = 'wtedy';
    Blockly.Msg.LANG_CONTROLS_CHOOSE_INPUT_ELSE_RETURN = 'inaczej';
    Blockly.Msg.LANG_CONTROLS_CHOOSE_COLLAPSED_TEXT = 'Jeśli';
    Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_INPUT_DO = 'wykonaj';
    Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_INPUT_RETURN = 'wynik';
    Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_TOOLTIP = 'Uruchamia bloki w \'wykonaj\' i zwraca instrukcję. Przydatne, jeśli musisz uruchomić procedurę przed zwróceniem wartości do zmiennej.';
    Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_COLLAPSED_TEXT = 'wykonaj/wynik';
    Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_TITLE = 'wynik';
    Blockly.Msg.LANG_CONTROLS_EVAL_BUT_IGNORE_TITLE = 'oceniaj, ale ignoruj wynik';
    Blockly.Msg.LANG_CONTROLS_EVAL_BUT_COLLAPSED_TEXT = 'oceń ale ignoruj';
    Blockly.Msg.LANG_CONTROLS_EVAL_BUT_IGNORE_TOOLTIP = ' Uruchamia połączony blok kodu i ignoruje zwracaną wartość (jeśli istnieje). Przydatne, jeśli trzeba wywołać procedurę z wartością zwracaną, ale nie potrzebujesz wartości.';
    Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_TITLE = 'otwórz inny ekran';
    Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_INPUT_SCREENNAME = 'nazwaEkranu';
    Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_COLLAPSED_TEXT = 'otwórz ekran';
    Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_TOOLTIP = 'Otwiera nowy ekran w aplikacji z wieloma ekranami.';
    Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_TITLE = 'otwórz kolejny ekran z wartością początkową';
    Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_INPUT_SCREENNAME = 'nazwaEkranu';
    Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_INPUT_STARTVALUE = 'wartośćPoczątkowa';
    Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_COLLAPSED_TEXT = 'otwórz ekran o wartości';
    Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_TOOLTIP = ' Otwiera nowy ekran w aplikacji wieloekranowej i przekazuje wartość początkową \' do tego ekranu';
    Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_TITLE = 'uzyskaj wartość początkową';
    Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_INPUT_SCREENNAME = 'nazwaEkranu';
    Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_INPUT_STARTVALUE = 'wartośćPoczątkowa';
    Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_COLLAPSED_TEXT = 'uzyskaj wartość początkową';
    Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_TOOLTIP = 'Zwraca wartość, która została przekazana do tego ekranu, gdy został otwarty, zazwyczaj przez inny ekran w aplikacji wieloekranowej. Jeśli nie przekazano żadnej wartości, zwraca pusty tekst';
    Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_TITLE = 'zamknij ekran';
    Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_COLLAPSED_TEXT = 'zamknij ekran';
    Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_TOOLTIP = 'Zamknij bieżący ekran';
    Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_VALUE_TITLE = 'zamknij ekran z wartością';
    Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_VALUE_INPUT_RESULT = 'wynik';
    Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_VALUE_COLLAPSED_TEXT = 'zamknij ekran z wartością';
    Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_VALUE_TOOLTIP = 'Zamyka bieżący ekran i zwraca wynik na ekran \', który go otworzy';
    Blockly.Msg.LANG_CONTROLS_CLOSE_APPLICATION_TITLE = 'zamknij aplikację';
    Blockly.Msg.LANG_CONTROLS_CLOSE_APPLICATION_COLLAPSED_TEXT = 'zamknij aplikację';
    Blockly.Msg.LANG_CONTROLS_CLOSE_APPLICATION_TOOLTIP = 'Zamyka wszystkie ekrany w tej aplikacji i zatrzymuje aplikację.';
    Blockly.Msg.LANG_CONTROLS_GET_PLAIN_START_TEXT_TITLE = 'uzyskaj zwykły tekst początkowy';
    Blockly.Msg.LANG_CONTROLS_GET_PLAIN_START_TEXT_COLLAPSED_TEXT = 'uzyskaj zwykły tekst początkowy';
    Blockly.Msg.LANG_CONTROLS_GET_PLAIN_START_TEXT_TOOLTIP = 'Zwraca zwykły tekst przekazany na ten ekran, gdy został uruchomiony przez inną aplikację. Jeśli nie przekazano żadnej wartości, zwraca pusty tekst. W przypadku aplikacji z wieloma ekranami, użyj uzyskaj wartość początkową zamiast zacznij.';
    Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_PLAIN_TEXT_TITLE = 'zamknij ekran zwykłym tekstem';
    Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_PLAIN_TEXT_INPUT_TEXT = 'tekst';
    Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_PLAIN_TEXT_COLLAPSED_TEXT = 'zamknij ekran ze zwykłym tekstem';
    Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_PLAIN_TEXT_TOOLTIP = 'Zamyka bieżący ekran i zwraca tekst do aplikacji, który otworzył ten ekran. To polecenie służy do zwracania tekstu do działań innych niż aplikacja Inventor, a nie do ekranów aplikacji Inventor. W przypadku ekranów aplikacji Inventor, podobnie jak w aplikacjach z wieloma ekranami, użyj opcji Zamknij ekran z wartością, a nie Zamknij ekran z prostym Text.';
    Blockly.Msg.LANG_CONTROLS_BREAK_TITLE = 'Przerwij';
    Blockly.Msg.LANG_CONTROLS_BREAK_INPUT_TEXT = 'wartość';
    Blockly.Msg.LANG_CONTROLS_BREAK_COLLAPSED_TEXT = 'Przerwij';
    Blockly.Msg.LANG_CATEGORY_LOGIC = 'Logika';
    Blockly.Msg.LANG_LOGIC_COMPARE_TOOLTIP_EQ = 'Sprawdza, czy dwa obiekty są równe. Porównywane mogą być dowolne obiekty, nie tylko liczby. Liczby są uważane za równe drukowanej formie jako łańcuchy, na przykład liczba 0 jest równa tekstowi „0”. Ponadto dwa ciągi reprezentujące liczby są równe, jeśli liczby są równe, na przykład „1” jest równe „01”.';
    Blockly.Msg.LANG_LOGIC_COMPARE_TOOLTIP_NEQ = 'Zwraca Prawdę, jeśli obie wprowadzone wartości nie są sobie równe.';
    Blockly.Msg.LANG_LOGIC_COMPARE_TRANSLATED_NAME = 'logiczne równa się';
    Blockly.Msg.LANG_LOGIC_COMPARE_EQ = '=';
    Blockly.Msg.LANG_LOGIC_COMPARE_NEQ = '≠';
    Blockly.Msg.LANG_LOGIC_OPERATION_AND = 'i';
    Blockly.Msg.LANG_LOGIC_OPERATION_OR = 'lub';
    Blockly.Msg.LANG_LOGIC_OPERATION_TOOLTIP_AND = 'Zwraca Prawda, jeśli wszystkie dane wejściowe są prawdziwe.';
    Blockly.Msg.LANG_LOGIC_OPERATION_TOOLTIP_OR = 'Zwraca Prawda, jeśli jakieś dane wejściowe są prawdziwe.';
    Blockly.Msg.LANG_LOGIC_NEGATE_INPUT_NOT = 'nie';
    Blockly.Msg.LANG_LOGIC_NEGATE_TOOLTIP = 'Zwraca Prawda, jeśli dane wejściowe są fałszywe. Zwraca fałsz, jeśli dane wejściowe są prawdziwe.';
    Blockly.Msg.LANG_LOGIC_BOOLEAN_TRUE = 'Prawda';
    Blockly.Msg.LANG_LOGIC_BOOLEAN_FALSE = 'Fałsz';
    Blockly.Msg.LANG_LOGIC_BOOLEAN_TOOLTIP_TRUE = 'Zwraca wartość logiczną Prawda.';
    Blockly.Msg.LANG_LOGIC_BOOLEAN_TOOLTIP_FALSE = 'Zwraca wartość logiczną Fałsz.';
    Blockly.Msg.LANG_CATEGORY_MATH = 'Matematyka';
    Blockly.Msg.LANG_MATH_NUMBER_TOOLTIP = 'Zgłoś pokazany numer.';
    Blockly.Msg.LANG_MATH_MUTATOR_ITEM_INPUT_NUMBER = 'numer';
    Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_EQ = 'Zwraca Prawda, jeśli obie liczby są sobie równe.';
    Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_NEQ = 'Zwraca Prawda, jeśli obie liczby nie są sobie równe.';
    Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_LT = 'Zwraca Prawda, jeśli pierwsza liczba jest mniejsza niż druga liczba.';
    Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_LTE = 'Zwraca Prawda, jeśli pierwsza liczba jest mniejsza lub równa drugiej liczbie.';
    Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_GT = 'Zwraca Prawda, jeśli pierwsza liczba jest większa niż druga liczba.';
    Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_GTE = 'Zwraca Prawda, jeśli pierwsza liczba jest większa lub równa drugiej liczbie.';
    Blockly.Msg.LANG_MATH_COMPARE_EQ = '=';
    Blockly.Msg.LANG_MATH_COMPARE_NEQ = '≠';
    Blockly.Msg.LANG_MATH_COMPARE_LT = '<';
    Blockly.Msg.LANG_MATH_COMPARE_LTE = '≤';
    Blockly.Msg.LANG_MATH_COMPARE_GT = '>';
    Blockly.Msg.LANG_MATH_COMPARE_GTE = '≥';
    Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_ADD = 'Zwraca sumę dwóch liczb.';
    Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_MINUS = 'Zwraca różnicę dwóch liczb.';
    Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_MULTIPLY = 'Zwraca iloczyn dwóch liczb.';
    Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_DIVIDE = 'Zwraca iloraz dwóch liczb.';
    Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_POWER = 'Zwraca pierwszą liczbę podniesioną do potęgi drugiej liczby.';
    Blockly.Msg.LANG_MATH_BITWISE_TOOLTIP_AND = 'Zwraca bitowy AND dwóch liczb.';
    Blockly.Msg.LANG_MATH_BITWISE_TOOLTIP_IOR = 'Zwraca OR włącznie z dwoma liczbami.';
    Blockly.Msg.LANG_MATH_BITWISE_TOOLTIP_XOR = 'Zwraca OR wyłączną bitowo dwóch liczb.';
    Blockly.Msg.LANG_MATH_ARITHMETIC_ADD = '+';
    Blockly.Msg.LANG_MATH_ARITHMETIC_MINUS = '-';
    Blockly.Msg.LANG_MATH_ARITHMETIC_MULTIPLY = '*';
    Blockly.Msg.LANG_MATH_ARITHMETIC_DIVIDE = '/';
    Blockly.Msg.LANG_MATH_ARITHMETIC_POWER = '^';
    Blockly.Msg.LANG_MATH_BITWISE_AND = 'bitowo i';
    Blockly.Msg.LANG_MATH_BITWISE_IOR = 'bitowo lub';
    Blockly.Msg.LANG_MATH_BITWISE_XOR = 'bitowy xor';
    Blockly.Msg.LANG_MATH_SINGLE_OP_ROOT = 'pierwiastek kwadratowy';
    Blockly.Msg.LANG_MATH_SINGLE_OP_ABSOLUTE = 'absolutny';
    Blockly.Msg.LANG_MATH_SINGLE_OP_NEG = 'neg';
    Blockly.Msg.LANG_MATH_SINGLE_OP_LN = 'log';
    Blockly.Msg.LANG_MATH_SINGLE_OP_EXP = 'e^';
    Blockly.Msg.LANG_MATH_SINGLE_TOOLTIP_ROOT = 'Zwraca pierwiastek kwadratowy z liczby.';
    Blockly.Msg.LANG_MATH_SINGLE_TOOLTIP_ABS = 'Zwraca wartość bezwzględną liczby.';
    Blockly.Msg.LANG_MATH_SINGLE_TOOLTIP_NEG = 'Zwraca negację liczby.';
    Blockly.Msg.LANG_MATH_SINGLE_TOOLTIP_LN = 'Zwraca logarytm naturalny liczby, tj. Logarytm do podstawy e (2,71828 ...)';
    Blockly.Msg.LANG_MATH_SINGLE_TOOLTIP_EXP = 'Zwraca e (2.71828 ...) do potęgi liczby.';
    Blockly.Msg.LANG_TEXT_CHANGECASE_OPERATOR_UPPERCASE = 'wielkie litery';
    Blockly.Msg.LANG_TEXT_CHANGECASE_OPERATOR_DOWNCASE = 'małe litery';
    Blockly.Msg.LANG_TEXT_CHANGECASE_TOOLTIP_UPPERCASE = 'Zwraca kopię argumentu łańcucha tekstowego przekonwertowanego na wielkie litery.';
    Blockly.Msg.LANG_TEXT_CHANGECASE_TOOLTIP_DOWNCASE = 'Zwraca kopię argumentu ciągu tekstowego przekonwertowanego na małe litery.';
    Blockly.Msg.LANG_TEXT_TRIM_TITLE_TRIM = 'trym';
    Blockly.Msg.LANG_TEXT_TRIM_TOOLTIP = 'Zwraca kopię argumentów ciągu tekstowego z usuniętymi spacjami początkowymi lub końcowymi.';
    Blockly.Msg.LANG_TEXT_STARTS_AT_INPUT_STARTS_AT = 'zaczyna się o';
    Blockly.Msg.LANG_TEXT_STARTS_AT_INPUT_TEXT = 'tekst';
    Blockly.Msg.LANG_TEXT_STARTS_AT_INPUT_PIECE = 'kawałek';
    Blockly.Msg.LANG_TEXT_STARTS_AT_INPUT = 'zaczyna się od tekstu %1 sztuka %2';
    Blockly.Msg.LANG_TEXT_STARTS_AT_TOOLTIP = 'Zwraca indeks początkowy utworu w tekście. „”, gdzie indeks 1 oznacza początek tekstu. Zwraca 0, jeśli element nie jest w text.';
    Blockly.Msg.LANG_TEXT_CONTAINS_INPUT_CONTAINS = 'zawiera';
    Blockly.Msg.LANG_TEXT_CONTAINS_INPUT_TEXT = 'tekst';
    Blockly.Msg.LANG_TEXT_CONTAINS_INPUT_PIECE = 'kawałek';
    Blockly.Msg.LANG_TEXT_CONTAINS_INPUT = 'zawiera tekst %1 sztuka %2';
    Blockly.Msg.LANG_TEXT_CONTAINS_TOOLTIP = 'Sprawdza, czy element jest zawarty w tekście.';
    Blockly.Msg.LANG_TEXT_SPLIT_INPUT_TEXT = 'tekst';
    Blockly.Msg.LANG_TEXT_SPLIT_INPUT_AT = 'w';
    Blockly.Msg.LANG_TEXT_SPLIT_INPUT_AT_LIST = 'na (liście)';
    Blockly.Msg.LANG_TEXT_SPLIT_OPERATOR_SPLIT_AT_FIRST = 'podziel na pierwszym';
    Blockly.Msg.LANG_TEXT_SPLIT_OPERATOR_SPLIT_AT_FIRST_OF_ANY = 'podziel na pierwszym z każdego';
    Blockly.Msg.LANG_TEXT_SPLIT_OPERATOR_SPLIT = 'rozdziel';
    Blockly.Msg.LANG_TEXT_SPLIT_OPERATOR_SPLIT_AT_ANY = 'podzielić na dowolnym';
    Blockly.Msg.LANG_TEXT_SPLIT_TOOLTIP_SPLIT_AT_FIRST = 'Dzieli dany tekst na dwie części, wykorzystując położenie pierwszego wystąpienia „„ tekstu ”„ w ”jako punktu podziału, i zwraca listę dwóch elementów, składającą się z części przed punktem podziału i części po podziale punkt. Podział „jabłko, banan, wiśnia, pies” z przecinkiem jako punkt podziału zwraca listę dwóch elementów: pierwszy to tekst „jabłko”, a drugi to tekst „banan, wiśnia, karma dla psów”. Zauważ, że przecinek po „jabłku” nie pojawia się w wyniku, ponieważ jest to punkt podziału.';
    Blockly.Msg.LANG_TEXT_SPLIT_TOOLTIP_SPLIT_AT_FIRST_OF_ANY = 'Dzieli dany tekst na listę dwuelementową, wykorzystując pierwszą lokalizację dowolnego elementu „na liście” jako „punkt podziału”. Podział „Kocham jabłka banany winogrona jabłkowe” na liście „(ba, ap)” zwraca listę dwóch elementów, z których pierwszym jest „Kocham”, a drugim „ples banany winogrona jabłkowe”';
    Blockly.Msg.LANG_TEXT_SPLIT_TOOLTIP_SPLIT = 'Dzieli tekst na kawałki, używając tekstu „” w „” jako punktów podziału i tworzy listę wyników. \' Podział „jeden, dwa, trzy, cztery” na „,” (przecinek) zwraca listę ”(jeden dwa trzy cztery)”. Podział „jeden-ziemniak, dwa-ziemniak, trzy-ziemniak, cztery” w „-potato”, zwraca listę ”(jeden dwa trzy cztery)”';
    Blockly.Msg.LANG_TEXT_SPLIT_TOOLTIP_SPLIT_AT_ANY = 'Dzieli dany tekst na listę, używając dowolnego elementu z listy „na” jako „punktu podziału” i zwraca listę wyników. Dzielenie „appleberry, banana, cherry, dogfood” z „\'at” ”jako dwuelementowej listy, której pierwszym elementem jest przecinek, a którego drugim elementem jest„ rry ”, zwraca listę czterech przedmiotów:„ (applebe banana che dogfood) \"';
    Blockly.Msg.LANG_TEXT_SPLIT_AT_SPACES_TITLE = 'dziel w spacjach';
    Blockly.Msg.LANG_TEXT_SPLIT_AT_TOOLTIP = 'Podziel tekst na kawałki oddzielone spacjami.';
    Blockly.Msg.LANG_TEXT_SEGMENT_TITLE_SEGMENT = 'człon';
    Blockly.Msg.LANG_TEXT_SEGMENT_INPUT_START = 'start';
    Blockly.Msg.LANG_TEXT_SEGMENT_INPUT_LENGTH = 'długość';
    Blockly.Msg.LANG_TEXT_SEGMENT_INPUT_TEXT = 'tekst';
    Blockly.Msg.LANG_TEXT_SEGMENT_INPUT = 'tekst segmentu %1 start %2 długość %3';
    Blockly.Msg.LANG_TEXT_SEGMENT_AT_TOOLTIP = 'Wyodrębnia segment o podanej długości z podanego tekstu „”, zaczynając od podanego tekstu począwszy od podanej pozycji. Pozycja 1 oznacza początek text';
    Blockly.Msg.LANG_TEXT_REPLACE_ALL_INPUT_SEGMENT = 'człon';
    Blockly.Msg.LANG_TEXT_REPLACE_ALL_INPUT_TEXT = 'tekst';
    Blockly.Msg.LANG_TEXT_REPLACE_ALL_TITLE_REPLACE_ALL = 'Zamień wszystko';
    Blockly.Msg.LANG_TEXT_REPLACE_ALL_INPUT_REPLACEMENT = 'zastąpienie';
    Blockly.Msg.LANG_TEXT_REPLACE_ALL_INPUT = 'zastąp cały tekst %1 segment %2 zastąpienie %3';
    Blockly.Msg.LANG_TEXT_REPLACE_ALL_TOOLTIP = 'Zwraca nowy tekst uzyskany przez zastąpienie wszystkich wystąpień \' segmentu przez replacement.';
    Blockly.Msg.LANG_TEXT_TEXT_IS_STRING_TITLE = 'czy tekst?';
    Blockly.Msg.LANG_TEXT_TEXT_IS_STRING_INPUT_THING = 'obiekt';
    Blockly.Msg.LANG_TEXT_TEXT_IS_STRING_TOOLTIP = 'Zwraca Prawda, jeśli obiekt <code> </code> jest łańcuchem.';
    Blockly.Msg.LANG_CATEGORY_LISTS = 'Listy';
    Blockly.Msg.LANG_LISTS_CREATE_EMPTY_TITLE = 'utwórz pustą listę';
    Blockly.Msg.LANG_LISTS_CREATE_WITH_TITLE_MAKE_LIST = 'twórz listę';
    Blockly.Msg.LANG_LISTS_CREATE_WITH_TOOLTIP = 'Utwórz listę z dowolną liczbą elementów.';
    Blockly.Msg.LANG_LISTS_CREATE_WITH_CONTAINER_TITLE_ADD = 'lista';
    Blockly.Msg.LANG_LISTS_CREATE_WITH_CONTAINER_TOOLTIP = 'Dodaj, usuń lub zmień kolejność sekcji, aby zmienić konfigurację tego bloku listy.';
    Blockly.Msg.LANG_LISTS_CREATE_WITH_ITEM_TITLE = 'pozycja';
    Blockly.Msg.LANG_LISTS_CREATE_WITH_ITEM_TOOLTIP = 'Dodaj element do listy.';
    Blockly.Msg.LANG_LISTS_ADD_ITEM_TITLE = 'pozycja';
    Blockly.Msg.LANG_LISTS_ADD_ITEM_TOOLTIP = 'Dodaj element do listy.';
    Blockly.Msg.LANG_LISTS_SELECT_ITEM_TITLE_SELECT = 'wybierz element listy';
    Blockly.Msg.LANG_LISTS_SELECT_ITEM_INPUT_LIST = 'lista';
    Blockly.Msg.LANG_LISTS_SELECT_ITEM_INPUT_INDEX = 'indeks';
    Blockly.Msg.LANG_LISTS_SELECT_ITEM_INPUT = 'wybierz listę elementów listy %1 indeks %2';
    Blockly.Msg.LANG_LISTS_SELECT_ITEM_TOOLTIP = 'Zwraca element na indeksie pozycji na liście.';
    Blockly.Msg.LANG_LISTS_IS_IN_TITLE_IS_IN = 'jest na liście?';
    Blockly.Msg.LANG_LISTS_IS_IN_INPUT_THING = 'obiekt';
    Blockly.Msg.LANG_LISTS_IS_IN_INPUT_LIST = 'lista';
    Blockly.Msg.LANG_LISTS_IS_IN_INPUT = 'jest na liście? obiekt %1 lista %2';
    Blockly.Msg.LANG_LISTS_IS_IN_TOOLTIP = 'Zwraca Prawda, jeśli obiekt jest elementem na liście i Fałsz jeśli nie.';
    Blockly.Msg.LANG_LISTS_POSITION_IN_TITLE_POSITION = 'indeks na liście';
    Blockly.Msg.LANG_LISTS_POSITION_IN_INPUT_THING = 'obiekt';
    Blockly.Msg.LANG_LISTS_POSITION_IN_INPUT_LIST = 'lista';
    Blockly.Msg.LANG_LISTS_POSITION_IN_INPUT = 'indeks na liście obiektów %1 lista %2';
    Blockly.Msg.LANG_LISTS_POSITION_IN_TOOLTIP = 'Znajdź pozycję obiektów na liście. Jeśli nie ma go w liście, zwróć 0.';
    Blockly.Msg.LANG_LISTS_PICK_RANDOM_TITLE_PICK_RANDOM = 'wybierz losowy element';
    Blockly.Msg.LANG_LISTS_PICK_RANDOM_ITEM_INPUT_LIST = 'lista';
    Blockly.Msg.LANG_LISTS_PICK_RANDOM_TOOLTIP = 'Wybierz element losowo z listy.';
    Blockly.Msg.LANG_LISTS_REPLACE_ITEM_TITLE_REPLACE = 'zamień element listy';
    Blockly.Msg.LANG_LISTS_REPLACE_ITEM_INPUT_LIST = 'lista';
    Blockly.Msg.LANG_LISTS_REPLACE_ITEM_INPUT_INDEX = 'indeks';
    Blockly.Msg.LANG_LISTS_REPLACE_ITEM_INPUT_REPLACEMENT = 'zastąpienie';
    Blockly.Msg.LANG_LISTS_REPLACE_ITEM_INPUT = 'zastępuje listę elementów listy %1 indeks %2 zastąpienie %3';
    Blockly.Msg.LANG_LISTS_REPLACE_ITEM_TOOLTIP = 'Zastępuje n-ty element na liście.';
    Blockly.Msg.LANG_LISTS_REMOVE_ITEM_TITLE_REMOVE = 'usuwa element listy';
    Blockly.Msg.LANG_LISTS_REMOVE_ITEM_INPUT_LIST = 'lista';
    Blockly.Msg.LANG_LISTS_REMOVE_ITEM_INPUT_INDEX = 'indeks';
    Blockly.Msg.LANG_LISTS_REMOVE_ITEM_INPUT = 'usuwa listę elementów listy %1 indeks %2';
    Blockly.Msg.LANG_LISTS_REMOVE_ITEM_TOOLTIP = 'Usuwa element z określonej pozycji z listy.';
    Blockly.Msg.LANG_LISTS_LENGTH_INPUT_LENGTH = 'długość listy';
    Blockly.Msg.LANG_LISTS_LENGTH_INPUT_LIST = 'lista';
    Blockly.Msg.LANG_LISTS_LENGTH_INPUT = 'długość listy listy %1';
    Blockly.Msg.LANG_LISTS_LENGTH_TOOLTIP = 'Zlicza liczbę elementów na liście.';
    Blockly.Msg.LANG_LISTS_APPEND_LIST_TITLE_APPEND = 'dołącz do listy';
    Blockly.Msg.LANG_LISTS_APPEND_LIST_INPUT = 'dołącz do listy list1 %1 lista2 %2';
    Blockly.Msg.LANG_LISTS_APPEND_LIST_TOOLTIP = 'Dołącza wszystkie elementy z listy2 na końcu listy1. Po dołączeniu „” lista1 będzie zawierać te dodatkowe elementy, ale lista2 będzie niezmieniona.';
    Blockly.Msg.LANG_LISTS_ADD_ITEMS_TITLE_ADD = 'dodaj elementy do listy';
    Blockly.Msg.LANG_LISTS_ADD_ITEMS_INPUT_LIST = 'lista';
    Blockly.Msg.LANG_LISTS_ADD_ITEMS_INPUT_ITEM = 'pozycja';
    Blockly.Msg.LANG_LISTS_ADD_ITEMS_INPUT = 'dodaj elementy do listy listy %1 element %2';
    Blockly.Msg.LANG_LISTS_ADD_ITEMS_TOOLTIP = 'Dodaje elementy na końcu listy.';
    Blockly.Msg.LANG_LISTS_ADD_ITEMS_CONTAINER_TITLE_ADD = 'lista';
    Blockly.Msg.LANG_LISTS_ADD_ITEMS_CONTAINER_TOOLTIP = 'Dodaj, usuń lub zmień kolejność sekcji, aby zmienić konfigurację tego bloku listy.';
    Blockly.Msg.LANG_LISTS_COPY_TITLE_COPY = 'kopiuj listę';
    Blockly.Msg.LANG_LISTS_COPY_INPUT_LIST = 'lista';
    Blockly.Msg.LANG_LISTS_COPY_TOOLTIP = 'Tworzy kopię listy, obejmując kopiowanie wszystkich podlist';
    Blockly.Msg.LANG_LISTS_IS_LIST_TITLE_IS_LIST = 'jest listą?';
    Blockly.Msg.LANG_LISTS_IS_LIST_INPUT_THING = 'obiekt';
    Blockly.Msg.LANG_LISTS_IS_LIST_TOOLTIP = 'Sprawdza, czy dane są listą.';
    Blockly.Msg.LANG_LISTS_TO_CSV_ROW_TITLE_TO_CSV = 'lista do wiersza csv';
    Blockly.Msg.LANG_LISTS_TO_CSV_ROW_INPUT_LIST = 'lista';
    Blockly.Msg.LANG_LISTS_TO_CSV_ROW_TOOLTIP = 'Interpretuje listę jako wiersz tabeli i zwraca tekst CSV „” (wartość rozdzielana przecinkami) reprezentujący wiersz. Każdy element na liście wierszy jest uważany za pole i jest cytowany z cudzysłowami w wynikowym tekście CSV. Przedmioty są oddzielone przecinkami. Zwrócony tekst wiersza nie ma separatora linii na końcu. ';
    Blockly.Msg.LANG_LISTS_FROM_CSV_ROW_TITLE_FROM_CSV = 'lista z wiersza CSV';
    Blockly.Msg.LANG_LISTS_FROM_CSV_ROW_INPUT_TEXT = 'tekst';
    Blockly.Msg.LANG_LISTS_FROM_CSV_ROW_TOOLTIP = 'Analizuje tekst jako sformatowany wiersz „” w formacie CSV (wartość rozdzielana przecinkami), aby utworzyć listę pól. Jest błędem, że tekst wiersza zawiera niezmienione znaki nowej linii wewnątrz pól (efektywnie, wiele linii). Tekst wiersza może kończyć się pojedynczym znakiem nowej linii lub CRLF';
    Blockly.Msg.LANG_LISTS_TO_CSV_TABLE_TITLE_TO_CSV = 'lista do tabeli CSV';
    Blockly.Msg.LANG_LISTS_TO_CSV_TABLE_INPUT_LIST = 'lista';
    Blockly.Msg.LANG_LISTS_TO_CSV_TABLE_TOOLTIP = 'Interpretuje listę jako tabelę w formacie głównym wiersza, a „” zwraca tekst CSV (wartość rozdzielana przecinkami) reprezentujący tabelę. Każda pozycja na liście powinna sama być listą reprezentującą wiersz tabeli CSV. Każdy element na liście wierszy jest uważany za pole i jest cytowany z cudzysłowami w wynikowym tekście CSV. W zwróconym tekście elementy w wierszach są oddzielone przecinkami, a wiersze oddzielone są CRLF () ';
    Blockly.Msg.LANG_LISTS_FROM_CSV_TABLE_TITLE_FROM_CSV = 'lista z tabeli CSV';
    Blockly.Msg.LANG_LISTS_FROM_CSV_TABLE_INPUT_TEXT = 'tekst';
    Blockly.Msg.LANG_LISTS_FROM_CSV_TABLE_TOOLTIP = 'Analizuje tekst jako sformatowaną tabelę „” w formacie CSV (wartość rozdzielana przecinkami), aby utworzyć listę wierszy, z których każdy jest listą pól. Wiersze mogą być rozdzielone znakami newlines () lub CRLF () ';
    Blockly.Msg.LANG_LISTS_INSERT_TITLE_INSERT_LIST = 'wstaw element listy';
    Blockly.Msg.LANG_LISTS_INSERT_INPUT_LIST = 'lista';
    Blockly.Msg.LANG_LISTS_INSERT_INPUT_INDEX = 'indeks';
    Blockly.Msg.LANG_LISTS_INSERT_INPUT_ITEM = 'pozycja';
    Blockly.Msg.LANG_LISTS_INSERT_INPUT = 'wstawia listę elementów listy %1 indeks %2 pozycja %3';
    Blockly.Msg.LANG_LISTS_INSERT_TOOLTIP = 'Wstawia element na listę w określonej pozycji.';
    Blockly.Msg.LANG_LISTS_TITLE_IS_EMPTY = 'czy lista pusta?';
    Blockly.Msg.LANG_LISTS_INPUT_LIST = 'lista';
    Blockly.Msg.LANG_LISTS_IS_EMPTY_TOOLTIP = 'Zwraca Prawda, jeśli lista jest pusta.';
    Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_TITLE_LOOKUP_IN_PAIRS = 'przegląda pary';
    Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_INPUT_KEY = 'klawisz';
    Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_INPUT_PAIRS = 'pary';
    Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_INPUT_NOT_FOUND = 'nieZnaleziono';
    Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_INPUT = 'przegląda pary klucz %1 pary %2 nieZnaleziono %3';
    Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_TOOLTIP = 'Zwraca wartość powiązaną z kluczem na liście par';
    Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_TITLE_INIT = 'inicjuj zmienną globalną';
    Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_NAME = 'nazwa';
    Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_TO = 'do';
    Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_COLLAPSED_TEXT = 'globalna';
    Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_TOOLTIP = 'Tworzy zmienną globalną i nadaje jej wartość dołączonych bloków.';
    Blockly.Msg.LANG_VARIABLES_GET_TITLE_GET = 'uzyskaj';
    Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_IN_RETURN = 'w';
    Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_COLLAPSED_TEXT = 'lokalny';
    Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_TOOLTIP = 'Pozwala tworzyć zmienne, które są dostępne tylko w części powrotnej tego bloku.';
    Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_TRANSLATED_NAME = 'inicjuj zmienną lokalną';
    Blockly.Msg.LANG_VARIABLES_LOCAL_MUTATOR_CONTAINER_TITLE_LOCAL_NAMES = 'lokalne nazwy';
    Blockly.Msg.LANG_VARIABLES_LOCAL_MUTATOR_CONTAINER_TOOLTIP = '';
    Blockly.Msg.LANG_VARIABLES_LOCAL_MUTATOR_ARG_TITLE_NAME = 'nazwa';
    Blockly.Msg.LANG_VARIABLES_LOCAL_MUTATOR_ARG_DEFAULT_VARIABLE = 'x';
    Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_DEFINE = 'do';
    Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_PROCEDURE = 'funkcja';
    Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_DO = 'wykonaj';
    Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_COLLAPSED_PREFIX = 'do';
    Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_TOOLTIP = 'Funkcja, która nie zwraca wartości.';
    Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_THEN_RETURN = 'wynik';
    Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_DO = 'wykonaj';
    Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_RETURN = 'wynik';
    Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_TOOLTIP = 'Uruchamia bloki w \' wykonaj \' i zwraca instrukcję. Przydatne, jeśli musisz uruchomić funkcję przed zwróceniem wartości do zmiennej.';
    Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_COLLAPSED_TEXT = 'wykonaj/wynik';
    Blockly.Msg.LANG_PROCEDURES_DEFRETURN_DEFINE = 'do';
    Blockly.Msg.LANG_PROCEDURES_DEFRETURN_RETURN = 'wynik';
    Blockly.Msg.LANG_PROCEDURES_DEFRETURN_COLLAPSED_PREFIX = 'do';
    Blockly.Msg.LANG_PROCEDURES_DEFRETURN_TOOLTIP = 'Funkcja zwracająca wartość wyniku.';
    Blockly.Msg.LANG_PROCEDURES_DEF_DUPLICATE_WARNING = 'Ostrzeżenie: Ta funkcja ma zduplikowane wejścia.';
    Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_CALL = 'połączenie';
    Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_PROCEDURE = 'funkcja';
    Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_COLLAPSED_PREFIX = 'połączenie';
    Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_TOOLTIP = 'Wywołaj procedurę bez wartości zwracanej.';
    Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_TRANSLATED_NAME = 'zadzwoń bez powrotu';
    Blockly.Msg.LANG_PROCEDURES_CALLRETURN_COLLAPSED_PREFIX = 'połączenie';
    Blockly.Msg.LANG_PROCEDURES_CALLRETURN_TOOLTIP = 'Wywołaj procedurę z wartością zwracaną.';
    Blockly.Msg.LANG_PROCEDURES_CALLRETURN_TRANSLATED_NAME = 'zwrot połączenia';
    Blockly.Msg.LANG_PROCEDURES_MUTATORCONTAINER_TITLE = 'wejścia';
    Blockly.Msg.LANG_PROCEDURES_MUTATORARG_TITLE = 'wkład:';
    Blockly.Msg.LANG_PROCEDURES_HIGHLIGHT_DEF = 'Zaznacz procedurę';
    Blockly.Msg.LANG_PROCEDURES_MUTATORCONTAINER_TOOLTIP = '';
    Blockly.Msg.LANG_PROCEDURES_MUTATORARG_TOOLTIP = '';
    Blockly.Msg.UNDEFINED_BLOCK_TOOLTIP = 'Ten blok nie jest zdefiniowany. Usuń ten blok!';
    Blockly.Msg.LANG_COMPONENT_BLOCK_TITLE_WHEN = 'gdy';
    Blockly.Msg.LANG_COMPONENT_BLOCK_TITLE_DO = 'wykonaj';
    Blockly.Msg.LANG_COMPONENT_BLOCK_METHOD_TITLE_CALL = 'połączenie';
    Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_METHOD_TITLE_CALL = 'połączenie';
    Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_METHOD_TITLE_FOR_COMPONENT = 'dla komponentu';
    Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_GETTER_TITLE_OF_COMPONENT = 'składnika';
    Blockly.Msg.LANG_COMPONENT_BLOCK_SETTER_TITLE_SET = 'zestaw';
    Blockly.Msg.LANG_COMPONENT_BLOCK_SETTER_TITLE_TO = 'do';
    Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_SETTER_TITLE_SET = 'zestaw';
    Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_SETTER_TITLE_TO = 'do';
    Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_SETTER_TITLE_OF_COMPONENT = 'składnika';
  }
};

Blockly.Msg.pl.switch_blockly_language_to_pl.init();
Blockly.Msg.pl.switch_language_to_polish.init();
