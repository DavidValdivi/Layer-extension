
# Blocks editor definitions
blockseditor.Blockly.Msg.UNDO = Cofnij
# Description: Switch language to polish.
blockseditor.Blockly.Msg.REDO = Ponów
blockseditor.Blockly.Msg.CLEAN_UP = Oczyść bloki
blockseditor.Blockly.Msg.HIDE = Ukryj kontrolki obszaru roboczego
blockseditor.Blockly.Msg.SHOW = Pokaż kontrolki obszaru roboczego
blockseditor.Blockly.Msg.DUPLICATE_BLOCK = Duplikuj
blockseditor.Blockly.Msg.REMOVE_COMMENT = Usuń komentarz
blockseditor.Blockly.Msg.ADD_COMMENT = Dodaj komentarz
blockseditor.Blockly.Msg.EXTERNAL_INPUTS = Wejścia zewnętrzne
blockseditor.Blockly.Msg.INLINE_INPUTS = Wejścia liniowe
blockseditor.Blockly.Msg.HORIZONTAL_PARAMETERS = Rozmieść parametry w poziomie
blockseditor.Blockly.Msg.VERTICAL_PARAMETERS = Rozmieść parametry w pionie
blockseditor.Blockly.Msg.CONFIRM_DELETE = Potwierdź usunięcie
blockseditor.Blockly.Msg.DELETE_ALL_BLOCKS = Usunąć wszystkie %1 bloki?
blockseditor.Blockly.Msg.DELETE_BLOCK = Usuń blok
blockseditor.Blockly.Msg.DELETE_X_BLOCKS = Usuń %1 bloków
blockseditor.Blockly.Msg.COLLAPSE_BLOCK = Zwiń blok
blockseditor.Blockly.Msg.EXPAND_BLOCK = Rozwiń blok
blockseditor.Blockly.Msg.DISABLE_BLOCK = Wyłącz blok
blockseditor.Blockly.Msg.ENABLE_BLOCK = Włącz blok
blockseditor.Blockly.Msg.HELP = Pomoc
blockseditor.Blockly.Msg.EXPORT_IMAGE = Pobierz bloki jako obraz
blockseditor.Blockly.Msg.COLLAPSE_ALL = Zwiń bloki
blockseditor.Blockly.Msg.EXPAND_ALL = Rozwiń bloki
blockseditor.Blockly.Msg.ARRANGE_H = Rozmieść bloki w poziomie
blockseditor.Blockly.Msg.ARRANGE_V = Rozmieść bloki pionowo
blockseditor.Blockly.Msg.ARRANGE_S = Ułóż bloki po przekątnej
blockseditor.Blockly.Msg.SORT_W = Sortuj bloki według szerokości
blockseditor.Blockly.Msg.SORT_H = Sortuj bloki według wysokości
blockseditor.Blockly.Msg.SORT_C = Sortuj bloki według kategorii
blockseditor.Blockly.Msg.COPY_TO_BACKPACK = Dodaj do plecaka
blockseditor.Blockly.Msg.COPY_ALLBLOCKS = Skopiuj wszystkie bloki do plecaka
blockseditor.Blockly.Msg.REMOVE_FROM_BACKPACK = Usuń z plecaka
blockseditor.Blockly.Msg.BACKPACK_GET = Wklej wszystkie bloki z plecaka
blockseditor.Blockly.Msg.BACKPACK_EMPTY = Opróżnij plecak
blockseditor.Blockly.Msg.BACKPACK_CONFIRM_EMPTY = Czy na pewno chcesz opróżnić plecak?
blockseditor.Blockly.Msg.BACKPACK_DOC_TITLE = Informacje o plecaku
blockseditor.Blockly.Msg.SHOW_BACKPACK_DOCUMENTATION = Pokaż dokumentację plecaka
blockseditor.Blockly.Msg.BACKPACK_DOCUMENTATION = Plecak to funkcja kopiowania/wklejania. Pozwala kopiować bloki z jednego projektu lub ekranu i wklejać je do innego projektu lub ekranu. Aby skopiować, możesz przeciągać i upuszczać bloki do plecaka. Aby wkleić, kliknij ikonę Plecaka i przeciągnij i upuść bloki do obszaru roboczego. </p><p> Jeśli opuścisz MIT App Inventor z blokami pozostawionymi w plecaku, będą tam przy następnym logowaniu. </p><p><a href\=''/reference/other/backpack.html'' target\=''_blank''> Kliknij tutaj </a>, aby uzyskać dalszą dokumentację i wideo „jak to zrobić”.
blockseditor.Blockly.Msg.ENABLE_GRID = Włącz siatkę Pulpi
blockseditor.Blockly.Msg.DISABLE_GRID = Wyłącz siatkę Pulpitu
blockseditor.Blockly.Msg.ENABLE_SNAPPING = Włącz przyciąganie do siatki
blockseditor.Blockly.Msg.DISABLE_SNAPPING = Wyłącz przyciąganie do siatki
blockseditor.Blockly.Msg.DISABLE_ALL_BLOCKS = Wyłącz wszystkie bloki
blockseditor.Blockly.Msg.ENABLE_ALL_BLOCKS = Włącz wszystkie bloki
blockseditor.Blockly.Msg.HIDE_ALL_COMMENTS = Ukryj wszystkie komentarze
blockseditor.Blockly.Msg.SHOW_ALL_COMMENTS = Pokaż wszystkie komentarze
blockseditor.Blockly.Msg.GENERICIZE_BLOCK = Stwórz rodzajowy
blockseditor.Blockly.Msg.UNGENERICIZE_BLOCK = Określ
blockseditor.Blockly.Msg.CHANGE_VALUE_TITLE = Zmiana waluty\:
blockseditor.Blockly.Msg.NEW_VARIABLE = Nowa zmienna ...
blockseditor.Blockly.Msg.NEW_VARIABLE_TITLE = Nowa nazwa zmiennej\:
blockseditor.Blockly.Msg.RENAME_VARIABLE = Zmień nazwę zmiennej...
blockseditor.Blockly.Msg.RENAME_VARIABLE_TITLE = Zmień nazwę wszystkich zmiennych „%1” na\:
blockseditor.Blockly.Msg.VARIABLE_CATEGORY = Zmienne
blockseditor.Blockly.Msg.PROCEDURE_CATEGORY = Funkcje
blockseditor.Blockly.Msg.ERROR_BLOCK_CANNOT_BE_IN_DEFINTION = Ten blok nie może być w definicji
blockseditor.Blockly.Msg.ERROR_SELECT_VALID_ITEM_FROM_DROPDOWN = Wybierz prawidłowy element na liście rozwijanej.
blockseditor.Blockly.Msg.ERROR_DUPLICATE_EVENT_HANDLER = Jest to zduplikowana obsługa zdarzeń dla tego komponentu.
blockseditor.Blockly.Msg.ERROR_COMPONENT_DOES_NOT_EXIST = Komponent nie istnieje
blockseditor.Blockly.Msg.ERROR_BLOCK_IS_NOT_DEFINED = Ten blok nie jest zdefiniowany. Usuń ten blok!
blockseditor.Blockly.Msg.ERROR_BREAK_ONLY_IN_LOOP = Blok przerwania powinien być używany tylko w pętlach
blockseditor.Blockly.Msg.LANG_COLOUR_PICKER_TOOLTIP = Kliknij kwadrat, aby wybrać kolor.
blockseditor.Blockly.Msg.LANG_COLOUR_BLACK = czarny
blockseditor.Blockly.Msg.LANG_COLOUR_WHITE = biały
blockseditor.Blockly.Msg.LANG_COLOUR_RED = czerwony
blockseditor.Blockly.Msg.LANG_COLOUR_PINK = różowy
blockseditor.Blockly.Msg.LANG_COLOUR_ORANGE = pomarańczowy
blockseditor.Blockly.Msg.LANG_COLOUR_YELLOW = żółty
blockseditor.Blockly.Msg.LANG_COLOUR_GREEN = zielony
blockseditor.Blockly.Msg.LANG_COLOUR_CYAN = cyjan
blockseditor.Blockly.Msg.LANG_COLOUR_BLUE = niebieski
blockseditor.Blockly.Msg.LANG_COLOUR_MAGENTA = magenta
blockseditor.Blockly.Msg.LANG_COLOUR_LIGHT_GRAY = jasny szary
blockseditor.Blockly.Msg.LANG_COLOUR_DARK_GRAY = ciemny szary
blockseditor.Blockly.Msg.LANG_COLOUR_GRAY = szary
blockseditor.Blockly.Msg.LANG_COLOUR_SPLIT_COLOUR = złóż kolor
blockseditor.Blockly.Msg.LANG_COLOUR_SPLIT_COLOUR_TOOLTIP = Lista czterech elementów, z których każdy mieści się w zakresie od 0 do 255, reprezentujących składniki czerwony, zielony, niebieski i alfa.
blockseditor.Blockly.Msg.LANG_COLOUR_MAKE_COLOUR = stwórz kolor
blockseditor.Blockly.Msg.LANG_COLOUR_MAKE_COLOUR_TOOLTIP = Kolor z podanymi komponentami czerwony, zielony, niebieski i opcjonalnie alfa
blockseditor.Blockly.Msg.LANG_CATEGORY_CONTROLS = Kontrola
blockseditor.Blockly.Msg.LANG_CONTROLS_IF_MSG_IF = Jeśli
blockseditor.Blockly.Msg.LANG_CONTROLS_IF_MSG_ELSEIF = inaczej jeśli
blockseditor.Blockly.Msg.LANG_CONTROLS_IF_MSG_ELSE = inaczej
blockseditor.Blockly.Msg.LANG_CONTROLS_IF_MSG_THEN = wtedy
blockseditor.Blockly.Msg.LANG_CONTROLS_IF_IF_TITLE_IF = Jeśli
blockseditor.Blockly.Msg.LANG_CONTROLS_IF_IF_TOOLTIP = Dodaj, usuń lub zmień kolejność sekcji, aby zmienić konfigurację, bloku "Jeśli".
blockseditor.Blockly.Msg.LANG_CONTROLS_IF_ELSEIF_TITLE_ELSEIF = inaczej jeśli
blockseditor.Blockly.Msg.LANG_CONTROLS_IF_ELSEIF_TOOLTIP = Dodaj warunek do bloku Jeśli.
blockseditor.Blockly.Msg.LANG_CONTROLS_IF_ELSE_TITLE_ELSE = inaczej
blockseditor.Blockly.Msg.LANG_CONTROLS_IF_ELSE_TOOLTIP = Dodaj ostateczny warunek catch-all do bloku Jeśli.
blockseditor.Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_TITLE_REPEAT = powtórz
blockseditor.Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_INPUT_DO = wykonaj
blockseditor.Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_OPERATOR_WHILE = gdy
blockseditor.Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_OPERATOR_UNTIL = aż do
blockseditor.Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_TOOLTIP_WHILE = Gdy wartość jest Prawdą, wykonaj kilka instrukcji.
blockseditor.Blockly.Msg.LANG_CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL = Gdy wartość jest Fałszem, wykonaj kilka instrukcji.
blockseditor.Blockly.Msg.LANG_CONTROLS_FOR_INPUT_WITH = Oblicz z
blockseditor.Blockly.Msg.LANG_CONTROLS_FOR_INPUT_VAR = x
blockseditor.Blockly.Msg.LANG_CONTROLS_FOR_INPUT_FROM = od
blockseditor.Blockly.Msg.LANG_CONTROLS_FOR_INPUT_TO = do
blockseditor.Blockly.Msg.LANG_CONTROLS_FOR_INPUT_DO = wykonaj
blockseditor.Blockly.Msg.LANG_CONTROLS_FOR_TOOLTIP = Policz od numeru początkowego do numeru końcowego. Dla każdego licznika ustaw bieżący numer licznika na zmienną „%1”, a następnie wykonaj kilka instrukcji.
blockseditor.Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_ITEM = dla każdego
blockseditor.Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_VAR = numeru
blockseditor.Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_START = od
blockseditor.Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_END = do
blockseditor.Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_STEP = przez
blockseditor.Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_DO = wykonaj
blockseditor.Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_COLLAPSED_TEXT = dla numeru w zasięgu
blockseditor.Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_COLLAPSED_PREFIX = dla
blockseditor.Blockly.Msg.LANG_CONTROLS_FORRANGE_INPUT_COLLAPSED_SUFFIX = w zakresie
blockseditor.Blockly.Msg.LANG_CONTROLS_FORRANGE_TOOLTIP = Uruchamia bloki w sekcji "wykonaj" dla każdej wartości liczbowej w zakresie od początku do końca, zwiększając wartość za każdym razem. Użyj podanej nazwy zmiennej, aby odnieść się do bieżącej wartości
blockseditor.Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_ITEM = dla każdej
blockseditor.Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_VAR = pozycji
blockseditor.Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_INLIST = na liście
blockseditor.Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_DO = wykonaj
blockseditor.Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_COLLAPSED_TEXT = dla pozycji na liście
blockseditor.Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_COLLAPSED_PREFIX = dla
blockseditor.Blockly.Msg.LANG_CONTROLS_FOREACH_INPUT_COLLAPSED_SUFFIX = na liście
blockseditor.Blockly.Msg.LANG_CONTROLS_FOREACH_TOOLTIP = Uruchamia bloki w sekcji „wykonaj” dla każdego elementu na liście. Użyj podanej nazwy zmiennej, aby odnieść się do bieżącego elementu listy.
blockseditor.Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_INPUT_OFLOOP = pętli
blockseditor.Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK = przerwa
blockseditor.Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE = kontynuuj następną iterację
blockseditor.Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK = Wyjdź z pętli zawierającej.
blockseditor.Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE = Pomiń resztę tej pętli i przejdź do następnej iteracji.
blockseditor.Blockly.Msg.LANG_CONTROLS_FLOW_STATEMENTS_WARNING = Ostrzeżenie\: ten blok może być używany tylko w pętli.
blockseditor.Blockly.Msg.LANG_CONTROLS_WHILE_TITLE = gdy
blockseditor.Blockly.Msg.LANG_CONTROLS_WHILE_INPUT_TEST = test
blockseditor.Blockly.Msg.LANG_CONTROLS_WHILE_INPUT_DO = wykonaj
blockseditor.Blockly.Msg.LANG_CONTROLS_WHILE_COLLAPSED_TEXT = gdy
blockseditor.Blockly.Msg.LANG_CONTROLS_CHOOSE_TITLE = jeśli
blockseditor.Blockly.Msg.LANG_CONTROLS_CHOOSE_TOOLTIP = Jeśli sprawdzany warunek jest prawdą,''zwraca wynik uruchomionego wyrażenia dołączonego do bloku ''wtedy-zwróć\
blockseditor.Blockly.Msg.LANG_CONTROLS_CHOOSE_INPUT_THEN_RETURN = wtedy
blockseditor.Blockly.Msg.LANG_CONTROLS_CHOOSE_INPUT_ELSE_RETURN = inaczej
blockseditor.Blockly.Msg.LANG_CONTROLS_CHOOSE_COLLAPSED_TEXT = Jeśli
blockseditor.Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_INPUT_DO = wykonaj
blockseditor.Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_INPUT_RETURN = wynik
blockseditor.Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_TOOLTIP = Uruchamia bloki w ''wykonaj'' i zwraca rezultat. Przydatne, jeśli musisz uruchomić funkcję przed zwróceniem wartości do zmiennej.
blockseditor.Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_COLLAPSED_TEXT = wykonaj/wynik
blockseditor.Blockly.Msg.LANG_CONTROLS_DO_THEN_RETURN_TITLE = wykonaj wynik
blockseditor.Blockly.Msg.LANG_CONTROLS_EVAL_BUT_IGNORE_TOOLTIP = Uruchamia połączony blok kodu i ignoruje wartość zwracaną (jeśli istnieje). Przydatne, jeśli trzeba wywołać procedurę z wartością zwracaną, ale nie potrzebujesz wartości.
blockseditor.Blockly.Msg.LANG_CONTROLS_EVAL_BUT_IGNORE_TITLE = uruchom, ale ignoruj wynik
blockseditor.Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_TITLE = otwórz inny ekran
blockseditor.Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_INPUT_SCREENNAME = nazwaEkranu
blockseditor.Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_COLLAPSED_TEXT = otwórz ekran
blockseditor.Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_TOOLTIP = Otwiera nowy ekran w aplikacji z wieloma ekranami.
blockseditor.Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_TITLE = otwórz kolejny ekran z wartością początkową
blockseditor.Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_INPUT_SCREENNAME = nazwaEkranu
blockseditor.Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_INPUT_STARTVALUE = wartośćPoczątkowa
blockseditor.Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_TOOLTIP = Otwiera nowy ekran w aplikacji z wieloma ekranami i przekazuje wartość początkową do tego ekranu.
blockseditor.Blockly.Msg.LANG_CONTROLS_OPEN_ANOTHER_SCREEN_WITH_START_VALUE_COLLAPSED_TEXT = otwórz ekran z wartością
blockseditor.Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_TITLE = uzyskaj wartość początkową
blockseditor.Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_INPUT_SCREENNAME = nazwaEkranu
blockseditor.Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_INPUT_STARTVALUE = wartośćPoczątkowa
blockseditor.Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_COLLAPSED_TEXT = uzyskaj wartość początkową
blockseditor.Blockly.Msg.LANG_CONTROLS_GET_START_VALUE_TOOLTIP = Zwraca wartość, która została przekazana do tego ekranu po jego otwarciu, zazwyczaj przez inny ekran w aplikacji wieloekranowej. Jeśli nie przekazano żadnej wartości, zwraca pusty tekst.
blockseditor.Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_TITLE = zamknij ekran
blockseditor.Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_COLLAPSED_TEXT = zamknij ekran
blockseditor.Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_TOOLTIP = Zamknij bieżący ekran
blockseditor.Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_VALUE_TITLE = zamknij ekran z wartością
blockseditor.Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_VALUE_INPUT_RESULT = wynik
blockseditor.Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_VALUE_COLLAPSED_TEXT = zamknij ekran z wartością
blockseditor.Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_VALUE_TOOLTIP = Zamyka bieżący ekran i zwraca wynik na ekran, który otworzył ten ekran.
blockseditor.Blockly.Msg.LANG_CONTROLS_CLOSE_APPLICATION_TITLE = zamknij aplikację
blockseditor.Blockly.Msg.LANG_CONTROLS_CLOSE_APPLICATION_COLLAPSED_TEXT = zamknij aplikację
blockseditor.Blockly.Msg.LANG_CONTROLS_CLOSE_APPLICATION_TOOLTIP = Zamyka wszystkie ekrany w tej aplikacji i zatrzymuje aplikację.
blockseditor.Blockly.Msg.LANG_CONTROLS_GET_PLAIN_START_TEXT_TITLE = uzyskaj zwykły tekst początkowy
blockseditor.Blockly.Msg.LANG_CONTROLS_GET_PLAIN_START_TEXT_COLLAPSED_TEXT = uzyskaj zwykły tekst początkowy
blockseditor.Blockly.Msg.LANG_CONTROLS_GET_PLAIN_START_TEXT_TOOLTIP = Zwraca zwykły tekst, który został przekazany do tego ekranu, gdy został uruchomiony przez inną aplikację. Jeśli nie przekazano żadnej wartości, zwraca pusty tekst. W przypadku aplikacji z wieloma ekranami użyj wartości początkowej, a nie zwykłego tekstu początkowego.
blockseditor.Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_PLAIN_TEXT_TITLE = zamknij ekran ze zwykłym tekstem
blockseditor.Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_PLAIN_TEXT_INPUT_TEXT = tekst
blockseditor.Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_PLAIN_TEXT_COLLAPSED_TEXT = zamknij ekran ze zwykłym tekstem
blockseditor.Blockly.Msg.LANG_CONTROLS_CLOSE_SCREEN_WITH_PLAIN_TEXT_TOOLTIP = Zamyka bieżący ekran i zwraca tekst do aplikacji, która go otworzyła. To polecenie służy do zwracania tekstu do działań innych niż aplikacja Inventor, a nie do ekranów aplikacji Inventor. W przypadku ekranów aplikacji Inventor, podobnie jak w aplikacjach z wieloma ekranami, użyj opcji Zamknij ekran z wartością, a nie Zamknij ekran z prostym tekstem.
blockseditor.Blockly.Msg.LANG_CONTROLS_BREAK_TITLE = Przerwij
blockseditor.Blockly.Msg.LANG_CONTROLS_BREAK_INPUT_TEXT = wartość
blockseditor.Blockly.Msg.LANG_CONTROLS_BREAK_COLLAPSED_TEXT = Przerwij
blockseditor.Blockly.Msg.LANG_CATEGORY_LOGIC = Logiczne
blockseditor.Blockly.Msg.LANG_LOGIC_COMPARE_TOOLTIP_EQ = Sprawdza, czy dwa obiekty są równe. Porównywane mogą być dowolne obiekty, nie tylko liczby. Liczby są uważane za równe drukowanej formie jako łańcuchy, na przykład liczba 0 jest równa tekstowi „0”. Ponadto dwa ciągi reprezentujące liczby są równe, jeśli liczby są równe, na przykład „1” jest równe „01”.
blockseditor.Blockly.Msg.LANG_LOGIC_COMPARE_TOOLTIP_NEQ = Zwraca Prawdę, jeśli obie wprowadzone wartości nie są sobie równe.
blockseditor.Blockly.Msg.LANG_LOGIC_COMPARE_TRANSLATED_NAME = logiczne równa się
blockseditor.Blockly.Msg.LANG_LOGIC_COMPARE_EQ = \=
blockseditor.Blockly.Msg.LANG_LOGIC_COMPARE_NEQ = ≠
blockseditor.Blockly.Msg.LANG_LOGIC_OPERATION_AND = i
blockseditor.Blockly.Msg.LANG_LOGIC_OPERATION_OR = lub
blockseditor.Blockly.Msg.LANG_LOGIC_OPERATION_TOOLTIP_AND = Zwraca Prawda, jeśli wszystkie dane wejściowe są prawdziwe.
blockseditor.Blockly.Msg.LANG_LOGIC_OPERATION_TOOLTIP_OR = Zwraca Prawda, jeśli jakieś dane wejściowe są prawdziwe.
blockseditor.Blockly.Msg.LANG_LOGIC_NEGATE_INPUT_NOT = nie
blockseditor.Blockly.Msg.LANG_LOGIC_NEGATE_TOOLTIP = Zwraca Prawda, jeśli dane wejściowe są fałszywe. Zwraca fałsz, jeśli dane wejściowe są prawdziwe.
blockseditor.Blockly.Msg.LANG_LOGIC_BOOLEAN_TRUE = Prawda
blockseditor.Blockly.Msg.LANG_LOGIC_BOOLEAN_FALSE = Fałsz
blockseditor.Blockly.Msg.LANG_LOGIC_BOOLEAN_TOOLTIP_TRUE = Zwraca wartość logiczną Prawda.
blockseditor.Blockly.Msg.LANG_LOGIC_BOOLEAN_TOOLTIP_FALSE = Zwraca wartość logiczną Fałsz.
blockseditor.Blockly.Msg.LANG_CATEGORY_MATH = Matematyczne
blockseditor.Blockly.Msg.LANG_MATH_NUMBER_TOOLTIP = Używa wprowadzonej liczby.
blockseditor.Blockly.Msg.LANG_MATH_MUTATOR_ITEM_INPUT_NUMBER = numer
blockseditor.Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_EQ = Zwraca Prawda, jeśli obie liczby są sobie równe.
blockseditor.Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_NEQ = Zwraca Prawda, jeśli obie liczby nie są sobie równe.
blockseditor.Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_LT = Zwraca Prawda, jeśli pierwsza liczba jest mniejsza niż druga liczba.
blockseditor.Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_LTE = Zwraca Prawda, jeśli pierwsza liczba jest mniejsza lub równa drugiej liczbie.
blockseditor.Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_GT = Zwraca Prawda, jeśli pierwsza liczba jest większa niż druga liczba.
blockseditor.Blockly.Msg.LANG_MATH_COMPARE_TOOLTIP_GTE = Zwraca Prawda, jeśli pierwsza liczba jest większa lub równa drugiej liczbie.
blockseditor.Blockly.Msg.LANG_MATH_COMPARE_EQ = \=
blockseditor.Blockly.Msg.LANG_MATH_COMPARE_NEQ = ≠
blockseditor.Blockly.Msg.LANG_MATH_COMPARE_LT = <
blockseditor.Blockly.Msg.LANG_MATH_COMPARE_LTE = ≤
blockseditor.Blockly.Msg.LANG_MATH_COMPARE_GT = >
blockseditor.Blockly.Msg.LANG_MATH_COMPARE_GTE = ≥
blockseditor.Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_ADD = Zwraca sumę dwóch liczb.
blockseditor.Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_MINUS = Zwraca różnicę dwóch liczb.
blockseditor.Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_MULTIPLY = Zwraca iloczyn dwóch liczb.
blockseditor.Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_DIVIDE = Zwraca iloczyn dwóch liczb.
blockseditor.Blockly.Msg.LANG_MATH_ARITHMETIC_TOOLTIP_POWER = Zwraca pierwszą liczbę podniesioną do potęgi drugiej liczby.
blockseditor.Blockly.Msg.LANG_MATH_BITWISE_TOOLTIP_AND = Zwraca bitowy AND dwóch liczb.
blockseditor.Blockly.Msg.LANG_MATH_BITWISE_TOOLTIP_IOR = Zwraca OR włącznie z dwoma liczbami.
blockseditor.Blockly.Msg.LANG_MATH_BITWISE_TOOLTIP_XOR = Zwraca OR włącznie z dwoma liczbami.
blockseditor.Blockly.Msg.LANG_MATH_ARITHMETIC_ADD = +
blockseditor.Blockly.Msg.LANG_MATH_ARITHMETIC_MINUS = -
blockseditor.Blockly.Msg.LANG_MATH_ARITHMETIC_MULTIPLY = *
blockseditor.Blockly.Msg.LANG_MATH_ARITHMETIC_DIVIDE = /
blockseditor.Blockly.Msg.LANG_MATH_ARITHMETIC_POWER = ^
blockseditor.Blockly.Msg.LANG_MATH_BITWISE_AND = bitowo i
blockseditor.Blockly.Msg.LANG_MATH_BITWISE_IOR = bitowo lub
blockseditor.Blockly.Msg.LANG_MATH_BITWISE_XOR = bitowy xor
blockseditor.Blockly.Msg.LANG_MATH_SINGLE_OP_ROOT = pierwiastek kwadratowy
blockseditor.Blockly.Msg.LANG_MATH_SINGLE_OP_ABSOLUTE = absolutny
blockseditor.Blockly.Msg.LANG_MATH_SINGLE_OP_NEG = neg
blockseditor.Blockly.Msg.LANG_MATH_SINGLE_OP_LN = log
blockseditor.Blockly.Msg.LANG_MATH_SINGLE_OP_EXP = e^
blockseditor.Blockly.Msg.LANG_MATH_SINGLE_TOOLTIP_ROOT = Zwraca pierwiastek kwadratowy z liczby.
blockseditor.Blockly.Msg.LANG_MATH_SINGLE_TOOLTIP_ABS = Zwraca wartość bezwzględną liczby.
blockseditor.Blockly.Msg.LANG_MATH_SINGLE_TOOLTIP_NEG = Zwraca negację liczby.
blockseditor.Blockly.Msg.LANG_MATH_SINGLE_TOOLTIP_LN = Zwraca logarytm naturalny liczby, tj. Logarytm do podstawy e (2,71828 ...)
blockseditor.Blockly.Msg.LANG_MATH_SINGLE_TOOLTIP_EXP = Zwraca e (2.71828 ...) do potęgi liczby.
blockseditor.Blockly.Msg.LANG_MATH_ROUND_TOOLTIP_ROUND = Zaokrąglanie liczby w górę lub w dół.
blockseditor.Blockly.Msg.LANG_MATH_ROUND_TOOLTIP_CEILING = Zaokrągla dane do najmniejszej liczby, nie mniejszej niż dana liczba.
blockseditor.Blockly.Msg.LANG_MATH_ROUND_TOOLTIP_FLOOR = Zaokrągla dane do największej liczby, nie większej niż dana liczba.
blockseditor.Blockly.Msg.LANG_MATH_ROUND_OPERATOR_ROUND = zaokrąglenie
blockseditor.Blockly.Msg.LANG_MATH_ROUND_OPERATOR_CEILING = zaokrąglenie w górę
blockseditor.Blockly.Msg.LANG_MATH_ROUND_OPERATOR_FLOOR = zaokrąglenie w dół
blockseditor.Blockly.Msg.LANG_MATH_TRIG_SIN = sin
blockseditor.Blockly.Msg.LANG_MATH_TRIG_COS = cos
blockseditor.Blockly.Msg.LANG_MATH_TRIG_TAN = tan
blockseditor.Blockly.Msg.LANG_MATH_TRIG_ASIN = asin
blockseditor.Blockly.Msg.LANG_MATH_TRIG_ACOS = acos
blockseditor.Blockly.Msg.LANG_MATH_TRIG_ATAN = atan
blockseditor.Blockly.Msg.LANG_MATH_ONLIST_OPERATOR_MIN = min
blockseditor.Blockly.Msg.LANG_MATH_ONLIST_OPERATOR_MAX = max
blockseditor.Blockly.Msg.LANG_MATH_ONLIST_TOOLTIP_MIN = Zwraca minimalny z podanych argumentów..
blockseditor.Blockly.Msg.LANG_MATH_ONLIST_TOOLTIP_MAX = Zwraca maksymalny z podanych argumentów..
blockseditor.Blockly.Msg.LANG_MATH_DIVIDE = \u00F7
blockseditor.Blockly.Msg.LANG_MATH_DIVIDE_OPERATOR_MODULO = modulo z
blockseditor.Blockly.Msg.LANG_MATH_DIVIDE_OPERATOR_REMAINDER = reszta z
blockseditor.Blockly.Msg.LANG_MATH_DIVIDE_OPERATOR_QUOTIENT = iloraz z
blockseditor.Blockly.Msg.LANG_MATH_DIVIDE_TOOLTIP_MODULO = Zwraca modulo.
blockseditor.Blockly.Msg.LANG_MATH_DIVIDE_TOOLTIP_REMAINDER = Zwraca resztę.
blockseditor.Blockly.Msg.LANG_MATH_DIVIDE_TOOLTIP_QUOTIENT = Zwraca iloraz.
blockseditor.Blockly.Msg.LANG_MATH_RANDOM_INT_TITLE_RANDOM = losowa liczba całkowita
blockseditor.Blockly.Msg.LANG_MATH_RANDOM_INT_INPUT_FROM = z/od
blockseditor.Blockly.Msg.LANG_MATH_RANDOM_INT_INPUT_TO = do
blockseditor.Blockly.Msg.LANG_MATH_RANDOM_INT_INPUT = losowa liczba całkowita od %1 do %2
blockseditor.Blockly.Msg.LANG_MATH_RANDOM_INT_TOOLTIP = Zwraca losową liczbę całkowitą pomiędzy\npodanymi górnym i dolnym zakresem. Zakresy będą obcięte do liczb mniejszych\nniż 2**30.
blockseditor.Blockly.Msg.LANG_MATH_RANDOM_FLOAT_TITLE_RANDOM = losowy ułamek
blockseditor.Blockly.Msg.LANG_MATH_RANDOM_FLOAT_TOOLTIP = Zwraca losowy ułamek pomiędzy 0 i 1.
blockseditor.Blockly.Msg.LANG_MATH_RANDOM_SEED_TITLE_RANDOM = losowe ziarno
blockseditor.Blockly.Msg.LANG_MATH_RANDOM_SEED_INPUT_TO = do
blockseditor.Blockly.Msg.LANG_MATH_RANDOM_SEED_TOOLTIP = określa cyfrowe ziarno\ndla generatoea liczb losowych
blockseditor.Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_SIN = Podaje sinus kąta w stopniach.
blockseditor.Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_COS = Podaje cosinus kąta w stopniach.
blockseditor.Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_TAN = Podaje tangens kąta w stopniach.
blockseditor.Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_ASIN = Podaje kąt w zakresie (-90,+90]\nstopni z daną wartością sinus.
blockseditor.Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_ACOS = Podaje kąt w zakresie [0, 180)\nstopni z daną wartością cosinus.
blockseditor.Blockly.Msg.LANG_MATH_TRIG_TOOLTIP_ATAN = Podaje kąt w zakresie (-90, +90)\nstopni z daną wartością tangens.
blockseditor.Blockly.Msg.LANG_MATH_CONVERT_ANGLES_TITLE_CONVERT = przekształcenie
blockseditor.Blockly.Msg.LANG_MATH_CONVERT_ANGLES_OP_RAD_TO_DEG = radiany na stopnie
blockseditor.Blockly.Msg.LANG_MATH_CONVERT_ANGLES_OP_DEG_TO_RAD = stopnie na radiany
blockseditor.Blockly.Msg.LANG_MATH_CONVERT_ANGLES_TOOLTIP_RAD_TO_DEG = Zwraca wartość w stopniach w zakresie\n[0, 360) w odniesieniu do podanego w radianach argumentu.
blockseditor.Blockly.Msg.LANG_MATH_CONVERT_ANGLES_TOOLTIP_DEG_TO_RAD = Zwraca wartość w radianach w zakresie\n[-\u03C0, +\u03C0) w odniesieniu do podanego w stopniach argumentu.
blockseditor.Blockly.Msg.LANG_MATH_FORMAT_AS_DECIMAL_TITLE = format dziesiętny
blockseditor.Blockly.Msg.LANG_MATH_FORMAT_AS_DECIMAL_INPUT_NUM = liczba
blockseditor.Blockly.Msg.LANG_MATH_FORMAT_AS_DECIMAL_INPUT_PLACES = miejsca
blockseditor.Blockly.Msg.LANG_MATH_FORMAT_AS_DECIMAL_INPUT = formatuj jako dziesiętną liczba %1 miejsca %2
blockseditor.Blockly.Msg.LANG_MATH_FORMAT_AS_DECIMAL_TOOLTIP = Zwraca liczbę sformatowaną jako dziesiętną\nz określoną ilością miejsc po przecinku.
blockseditor.Blockly.Msg.LANG_MATH_IS_A_NUMBER_INPUT_NUM = czy liczba?
blockseditor.Blockly.Msg.LANG_MATH_IS_A_NUMBER_TOOLTIP = Sprawdza czy dane są liczbą.
blockseditor.Blockly.Msg.LANG_MATH_IS_A_DECIMAL_INPUT_NUM = czy Base 10?
blockseditor.Blockly.Msg.LANG_MATH_IS_A_DECIMAL_TOOLTIP = Sprawdza czy dane są ciągiem reprezentującym dodatnią liczbę całkowitą base 10.
blockseditor.Blockly.Msg.LANG_MATH_IS_A_HEXADECIMAL_INPUT_NUM = czy hexadecymalna?
blockseditor.Blockly.Msg.LANG_MATH_IS_A_HEXADECIMAL_TOOLTIP = Sprawdza czy dane są ciągiem reprezentującym liczbę hexadecymalną.
blockseditor.Blockly.Msg.LANG_MATH_IS_A_BINARY_INPUT_NUM = czy binarna?
blockseditor.Blockly.Msg.LANG_MATH_IS_A_BINARY_TOOLTIP = Sprawdza czy dane są ciągiem stanowiącym liczbę binarną.
blockseditor.Blockly.Msg.LANG_MATH_CONVERT_NUMBER_TITLE_CONVERT = przekształć liczbę
blockseditor.Blockly.Msg.LANG_MATH_CONVERT_NUMBER_OP_DEC_TO_HEX = dodatnią całkowitą na hex
blockseditor.Blockly.Msg.LANG_MATH_CONVERT_NUMBER_TOOLTIP_DEC_TO_HEX = Przekształca liczbę dodatnią całkowitą na ciąg stanowiący liczbę heksadecymalną
blockseditor.Blockly.Msg.LANG_MATH_CONVERT_NUMBER_OP_HEX_TO_DEC = hex na dodatnią całkowitą
blockseditor.Blockly.Msg.LANG_MATH_CONVERT_NUMBER_TOOLTIP_HEX_TO_DEC = Przekształca ciąg stanowiący liczbę hexadecymalną na ciąg stanowiący liczbę całkowitą dodatnią
blockseditor.Blockly.Msg.LANG_MATH_CONVERT_NUMBER_OP_DEC_TO_BIN = dodatnia całkowita na binarną
blockseditor.Blockly.Msg.LANG_MATH_CONVERT_NUMBER_TOOLTIP_DEC_TO_BIN = Przekształca liczbę całkowitą dodatnią na ciąg stanowiący liczbę binarną
blockseditor.Blockly.Msg.LANG_MATH_CONVERT_NUMBER_OP_BIN_TO_DEC = binarna na dodatnią całkowitą
blockseditor.Blockly.Msg.LANG_MATH_CONVERT_NUMBER_TOOLTIP_BIN_TO_DEC = Przekształca ciąg stanowiący liczbę binarną na ciąg reprezentujący liczbę całkowitą dodatnią
blockseditor.Blockly.Msg.LANG_CATEGORY_TEXT = Tekst
blockseditor.Blockly.Msg.LANG_TEXT_TEXT_TOOLTIP = Ciąg tekstowy.
blockseditor.Blockly.Msg.LANG_TEXT_TEXT_LEFT_QUOTE = \u201C
blockseditor.Blockly.Msg.LANG_TEXT_TEXT_RIGHT_QUOTE = \u201D
blockseditor.Blockly.Msg.LANG_TEXT_JOIN_TITLE_CREATEWITH = stwórz tekst z
blockseditor.Blockly.Msg.LANG_TEXT_JOIN_TOOLTIP = Łączy wszystkie dane w jeden ciąg tekstowy.\nJeśli nie ma danych, tworzy pusty ciąg.
blockseditor.Blockly.Msg.LANG_TEXT_JOIN_TITLE_JOIN = łącz
blockseditor.Blockly.Msg.LANG_TEXT_JOIN_ITEM_TITLE_ITEM = tekst
blockseditor.Blockly.Msg.LANG_TEXT_APPEND_TO = do
blockseditor.Blockly.Msg.LANG_TEXT_APPEND_APPENDTEXT = dołącz tekst
blockseditor.Blockly.Msg.LANG_TEXT_APPEND_VARIABLE = pozycja
blockseditor.Blockly.Msg.LANG_TEXT_APPEND_TOOLTIP = Dodaje jakiś tekst do zmiennej "%1".
blockseditor.Blockly.Msg.LANG_TEXT_LENGTH_INPUT_LENGTH = długość
blockseditor.Blockly.Msg.LANG_TEXT_LENGTH_TOOLTIP = Zwraca liczbę znaków (włączając spacje)\nw podanym tekście.
blockseditor.Blockly.Msg.LANG_TEXT_ISEMPTY_INPUT_ISEMPTY = czy pusty?
blockseditor.Blockly.Msg.LANG_TEXT_ISEMPTY_TOOLTIP = Zwraca prawdę jeśli długość tekstu\nwynosi 0, fałsz w innym przypadku.
blockseditor.Blockly.Msg.LANG_TEXT_COMPARE_LT = <
blockseditor.Blockly.Msg.LANG_TEXT_COMPARE_EQUAL = \=
blockseditor.Blockly.Msg.LANG_TEXT_COMPARE_NEQ =  ≠
blockseditor.Blockly.Msg.LANG_TEXT_COMPARE_GT = >
blockseditor.Blockly.Msg.LANG_TEXT_COMPARE_INPUT_COMPARE = porównaj tekst
blockseditor.Blockly.Msg.LANG_TEXT_COMPARE_TOOLTIP_LT = Sprawdza czy tekst1 jest leksykograficznie mniejszy niż tekst2.\nJeśli jeden tekst jest prefiksem innego, krótszy tekst jest\nuważany za mniejszy. Wielnie znaki poprzedzają małe znaki.
blockseditor.Blockly.Msg.LANG_TEXT_COMPARE_TOOLTIP_EQUAL = Sprawdza czy ciągi tekstowe są identyczne, np., mają takie same\nznaki w tej samej kolejności. To jest inne niż zwykłe \=\nw przypadku gdy ciągi tekstowe są liczbami\: 123 1 0123 są równe,\nale nie są równe tekstowo.
blockseditor.Blockly.Msg.LANG_TEXT_COMPARE_TOOLTIP_GT = Sprawdza czy tekst1 jest leksykograficznie większy niż tekst2.\nJeśli jeden tekst jest przefiksem innego, krótszy tekst jest uważany za mniejszy.\nWielkie znaki poprzedzają małe.
blockseditor.Blockly.Msg.LANG_TEXT_TEXT_OBFUSCATE_TOOLTIP = Tworzy tekst jako blok tekstowy. Różnica jest taka, że\ntekst nie jest łatwo wykrywany przez aplikacje podsłuchujące. Użyj, gdy tworzysz aplikacje,\nktóre przekazują poufne dane np. klucze API.\nUwaga\: Zapewnia jedynie niską ochronę wobez zaawansowanych snifferów.
blockseditor.Blockly.Msg.LANG_TEXT_TEXT_OBFUSCATE = Zaciemniony Tekst
blockseditor.Blockly.Msg.LANG_TEXT_CHANGECASE_OPERATOR_UPPERCASE = wielkie litery
blockseditor.Blockly.Msg.LANG_TEXT_CHANGECASE_OPERATOR_DOWNCASE = małe litery
blockseditor.Blockly.Msg.LANG_TEXT_CHANGECASE_TOOLTIP_UPPERCASE = Zwraca kopię argumentu łańcucha tekstowego przekonwertowanego na wielkie litery.
blockseditor.Blockly.Msg.LANG_TEXT_CHANGECASE_TOOLTIP_DOWNCASE = Zwraca kopię argumentu ciągu tekstowego przekonwertowanego na małe litery.
blockseditor.Blockly.Msg.LANG_TEXT_TRIM_TITLE_TRIM = trim
blockseditor.Blockly.Msg.LANG_TEXT_TRIM_TOOLTIP = Zwraca kopię argumentów ciągu tekstowego z usuniętymi spacjami początkowymi lub końcowymi.
blockseditor.Blockly.Msg.LANG_TEXT_STARTS_AT_INPUT_STARTS_AT = zaczyna się w
blockseditor.Blockly.Msg.LANG_TEXT_STARTS_AT_INPUT_TEXT = tekst
blockseditor.Blockly.Msg.LANG_TEXT_STARTS_AT_INPUT_PIECE = fragment
blockseditor.Blockly.Msg.LANG_TEXT_STARTS_AT_INPUT = zaczyna się   tekst %1 fragment %2
blockseditor.Blockly.Msg.LANG_TEXT_STARTS_AT_TOOLTIP = Zwraca indeks początkowy fragmentu w tekście, gdzie indeks 1 oznacza początek tekstu. Zwraca 0, jeśli element nie znajduje się w tekście.
blockseditor.Blockly.Msg.LANG_TEXT_CONTAINS_INPUT_CONTAINS = zawiera
blockseditor.Blockly.Msg.LANG_TEXT_CONTAINS_INPUT_TEXT = tekst
blockseditor.Blockly.Msg.LANG_TEXT_CONTAINS_INPUT_PIECE = fragment
blockseditor.Blockly.Msg.LANG_TEXT_CONTAINS_INPUT = zawiera tekst %1 fragment %2
blockseditor.Blockly.Msg.LANG_TEXT_CONTAINS_TOOLTIP = Sprawdza, czy fragment jest zawarty w tekście.
blockseditor.Blockly.Msg.LANG_TEXT_SPLIT_INPUT_TEXT = tekst
blockseditor.Blockly.Msg.LANG_TEXT_SPLIT_INPUT_AT = w
blockseditor.Blockly.Msg.LANG_TEXT_SPLIT_INPUT_AT_LIST = na (liście)
blockseditor.Blockly.Msg.LANG_TEXT_SPLIT_OPERATOR_SPLIT_AT_FIRST = podziel na pierwszym
blockseditor.Blockly.Msg.LANG_TEXT_SPLIT_OPERATOR_SPLIT_AT_FIRST_OF_ANY = podziel na pierwszym z jakiegokolwiek
blockseditor.Blockly.Msg.LANG_TEXT_SPLIT_OPERATOR_SPLIT = podziel
blockseditor.Blockly.Msg.LANG_TEXT_SPLIT_OPERATOR_SPLIT_AT_ANY = podziel na dowolnym
blockseditor.Blockly.Msg.LANG_TEXT_SPLIT_TOOLTIP_SPLIT_AT_FIRST = Dzieli dany tekst na dwie części, wykorzystując położenie pierwszego wystąpienia tekstu "w" jako punktu podziału i zwraca listę dwóch elementów, składającą się z części przed punktem podziału i części po punkcie podziału. Podział "jabłko, banan, wiśnia, pies" z przecinkiem jako punkt podziału zwraca listę dwóch elementów\: pierwszy to tekst "jabłko", a drugi to tekst „banan, wiśnia, pies". Zauważ, że przecinek po "jabłko" nie pojawia się w wyniku, ponieważ jest to punkt podziału.
blockseditor.Blockly.Msg.LANG_TEXT_SPLIT_TOOLTIP_SPLIT_AT_FIRST_OF_ANY = Dzieli dany tekst na listę dwuelementową, wykorzystując pierwszą lokalizację dowolnego elementu „w” na liście jako punkt podziału. Dzielenie „Uwielbiam jabłka banany winogrona” na liście „(ja, ba)” zwraca listę dwóch pozycji, z których pierwszym jest „Uwielbiam”, a drugim „błka banany winogrona”.
blockseditor.Blockly.Msg.LANG_TEXT_SPLIT_TOOLTIP_SPLIT = Dzieli tekst na kawałki, używając tekstu "w" jako punktów podziału i tworzy listę wyników. Podział "jeden,dwa,trzy,cztery" na "," (przecinek) zwraca listę "(jeden dwa trzy cztery)". Podział "jeden ziemniak,dwa ziemniaki,trzy ziemniaki,cztery ziemniaki" w "ziemniaki" zwraca listę "(jeden dwa trzy cztery)".
blockseditor.Blockly.Msg.LANG_TEXT_SPLIT_TOOLTIP_SPLIT_AT_ANY = Dzieli dany tekst na listę, używając dowolnego elementu z listy "w" jako "punktu podziału" i zwraca listę wyników. Dzielenie „jabłka,śliwka,wiśnia,gruszka” z "ka" jako dwuelementowej listy, której pierwszym elementem jest przecinek, a którego drugim elementem jest "ka", zwraca listę czterech przedmiotów\: "(jabł śliw wiśnia grusz)"
blockseditor.Blockly.Msg.LANG_TEXT_SPLIT_AT_SPACES_TITLE = dziel w spacjach
blockseditor.Blockly.Msg.LANG_TEXT_SPLIT_AT_TOOLTIP = Podziel tekst na kawałki oddzielone spacjami.
blockseditor.Blockly.Msg.LANG_TEXT_SEGMENT_TITLE_SEGMENT = człon
blockseditor.Blockly.Msg.LANG_TEXT_SEGMENT_INPUT_START = start
blockseditor.Blockly.Msg.LANG_TEXT_SEGMENT_INPUT_LENGTH = długość
blockseditor.Blockly.Msg.LANG_TEXT_SEGMENT_INPUT_TEXT = tekst
blockseditor.Blockly.Msg.LANG_TEXT_SEGMENT_INPUT = człon  tekst %1 start %2 długość %3
blockseditor.Blockly.Msg.LANG_TEXT_SEGMENT_AT_TOOLTIP = Wyodrębnia człon o podanej długości z podanego tekstu, zaczynając od podanego tekstu począwszy od podanej pozycji. Pozycja 1 oznacza początek tekstu.
blockseditor.Blockly.Msg.LANG_TEXT_REPLACE_ALL_INPUT_SEGMENT = człon
blockseditor.Blockly.Msg.LANG_TEXT_REPLACE_ALL_INPUT_TEXT = tekst
blockseditor.Blockly.Msg.LANG_TEXT_REPLACE_ALL_TITLE_REPLACE_ALL = Zamień wszystko
blockseditor.Blockly.Msg.LANG_TEXT_REPLACE_ALL_INPUT_REPLACEMENT = zastąpienie
blockseditor.Blockly.Msg.LANG_TEXT_REPLACE_ALL_INPUT = zastąp cały tekst %1 segment %2 zastąpienie %3
blockseditor.Blockly.Msg.LANG_TEXT_REPLACE_ALL_TOOLTIP = Zwraca nowy tekst uzyskany przez zastąpienie wszystkich wystąpień członu zastąpieniem.
blockseditor.Blockly.Msg.LANG_TEXT_TEXT_IS_STRING_TITLE = czy tekst?
blockseditor.Blockly.Msg.LANG_TEXT_TEXT_IS_STRING_INPUT_THING = obiekt
blockseditor.Blockly.Msg.LANG_TEXT_TEXT_IS_STRING_TOOLTIP = Zwraca Prawdę, jeśli <code>obiekt</code> jest łańcuchem.
blockseditor.Blockly.Msg.LANG_CATEGORY_LISTS = Listy
blockseditor.Blockly.Msg.LANG_LISTS_CREATE_EMPTY_TITLE = utwórz pustą listę
blockseditor.Blockly.Msg.LANG_LISTS_CREATE_WITH_TITLE_MAKE_LIST = twórz listę
blockseditor.Blockly.Msg.LANG_LISTS_CREATE_WITH_TOOLTIP = Utwórz listę z dowolną liczbą elementów.
blockseditor.Blockly.Msg.LANG_LISTS_CREATE_WITH_CONTAINER_TITLE_ADD = lista
blockseditor.Blockly.Msg.LANG_LISTS_CREATE_WITH_CONTAINER_TOOLTIP = Dodaj, usuń lub zmień kolejność sekcji, aby zmienić konfigurację listy bloku.
blockseditor.Blockly.Msg.LANG_LISTS_CREATE_WITH_ITEM_TITLE = pozycja
blockseditor.Blockly.Msg.LANG_LISTS_CREATE_WITH_ITEM_TOOLTIP = Dodaj element do listy.
blockseditor.Blockly.Msg.LANG_LISTS_ADD_ITEM_TITLE = pozycja
blockseditor.Blockly.Msg.LANG_LISTS_ADD_ITEM_TOOLTIP = Dodaj element do listy.
blockseditor.Blockly.Msg.LANG_LISTS_SELECT_ITEM_TITLE_SELECT = wybierz element listy
blockseditor.Blockly.Msg.LANG_LISTS_SELECT_ITEM_INPUT_LIST = lista
blockseditor.Blockly.Msg.LANG_LISTS_SELECT_ITEM_INPUT_INDEX = indeks
blockseditor.Blockly.Msg.LANG_LISTS_SELECT_ITEM_INPUT = wybierz element listy   lista %1 indeks %2
blockseditor.Blockly.Msg.LANG_LISTS_SELECT_ITEM_TOOLTIP = Zwraca element o danym indeksie na liście.
blockseditor.Blockly.Msg.LANG_LISTS_IS_IN_TITLE_IS_IN = jest na liście?
blockseditor.Blockly.Msg.LANG_LISTS_IS_IN_INPUT_THING = obiekt
blockseditor.Blockly.Msg.LANG_LISTS_IS_IN_INPUT_LIST = lista
blockseditor.Blockly.Msg.LANG_LISTS_IS_IN_INPUT = jest na liście? obiekt %1 lista %2
blockseditor.Blockly.Msg.LANG_LISTS_IS_IN_TOOLTIP = Zwraca Prawdę, jeśli obiekt jest elementem listy, a Fałsz, jeśli nie.
blockseditor.Blockly.Msg.LANG_LISTS_POSITION_IN_TITLE_POSITION = indeks na liście
blockseditor.Blockly.Msg.LANG_LISTS_POSITION_IN_INPUT_THING = obiekt
blockseditor.Blockly.Msg.LANG_LISTS_POSITION_IN_INPUT_LIST = lista
blockseditor.Blockly.Msg.LANG_LISTS_POSITION_IN_INPUT = indeks na liście  obiekt %1 lista %2
blockseditor.Blockly.Msg.LANG_LISTS_POSITION_IN_TOOLTIP = Odnajduje pozycję obiektu na liście. Jeśli go nie ma, zwraca 0.
blockseditor.Blockly.Msg.LANG_LISTS_PICK_RANDOM_TITLE_PICK_RANDOM = wybierz losowy element
blockseditor.Blockly.Msg.LANG_LISTS_PICK_RANDOM_ITEM_INPUT_LIST = lista
blockseditor.Blockly.Msg.LANG_LISTS_PICK_RANDOM_TOOLTIP = Wybierz losowy element z listy.
blockseditor.Blockly.Msg.LANG_LISTS_REPLACE_ITEM_TITLE_REPLACE = zamień element listy
blockseditor.Blockly.Msg.LANG_LISTS_REPLACE_ITEM_INPUT_LIST = lista
blockseditor.Blockly.Msg.LANG_LISTS_REPLACE_ITEM_INPUT_INDEX = indeks
blockseditor.Blockly.Msg.LANG_LISTS_REPLACE_ITEM_INPUT_REPLACEMENT = zastąpienie
blockseditor.Blockly.Msg.LANG_LISTS_REPLACE_ITEM_INPUT = zastąp element listy  lista %1 indeks %2 zastąpienie %3
blockseditor.Blockly.Msg.LANG_LISTS_REPLACE_ITEM_TOOLTIP = Zastępuje n-ty element na liście.
blockseditor.Blockly.Msg.LANG_LISTS_REMOVE_ITEM_TITLE_REMOVE = usuwa element listy
blockseditor.Blockly.Msg.LANG_LISTS_REMOVE_ITEM_INPUT_LIST = lista
blockseditor.Blockly.Msg.LANG_LISTS_REMOVE_ITEM_INPUT_INDEX = indeks
blockseditor.Blockly.Msg.LANG_LISTS_REMOVE_ITEM_INPUT = usuwa element listy   lista %1 indeks %2
blockseditor.Blockly.Msg.LANG_LISTS_REMOVE_ITEM_TOOLTIP = Usuwa element z określonej pozycji listy.
blockseditor.Blockly.Msg.LANG_LISTS_LENGTH_INPUT_LENGTH = długość listy
blockseditor.Blockly.Msg.LANG_LISTS_LENGTH_INPUT_LIST = lista
blockseditor.Blockly.Msg.LANG_LISTS_LENGTH_INPUT = długość listy  lista %1
blockseditor.Blockly.Msg.LANG_LISTS_LENGTH_TOOLTIP = Zlicza liczbę elementów na liście.
blockseditor.Blockly.Msg.LANG_LISTS_APPEND_LIST_TITLE_APPEND = dołącz do listy
blockseditor.Blockly.Msg.LANG_LISTS_APPEND_LIST_INPUT = dołącz do listy  lista1 %1 lista2 %2
blockseditor.Blockly.Msg.LANG_LISTS_APPEND_LIST_TOOLTIP = Dołącza wszystkie elementy z listy2 na końcu listy1. Po dołączeniu lista1 będzie zawierać te dodatkowe elementy, ale lista2 pozostanie niezmieniona.
blockseditor.Blockly.Msg.LANG_LISTS_ADD_ITEMS_TITLE_ADD = dodaj elementy do listy
blockseditor.Blockly.Msg.LANG_LISTS_ADD_ITEMS_INPUT_LIST = lista
blockseditor.Blockly.Msg.LANG_LISTS_ADD_ITEMS_INPUT_ITEM = pozycja
blockseditor.Blockly.Msg.LANG_LISTS_ADD_ITEMS_INPUT = dodaj elementy do listy  lista %1 element %2
blockseditor.Blockly.Msg.LANG_LISTS_ADD_ITEMS_TOOLTIP = Dodaje elementy na końcu listy.
blockseditor.Blockly.Msg.LANG_LISTS_ADD_ITEMS_CONTAINER_TITLE_ADD = lista
blockseditor.Blockly.Msg.LANG_LISTS_ADD_ITEMS_CONTAINER_TOOLTIP = Dodaj, usuń lub zmień kolejność sekcji, aby zmienić konfigurację, tej listy bloku.
blockseditor.Blockly.Msg.LANG_LISTS_COPY_TITLE_COPY = kopiuj listę
blockseditor.Blockly.Msg.LANG_LISTS_COPY_INPUT_LIST = lista
blockseditor.Blockly.Msg.LANG_LISTS_COPY_TOOLTIP = Tworzy kopię listy, obejmując kopiowanie wszystkich podlist
blockseditor.Blockly.Msg.LANG_LISTS_IS_LIST_TITLE_IS_LIST = jest listą?
blockseditor.Blockly.Msg.LANG_LISTS_IS_LIST_INPUT_THING = obiekt
blockseditor.Blockly.Msg.LANG_LISTS_IS_LIST_TOOLTIP = Sprawdza, czy dane są listą.
blockseditor.Blockly.Msg.LANG_LISTS_REVERSE_TITLE_REVERSE = odwróć listę
blockseditor.Blockly.Msg.LANG_LISTS_REVERSE_INPUT_LIST = lista
blockseditor.Blockly.Msg.LANG_LISTS_REVERSE_TOOLTIP = Odwraca kolejność listy wprowadzania i zwraca ją jako nową listę.
blockseditor.Blockly.Msg.LANG_LISTS_TO_CSV_ROW_TITLE_TO_CSV = lista do wiersza csv
blockseditor.Blockly.Msg.LANG_LISTS_TO_CSV_ROW_INPUT_LIST = lista
blockseditor.Blockly.Msg.LANG_LISTS_TO_CSV_ROW_TOOLTIP = Interpretuje listę jako wiersz tabeli i zwraca tekst CSV (wartość rozdzielana przecinkami) reprezentujący wiersz. Każdy element na liście wierszy jest uważany za pole i jest cytowany z cudzysłowami w wynikowym tekście CSV. Przedmioty są oddzielone przecinkami. Zwrócony tekst wiersza nie ma na końcu separatora linii.
blockseditor.Blockly.Msg.LANG_LISTS_FROM_CSV_ROW_TITLE_FROM_CSV = lista z wiersza CSV
blockseditor.Blockly.Msg.LANG_LISTS_FROM_CSV_ROW_INPUT_TEXT = tekst
blockseditor.Blockly.Msg.LANG_LISTS_FROM_CSV_ROW_TOOLTIP = Analizuje tekst jako sformatowany wiersz w formacie CSV (wartość rozdzielana przecinkami), aby utworzyć listę pól. Jest błędem, że tekst wiersza zawiera niezmienione znaki nowej linii wewnątrz pól (efektywnie, wiele linii). W porządku jest, aby tekst wiersza kończył się pojedynczym znakiem nowej linii lub CRLF.
blockseditor.Blockly.Msg.LANG_LISTS_TO_CSV_TABLE_TITLE_TO_CSV = lista do tabeli CSV
blockseditor.Blockly.Msg.LANG_LISTS_TO_CSV_TABLE_INPUT_LIST = lista
blockseditor.Blockly.Msg.LANG_LISTS_TO_CSV_TABLE_TOOLTIP = Interpretuje listę jako tabelę w formacie głównym wiersza i zwraca tekst CSV (wartość rozdzielana przecinkami) reprezentujący tabelę. Każda pozycja na liście powinna sama być listą reprezentującą wiersz tabeli CSV. Każdy element na liście wierszy jest uważany za pole i jest cytowany z cudzysłowami w wynikowym tekście CSV. W zwróconym tekście elementy w wierszach są oddzielone przecinkami, a wiersze oddzielone są CRLF ().
blockseditor.Blockly.Msg.LANG_LISTS_FROM_CSV_TABLE_TITLE_FROM_CSV = lista z tabeli CSV
blockseditor.Blockly.Msg.LANG_LISTS_FROM_CSV_TABLE_INPUT_TEXT = tekst
blockseditor.Blockly.Msg.LANG_LISTS_FROM_CSV_TABLE_TOOLTIP = Analizuje tekst jako sformatowaną tabelę CSV (wartość rozdzielana przecinkami), aby utworzyć listę wierszy, z których każdy jest listą pól. Wiersze mogą być oddzielone znakami nowej linii () lub CRLF ().
blockseditor.Blockly.Msg.LANG_LISTS_INSERT_TITLE_INSERT_LIST = wstaw element listy
blockseditor.Blockly.Msg.LANG_LISTS_INSERT_INPUT_LIST = lista
blockseditor.Blockly.Msg.LANG_LISTS_INSERT_INPUT_INDEX = indeks
blockseditor.Blockly.Msg.LANG_LISTS_INSERT_INPUT_ITEM = pozycja
blockseditor.Blockly.Msg.LANG_LISTS_INSERT_INPUT = wstawia element listy   lista %1 indeks %2 pozycja %3
blockseditor.Blockly.Msg.LANG_LISTS_INSERT_TOOLTIP = Wstawia element na listę w określonej pozycji.
blockseditor.Blockly.Msg.LANG_LISTS_TITLE_IS_EMPTY = czy lista pusta?
blockseditor.Blockly.Msg.LANG_LISTS_INPUT_LIST = lista
blockseditor.Blockly.Msg.LANG_LISTS_IS_EMPTY_TOOLTIP = Zwraca Prawdę, jeśli lista jest pusta.
blockseditor.Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_TITLE_LOOKUP_IN_PAIRS = przegląda pary
blockseditor.Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_INPUT_KEY = klucz
blockseditor.Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_INPUT_PAIRS = pary
blockseditor.Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_INPUT_NOT_FOUND = nieZnaleziono
blockseditor.Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_INPUT = przegląda pary  klucz %1 pary %2 nieZnaleziono %3
blockseditor.Blockly.Msg.LANG_LISTS_LOOKUP_IN_PAIRS_TOOLTIP = Zwraca wartość powiązaną z kluczem na liście par
blockseditor.Blockly.Msg.LANG_LISTS_JOIN_WITH_SEPARATOR_TITLE = połącz z separatorem
blockseditor.Blockly.Msg.LANG_LISTS_JOIN_WITH_SEPARATOR_SEPARATOR = separator
blockseditor.Blockly.Msg.LANG_LISTS_JOIN_WITH_SEPARATOR_LIST = lista
blockseditor.Blockly.Msg.LANG_LISTS_JOIN_WITH_SEPARATOR_INPUT = łączy elementy za pomocą separatora %1 lista %2
blockseditor.Blockly.Msg.LANG_LISTS_JOIN_WITH_SEPARATOR_TOOLTIP = Zwraca tekst z elementami listy połączonymi z separatorem
blockseditor.Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_TITLE_INIT = inicjuj globalną
blockseditor.Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_NAME = nazwa
blockseditor.Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_TO = do
blockseditor.Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_COLLAPSED_TEXT = globalna
blockseditor.Blockly.Msg.LANG_VARIABLES_GLOBAL_DECLARATION_TOOLTIP = Tworzy zmienną globalną i nadaje jej wartość dołączonych bloków.
blockseditor.Blockly.Msg.LANG_VARIABLES_GLOBAL_PREFIX = globalna
blockseditor.Blockly.Msg.LANG_VARIABLES_GET_TITLE_GET = uzyskaj
blockseditor.Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_IN_RETURN = w
blockseditor.Blockly.Msg.LANG_VARIABLES_GET_COLLAPSED_TEXT = Pobierz
blockseditor.Blockly.Msg.LANG_VARIABLES_GET_TOOLTIP = Zwraca wartość tej zmiennej.
blockseditor.Blockly.Msg.LANG_VARIABLES_SET_TITLE_SET = ustaw
blockseditor.Blockly.Msg.LANG_VARIABLES_SET_TITLE_TO = do
blockseditor.Blockly.Msg.LANG_VARIABLES_SET_COLLAPSED_TEXT = ustaw
blockseditor.Blockly.Msg.LANG_VARIABLES_SET_TOOLTIP = Ustawia tę zmienną na równą wartości wejściowej.
blockseditor.Blockly.Msg.LANG_VARIABLES_VARIABLE = zmienna
blockseditor.Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_TITLE_INIT = inicjuj lokalnie
blockseditor.Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_DEFAULT_NAME = nazwa
blockseditor.Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_INPUT_TO = do
blockseditor.Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_IN_DO = w
blockseditor.Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_COLLAPSED_TEXT = lokalna
blockseditor.Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_TOOLTIP = Pozwala tworzyć zmienne, które są dostępne tylko w części do tego bloku.
blockseditor.Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_TRANSLATED_NAME = inicjuj lokalnie w do
blockseditor.Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_COLLAPSED_TEXT = lokalna
blockseditor.Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_TOOLTIP = Pozwala tworzyć zmienne, które są dostępne tylko w części powrotnej tego bloku.
blockseditor.Blockly.Msg.LANG_VARIABLES_LOCAL_DECLARATION_EXPRESSION_TRANSLATED_NAME = inicjuj zmienną lokalną ze zwrotem
blockseditor.Blockly.Msg.LANG_VARIABLES_LOCAL_MUTATOR_CONTAINER_TITLE_LOCAL_NAMES = lokalne nazwy
blockseditor.Blockly.Msg.LANG_VARIABLES_LOCAL_MUTATOR_CONTAINER_TOOLTIP = 
blockseditor.Blockly.Msg.LANG_VARIABLES_LOCAL_MUTATOR_ARG_TITLE_NAME = nazwa
blockseditor.Blockly.Msg.LANG_VARIABLES_LOCAL_MUTATOR_ARG_DEFAULT_VARIABLE = x
blockseditor.Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_DEFINE = do
blockseditor.Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_PROCEDURE = funkcja
blockseditor.Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_DO = wykonaj
blockseditor.Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_COLLAPSED_PREFIX = do
blockseditor.Blockly.Msg.LANG_PROCEDURES_DEFNORETURN_TOOLTIP = Funkcja, która nie zwraca wartości.
blockseditor.Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_THEN_RETURN = wynik
blockseditor.Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_DO = wykonaj
blockseditor.Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_RETURN = wynik
blockseditor.Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_TOOLTIP = Uruchamia bloki w "wykonaj" i zwraca wynik. Przydatne, jeśli musisz uruchomić funkcję przed zwróceniem wartości do zmiennej.
blockseditor.Blockly.Msg.LANG_PROCEDURES_DOTHENRETURN_COLLAPSED_TEXT = wykonaj/wynik
blockseditor.Blockly.Msg.LANG_PROCEDURES_DEFRETURN_DEFINE = do
blockseditor.Blockly.Msg.LANG_PROCEDURES_DEFRETURN_RETURN = wynik
blockseditor.Blockly.Msg.LANG_PROCEDURES_DEFRETURN_COLLAPSED_PREFIX = do
blockseditor.Blockly.Msg.LANG_PROCEDURES_DEFRETURN_TOOLTIP = Funkcja zwracająca wartość wyniku.
blockseditor.Blockly.Msg.LANG_PROCEDURES_DEF_DUPLICATE_WARNING = Ostrzeżenie\: Ta funkcja ma zduplikowane wejścia.
blockseditor.Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_CALL = wołaj
blockseditor.Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_PROCEDURE = funkcja
blockseditor.Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_COLLAPSED_PREFIX = wołaj
blockseditor.Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_TOOLTIP = Wywołaj procedurę bez wartości zwracanej.
blockseditor.Blockly.Msg.LANG_PROCEDURES_CALLNORETURN_TRANSLATED_NAME = wołaj bez zwrotu wartości
blockseditor.Blockly.Msg.LANG_PROCEDURES_CALLRETURN_COLLAPSED_PREFIX = wołaj
blockseditor.Blockly.Msg.LANG_PROCEDURES_CALLRETURN_TOOLTIP = Wywołaj procedurę z wartością zwracaną.
blockseditor.Blockly.Msg.LANG_PROCEDURES_CALLRETURN_TRANSLATED_NAME = wołaj ze zwrotem wartości
blockseditor.Blockly.Msg.LANG_PROCEDURES_MUTATORCONTAINER_TITLE = wejścia
blockseditor.Blockly.Msg.LANG_PROCEDURES_MUTATORARG_TITLE = wejście\:
blockseditor.Blockly.Msg.LANG_PROCEDURES_HIGHLIGHT_DEF = Zaznacz funkcję
blockseditor.Blockly.Msg.LANG_PROCEDURES_MUTATORCONTAINER_TOOLTIP = 
blockseditor.Blockly.Msg.LANG_PROCEDURES_MUTATORARG_TOOLTIP = 
blockseditor.Blockly.Msg.UNDEFINED_BLOCK_TOOLTIP = Ten blok nie jest zdefiniowany. Usuń ten blok!
blockseditor.Blockly.Msg.LANG_COMPONENT_BLOCK_TITLE_WHEN = gdy
blockseditor.Blockly.Msg.LANG_COMPONENT_BLOCK_TITLE_DO = wykonaj
blockseditor.Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_EVENT_TITLE = gdy jakikolwiek
blockseditor.Blockly.Msg.LANG_COMPONENT_BLOCK_METHOD_TITLE_CALL = wołaj
blockseditor.Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_METHOD_TITLE_CALL = wołaj
blockseditor.Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_METHOD_TITLE_FOR_COMPONENT = składnika
blockseditor.Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_GETTER_TITLE_OF_COMPONENT = składnika
blockseditor.Blockly.Msg.LANG_COMPONENT_BLOCK_SETTER_TITLE_SET = ustaw
blockseditor.Blockly.Msg.LANG_COMPONENT_BLOCK_SETTER_TITLE_TO = do
blockseditor.Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_SETTER_TITLE_SET = ustaw
blockseditor.Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_SETTER_TITLE_TO = do
blockseditor.Blockly.Msg.LANG_COMPONENT_BLOCK_GENERIC_SETTER_TITLE_OF_COMPONENT = składnika
