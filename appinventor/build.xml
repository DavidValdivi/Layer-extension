<?xml version="1.0"?>

<!-- ======================================================================
     Copyright 2011 Google Inc.  All Rights Reserved.
     Author: lizlooney@google.com (Liz Looney)

     App Inventor common libraries
     ====================================================================== -->

<project name="AllProjects" default="all" xmlns:if="ant:if" xmlns:unless="ant:unless">
  <description>
    App Inventor
  </description>

  <target name="all">
    <ant inheritAll="false" useNativeBasedir="true" dir="appengine"/>
    <ant inheritAll="false" useNativeBasedir="true" dir="blocklyeditor"/>
    <ant inheritAll="false" useNativeBasedir="true" dir="common"/>
    <ant inheritAll="false" useNativeBasedir="true" dir="buildserver"/>
    <ant inheritAll="false" useNativeBasedir="true" dir="components"/>
    <ant inheritAll="false" useNativeBasedir="true" dir="buildserver" target="PlayApp"/>
    <ant inheritAll="false" useNativeBasedir="true" dir="buildserver" target="PlayAppExtras"/>
    <ant inheritAll="false" useNativeBasedir="true" dir="buildserver" target="Emulator"/>
  </target>

  <target name="MakeAuthKey">
    <ant inheritAll="false" useNativeBasedir="true" dir="appengine" target="MakeAuthKey"/>
  </target>

  <target name="comps">
    <ant inheritAll="false" useNativeBasedir="true" dir="components"/>
    <ant inheritAll="false" useNativeBasedir="true" dir="buildserver" target="installplay"/>
  </target>

  <target name="comps1">
    <ant inheritAll="false" useNativeBasedir="true" dir="components"/>
    <ant inheritAll="false" useNativeBasedir="true" dir="buildserver" target="BuildServer"/>
  </target>

  <target name="docs">
    <ant inheritAll="false" useNativeBasedir="true" dir="appengine" target="CopyToBuildWar"/>
  </target>

  <target name="extensions">
    <ant inheritAll="false" useNativeBasedir="true" dir="components" target="clean"/>
    <ant inheritAll="false" useNativeBasedir="true" dir="components" target="extensions"/>
  </target>

  <target name="noplay">
    <ant inheritAll="false" useNativeBasedir="true" dir="appengine"/>
    <ant inheritAll="false" useNativeBasedir="true" dir="buildserver"/>
  </target>

  <target name="installplay">
    <ant inheritAll="false" useNativeBasedir="true" dir="buildserver" target="installplay"/>
  </target>

  <target name="RunLocalBuildServer">
    <ant inheritAll="false" useNativeBasedir="true" dir="buildserver" target="RunLocalBuildServer"/>
  </target>

  <target name="PlayApp">
    <ant inheritAll="false" useNativeBasedir="true" dir="buildserver" target="PlayApp"/>
  </target>

  <target name="PlayAppExtras">
    <ant inheritAll="false" useNativeBasedir="true" dir="buildserver" target="PlayAppExtras"/>
  </target>

  <target name="Emulator">
    <ant inheritAll="false" useNativeBasedir="true" dir="buildserver" target="Emulator"/>
  </target>

  <target name="AIMergerApp">
    <ant inheritAll="false" useNativeBasedir="true" dir="aimerger" target="AIMergerApp"/>
  </target>
  
  <target name="devmode" depends="noplay">
    <ant inheritAll="false" useNativeBasedir="true" dir="appengine" target="devmode"/>
  </target>

  <!-- Convenient target for just running the blockly related tests -->
  <target name="BlocklyTest">
    <ant inheritAll="false" useNativeBasedir="true" dir="blocklyeditor" target="tests"/>
  </target>

  <target name="tests">
    <ant inheritAll="false" useNativeBasedir="true" dir="appengine" target="tests"/>
    <ant inheritAll="false" useNativeBasedir="true" dir="blocklyeditor" target="tests"/>
    <ant inheritAll="false" useNativeBasedir="true" dir="buildserver" target="tests"/>
    <ant inheritAll="false" useNativeBasedir="true" dir="common" target="tests"/>
    <ant inheritAll="false" useNativeBasedir="true" dir="components" target="tests"/>
    <mkdir dir="reports"/>
    <junitreport todir="reports">
      <fileset dir="appengine/reports/raw" includes="TEST-*.xml"/>
      <!-- These are not the comments you're looking for.  This is for testing -->
      <fileset dir="blocklyeditor/reports/raw" includes="TEST-*.xml"/>
      <fileset dir="buildserver/reports/raw" includes="TEST-*.xml"/>
      <fileset dir="common/reports/raw" includes="TEST-*.xml"/>
      <fileset dir="components/reports/raw" includes="TEST-*.xml"/>
      <report format="frames" todir="reports/html"/>
    </junitreport>
    <echo message="Please see the report at file://${basedir}/reports/html/index.html"/>
  </target>

  <target name="javadoc">
    <mkdir dir="build/javadoc"/>
    <javadoc destdir="build/javadoc">
      <sourcepath>
        <pathelement location="appengine/src" />
        <pathelement location="buildserver/src" />
        <pathelement location="common/src" />
        <pathelement location="components/src" />
        <pathelement location="build/components/ComponentTranslation/src" />
      </sourcepath>
      <classpath>
        <fileset dir="buildserver/lib" includes="**/*.jar"/>
        <fileset dir="lib" includes="**/*.jar"/>
        <pathelement location="common/build/classes/CommonVersion" />
      </classpath>
      <!-- TODO(opensource) - Add more <link> elements that correspond to the jars on the
           classpath above,so our javadoc will link appropriate online javadoc for libraries we
           depend on. -->
      <link href="http://download.oracle.com/javase/6/docs/api/"/>
      <link href="http://google-web-toolkit.googlecode.com/svn/javadoc/2.5/"/>
      <link href="http://d.android.com/reference"
            offline="true"
            packagelistLoc="lib/android"/>
    </javadoc>
  </target>

  <target name="checkstyle-all">
    <java classname="com.puppycrawl.tools.checkstyle.Main" fork="true">
      <classpath>
        <pathelement path="lib/checkstyle/checkstyle.jar"/>
        <pathelement path="lib/checkstyle/appinventor-checks.jar"/>
      </classpath>
      <arg value="-c"/>
      <arg value="lib/checkstyle/appinventor-checks.xml"/>
      <arg value="appengine/src"/>
      <arg value="appengine/tests"/>
      <arg value="blocklyeditor/src"/>
      <arg value="blocklyeditor/tests"/>
      <arg value="buildserver/src"/>
      <arg value="buildserver/tests"/>
      <arg value="common/src"/>
      <arg value="common/tests"/>
      <arg value="components/src"/>
      <arg value="components/tests"/>
    </java>
  </target>

  <target name="checkstyle">
    <property name="commit" value="HEAD"/>
    <exec executable="misc/checkstyle/checkstyle-git.py"
          failonerror="true">
      <arg value="${commit}"/>
    </exec>
  </target>

  <target name="clean">
    <ant inheritAll="false" useNativeBasedir="true" dir="appengine" target="clean"/>
    <ant inheritAll="false" useNativeBasedir="true" dir="blocklyeditor" target="clean"/>
    <ant inheritAll="false" useNativeBasedir="true" dir="aimerger" target="clean"/>
    <ant inheritAll="false" useNativeBasedir="true" dir="buildserver" target="clean"/>
    <ant inheritAll="false" useNativeBasedir="true" dir="common" target="clean"/>
    <ant inheritAll="false" useNativeBasedir="true" dir="components" target="clean"/>
    <delete dir="build"/>
    <delete dir="reports"/>
  </target>

  <target name="doctor">
    <script language="javascript">
      project.setNewProperty("white", "\u001b[1;37m");
      project.setNewProperty("red", "\u001b[31m");
      project.setNewProperty("green", "\u001b[1;32m");
      project.setNewProperty("reset", "\u001b[0m");
    </script>
    <property environment="env"/>
    <!-- On Windows the Environment-Variable is not all uppercase -->
    <path id="combined-PATH">
      <pathelement path="${env.PATH}"/>
      <pathelement path="${env.Path}"/>
    </path>
    <property name="PATH" refid="combined-PATH"/>

    <echo message="${white}Diagnosing your system...${reset}"/>

    <!--Check Java version-->
    <condition property="java.version.check">
      <or>
        <javaversion exactly="1.7"/> <!-- Not sure about Java 7 compatibility -->
        <javaversion exactly="1.8"/>
      </or>
    </condition>
    <echo if:set="java.version.check" message="${green}Required version of Java is installed.${reset}"/>
    <echo unless:set="java.version.check">${red}Required version of Java is not installed.${reset}
      ${red}Please install Java 8 and try again.${reset}
    </echo>

    <!--Check if git is installed-->
    <condition property="git.present">
      <or>
        <available file="git" filepath="${PATH}"/>
        <available file="git.exe" filepath="${PATH}"/>
      </or>
    </condition>
    <echo if:set="git.present" message="${green}Git is installed.${reset}"/>
    <echo unless:set="git.present" message="${red}Git is not installed or not found on PATH.${reset}"/>

    <!--    Check for git submodules-->
    <exec executable="git" resultproperty="git.submodules.status" outputproperty="devnull">
      <arg line="submodule status ${basedir}/lib/blockly ${basedir}/lib/closure-library"/>
    </exec>
    <condition property="git.submodules.check" else="false">
      <isfailure code="0"/>
    </condition>
    <echo if:set="git.submodules.check" message="${green}Git submodules are properly set up.${reset}"/>
    <echo unless:set="git.submodules.check">${red}Git submodules are not properly set up.${reset}
      ${red}Please run `git submodule update --init`${reset}
    </echo>

    <!--Check if gcloud is installed-->
    <condition property="gcloud.present">
      <or>
        <available file="gcloud" filepath="${PATH}"/>
        <available file="gcloud.cmd" filepath="${PATH}"/>
      </or>
    </condition>
    <echo if:set="gcloud.present" message="${green}gcloud is installed.${reset}"/>
    <echo unless:set="gcloud.present">${red}gcloud is not installed or not found on PATH.${reset}
      ${red}Download gcloud from here: https://cloud.google.com/appengine/docs/standard/java/download${reset}
    </echo>
  </target>
</project>
