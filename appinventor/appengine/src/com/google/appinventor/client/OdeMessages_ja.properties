# Description: 
AccelerometerSensor__MinimumIntervalPropertyDescriptions=電話が切れるまでの最小間隔
# Description: 
AccelerationChangedEvents=加速度が変化しました
# Description: 
AccelerationChangedEventDescriptions=加速度がX, Y, Z座標のいずれかの方向で変化しました。
# Description: 
AboveRangeEvents=範囲超過
# Description: 
AboveRangeEventEnabledProperties=範囲超過イベントが有効です
# Description: 
AboutScreenPropertyDescriptions=画面に関する情報。システムメニューから「このアプリケーションについて」を選択すると表示されます。アプリについて人々に知らせるために使用します。複数画面アプリでは、各画面に独自のスクリーンについての情報があります。
# Description: 
AboutScreenProperties=スクリーンについて
# Description: Message providing details about starting the wireless connection.
AICompanionMenuItem=AIコンパニオン
# Description: 
Button__FontBoldPropertyDescriptions=設定されていると、ボタンテキストは太字で表示されます。
# Description: 
Button__EnabledPropertyDescriptions=設定されていると、ユーザーはボタンをタップしてアクションを起こすことができます。
# Description: 
Button__ClickEventDescriptions=ユーザーはボタンをタップして離しました。
# Description: 
Button__BackgroundColorPropertyDescriptions=ボタンの背景色を返します
# Description: 
ButtonHelpStringComponentPallette=クリックを検出する機能を持つボタン。外観の多くの部分を変更することができ、クリックが可能かどうか（<code>Enabled</code>）は、デザイナーまたはブロックエディタで変更することができます。
# Description: 
BuildRequestDataMethods=ビルドリクエストデータ
# Description: 
BuildRequestDataMethodDescriptions=名前と値のペアを表す2要素のサブリストのリストを、ポストテキストに渡すのに適した、application/x-www-form-urlencodedメディアタイプとしてフォーマットされた文字列に変換します。
# Description: 
BuildPostDataMethods=ビルドポストデータ
# Description: 
BufferSizePropertyDescriptions=バッファーの大きさをバイト数で返します
# Description: 
BufferSizeProperties=バッファーの大きさ
# Description: 
BoundsMethods=境界
# Description: 
BoundsMethodDescriptions=四角形の外接枠を ((北西) (南東)) の形式で返します。
# Description: 
BoundsChangeEvents=境界の変更
# Description: 
BoundsChangeEventDescriptions=ユーザーがマップをパンニングまたはズームしてマップの境界を変更しました。
# Description: 
BoundingBoxPropertyDescriptions=マップのバウンディングボックスを[[北, 西], [南, 東]]として保存。
# Description: 
BoundingBoxProperties=バウンディング（境界）ボックス
# Description: 
BounceMethods=バウンドする
# Description: 
BottomOfRangePropertyDescriptions=BelowRange、WithinRange、AboveRange イベントで使用される範囲の一番下。
# Description: 
BottomOfRangeProperties=最下位（範囲の下）
# Description: 
BluetoothServer__EnabledPropertyDescriptions=Bluetoothが有効かどうか
# Description: 
BluetoothServer__AvailablePropertyDescriptions=デバイスでBluetoothが利用可能かどうか
# Description: 
BluetoothServerHelpStringComponentPallette=Bluetoothサーバーコンポーネント
# Description: 
BluetoothErrorEventDescriptions=Bluetoothエラーイベントは使用されなくなりました。代わりに、スクリーン.エラーが発生しましたイベントを使用してください。
# Description: 
BluetoothClient__EnabledPropertyDescriptions=Bluetoothが有効かどうか
# Description: 
BluetoothClient__AvailablePropertyDescriptions=デバイスでBluetoothが利用可能かどうか
# Description: 
BluetoothClientPropertyDescriptions=通信に使用するBluetoothクライアントコンポーネント。
# Description: 
BluetoothClientProperties=Bluetooth　クライアント
# Description: 
BluetoothClientHelpStringComponentPallette=Bluetooth クライアント・コンポーネント
# Description: 
BlocksToolkitPropertyDescriptions=画面のサブセットを表すJSON文字列。テンプレートアプリの作成者は、これを使用して、プロジェクトで利用可能なコンポーネント、デザイナープロパティ、およびブロックを制御できます。
# Description: 
BlocksToolkitProperties=ブロックツールキット
# Description: 
BigDefaultTextPropertyDescriptions=チェックを入れると、ハイコントラストモードになります
# Description: 
BigDefaultTextProperties=ビッグデフォルトテキスト
# Description: 
BelowRangeEvents=範囲外
# Description: 
BelowRangeEventEnabledProperties=範囲外イベントが有効
# Description: 
BehaviorPropertyCategory=行動
# Description: 
BeforeSpeakingEvents=話す前
# Description: 
BeforeSpeakingEventDescriptions=スピークが呼び出されたときに発生するイベント。
# Description: 
BeforePickingEvents=ピッキング前
# Description: 
BeforePageLoadEvents=ページのロード前
# Description: 
BeforePageLoadEventDescriptions=ページがロードされると、このイベントが実行されます。
# Description: 
BeforeGettingTextEvents=テキストを取得する前
# Description: 
BeforeGettingTextEventDescriptions=`音声認識`が起動されたときに発生するシンプルなイベント。
# Description: 
BearingToPointMethodDescriptions=マーカーから指定された緯度経度までの方位を、真北からの度数で返します。
# Description: 
BearingToFeatureMethodDescriptions=マーカー（目印）から指定された地図フィーチャーまでの方位を、真北からの度数で返します。線とロイド（重心）パラメータが true の場合、方位は地図フィーチャの中心になります。そうでない場合、方位はマーカー（目印）に最も近いフィーチャ内の点に対して計算されます。
# Description: 
BaudRatePropertyDescriptions=現在の通信速度を返す
# Description: 
BaudRateProperties=通信速度
# Description: 
Barometer__EnabledPropertyDescriptions=もし有効なら、デバイスは変更を聞きます。
# Description: 
Barometer__AvailablePropertyDescriptions=デバイスが気圧計コンポーネントをサポートするハードウェアを持っているかどうかを指定します。
# Description: 
BarometerHelpStringComponentPallette=周囲の気圧を測定できるセンサー部品。
# Description: 
BarcodeScanner__ResultPropertyDescriptions=前回のスキャン結果のテキスト。
# Description: 
BarcodeScannerHelpStringComponentPallette=バーコードスキャナーを使用してバーコードを読み取るためのコンポーネント
# Description: 
BallotQuestionPropertyDescriptions=投票される質問（問題）。
# Description: 
BallotQuestionProperties=バロットに関する質問
# Description: 
BallotOptionsPropertyDescriptions=バロットオプションのリスト。
# Description: 
BallotOptionsProperties=バロットオプション
# Description: 
Ball__ZPropertyDescriptions=’ボール’を他のボールとどのように重ねるか
# Description: 
Ball__YPropertyDescriptions=ボールの垂直座標で、ボールが下に移動するにつれて増加する。原点中心プロパティがtrueの場合、この座標はボールの中心を表し、そうでない場合はボールの上端を表します。
# Description: 
Ball__XPropertyDescriptions=ボールの水平座標で、ボールが右に移動するにつれて大きくなります。原点中心プロパティがtrueの場合、この座標はボールの中心を表し、そうでない場合はボールの左端を表します。
# Description: 
Ball__VisiblePropertyDescriptions=ボールが表示されているかどうか。
# Description: 
Ball__TouchedEventDescriptions=ユーザーが有効化されたボールに触れ、すぐに指を離したときに呼び出されるイベントハンドラーです。指定された x 座標と y 座標は、キャンバスの左上からの相対座標です。
# Description: 
Ball__TouchUpEventDescriptions=ユーザーが有効化されたボールへのタッチを止めたとき（タッチダウンイベントの後に指を離したとき）に呼び出されるイベント ハンドラーです。これは、キャンバスの左上からの相対的なタッチの x 座標と y 座標を提供します。
# Description: 
Ball__TouchDownEventDescriptions=ユーザーが有効化されたボールにタッチし始める（指をボールの上に置いてそのままにしておく）ときに呼び出されるイベントハンドラーです。これは、キャンバスの左上からのタッチの x 座標と y 座標を提供します。
# Description: 
Ball__SpeedPropertyDescriptions=有効な場合の、ボールが間隔ごとに移動するピクセル数。
# Description: 
Ball__RadiusPropertyDescriptions=ボールの端から中心までの距離。
# Description: 
Ball__PointTowardsMethodDescriptions=ボールを指定したスプライト（ボールまたは画像スプライト）の方向に向けます。新しい方位は、2つのスプライトの中心点を結ぶ線と平行になります。
# Description: 
Ball__PointInDirectionMethodDescriptions=座標(x, y)を持つ点に向かってボールのヘディングを設定します。
# Description: 
Ball__PaintColorPropertyDescriptions=ボールの色。
# Description: 
Ball__MoveToPointMethodDescriptions=ボールの原点を、[x-座標, y-座標]としてフォーマットされたリストで指定された座標の位置に移動します。
# Description: 
Ball__MoveToMethodDescriptions=ボールのx座標とy座標を設定します。原点の中心がtrueの場合、ボールの中心がここに配置されます。そうでない場合は、ボールの左上端が指定した座標に配置されます。
# Description: 
Ball__MoveIntoBoundsMethodDescriptions=ボールの一部が枠外にはみ出した場合、ボールを枠内に戻します。ボールの幅が大きすぎてキャンバスに収まらない場合、ボールの左側をキャンバスの左側に揃えます。ボールが高すぎて キャンバスに収まらない場合、ボールの上辺をキャンバスの上辺に揃えます。
# Description: 
Ball__IntervalPropertyDescriptions=ボールの位置が更新される間隔をミリ秒で指定します。例えば、間隔が50で速度が10の場合、50ミリ秒ごとにスプライトはヘディング方向に10ピクセル移動します。
# Description: 
Ball__HeadingPropertyDescriptions=ボールのヘディングを正のX軸より上の角度で返します。0度は画面の右方向、90度は画面の上方向です。
# Description: 
Ball__FlungEventDescriptions=有効化されたボール上でフライングジェスチャー（クイックスワイプ）が行われたときに呼び出されるイベントハンドラーです。これは、フリングの開始位置の x 座標と y 座標（キャンバスの左上からの相対座標）、速度（ピクセル/ミリ秒）、ヘディング（0～360 度）、フリングのベクトルの x 成分と y 成分を提供します。
# Description: 
Ball__EnabledPropertyDescriptions=ボールが動くかどうかをコントロールし、コリジョン、ドラッグ、タッチ、フライングで操作できます。
# Description: 
Ball__EdgeReachedEventDescriptions=ボールが画面の端に達したときに呼び出されるイベントハンドラーです。そのエッジで Bounce （バウンド）が呼ばれると、ボールは到達したエッジから跳ね返ったように見えます。ここでの端は、北(1)、北東(2)、東(3)、南東(4)、南(-1)、南西(-2)、西(-3)、北西(-4)の8方向のいずれかを示す整数で表されます。
# Description: 
Ball__DraggedEventDescriptions=ボールがドラッグされたときに呼び出されるイベントハンドラーです。すべての呼び出しにおいて、開始座標はスクリーンが最初にタッチされた場所であり、"current "座標は現在の線分の終点を表します。ドラッグの最初の呼び出しでは、"previous "座標は開始座標と同じです。MoveToが明示的に呼び出されない限り、ボールはドラッグされたイベントに応じて実際にはどこにも移動しないことに注意してください。スムーズな移動のためには、各座標を初期値と現在値と前回値の差の和に設定する必要があります。
# Description: 
Ball__CollidingWithMethodDescriptions=このボールと渡されたスプライト（ボールまたは画像スプライト）の間に衝突が登録されているかどうかを示します。
# Description: 
Ball__BounceMethodDescriptions=ボールを壁から離れるようにバウンドさせます。通常のバウンドの場合、エッジ引数はエッジリーチが返すものを指定します。
# Description: 
BallHelpStringComponentPallette=<p><code>Canvas</code> 上に配置できる丸い「スプライト」。タッチやドラッグに反応し、他のスプライト (<code>ImageSprite</code> など) と対話できます。 <code>Ball</code>s) と Canvas の端を移動し、そのプロパティ値に従って移動します。</p><p>たとえば、<code>Ball</code> を手前に 4 ピクセル移動させるには、 <code>Canvas</code> の先頭を 500 ミリ秒 (0.5 秒) ごとに表示するには、<code>Speed</code> プロパティを 4 [ピクセル] に設定し、<code>Interval</code> プロパティを 4 [ピクセル] に設定します。 500 [ミリ秒]、<code>Heading</code> プロパティを 90 [度]、<code>Enabled</code> プロパティを <code>True</code> に設定します。</p><p> <code>Ball</code> と <code>ImageSprite</code> の違いは、後者は画像ファイルから外観を取得できるのに対し、<code>Ball</code> の外観は画像ファイルから取得できることです。 <code>PaintColor</code> プロパティと <code>Radius</code> プロパティを変更することによってのみ変更されます。</p>
# Description: 
BackgroundImageinBase64PropertyDescriptions=背景画像をBase64形式で設定します。これにはAPIレベル >= 8が必要です。APIレベルが8未満のデバイスの場合、これを設定すると背景が空になってしまいます。
# Description: 
BackgroundImageinBase64Properties=Base64の背景画像
# Description: 
BackgroundImageProperties=背景の画像
# Description: 
BackgroundColorProperties=背景の色
# Description: 
BackPressedEvents=バックプレス
# Description: 
BackPressedEventDescriptions=端末のバックボタンが押されました。
# Description: 
AzimuthPropertyDescriptions=デバイスの方位角を返します。意味のある値を返すには、センサーが有効になっている必要があります。
# Description: 
AzimuthProperties=アジマス（方位角）
# Description: 
AverageLuxProperties=ルクス平均
# Description: 
AverageLuxPropertyDescriptions=最近測定された10個の光量の平均値（ルクス単位）。
# Description: 
AvailableProvidersPropertyDescriptions=GPSやネットワークなど、利用可能なサービスプロバイダのリストです。この情報はリストとテキスト形式で提供されます。
# Description: 
AvailableProvidersProperties=利用可能なプロバイダー
# Description: 
AvailableProperties=利用可能
# Description: 
AvailableLanguagesPropertyDescriptions=このデバイスで音声の読み上げを使用できる言語のリストです。これらの略語の意味を確認するには、サポートされている言語のAndroid開発者ドキュメントを確認してください。
# Description: 
AvailableLanguagesProperties=利用可能な言語
# Description: 
AvailableCountriesPropertyDescriptions=テキストの読み上げで使用できる、このデバイスで使用可能な国コードのリストです。これらの略語の意味については、サポート言語のAndroid開発者向けドキュメントをご確認ください。
# Description: 
AvailableCountriesProperties=利用可能な国
# Description: 
AuthorizeMethods=許可（オーソライズ）
# Description: 
AuthorizeMethodDescriptions=OAuthプロトコルを使用して、Webブラウザ経由でTwitterにログインするようにユーザーをリダイレクトします。
# Description: 
AskForPermissionMethods=許可を求める（許可申請）
# Description: 
AskForPermissionMethodDescriptions=危険なパーミッションへのアクセス許可をユーザーに求めます。
# Description: 
AppendValueToListMethods=値をリストに追加
# Description: 
AppendValueToListMethodDescriptions=リストの末尾に値をアトミックに追加します。2つのデバイスが同時にこの関数を使用した場合、両方が追加され、データが失われることはありません。
# Description: 
AppendValueMethods=値の追加（付加価値）
# Description: 
AppendValueMethodDescriptions=リストの末尾に値をアトミックに追加します。2つのデバイスが同時にこの関数を使用した場合、両方が追加され、データが失われることはありません。
# Description: 
AppendToFileMethods=ファイルへの追加
# Description: 
AppendToFileMethodDescriptions=ファイルストレージの末尾にテキストを追加し、ファイルが存在しない場合はファイルを作成します。ファイルが書き込まれる場所については、セーブファイルのヘルプを参照してください。
# Description: 
AppearancePropertyCategory=アピアランス（容姿）
# Description: 
AppNamePropertyDescriptions=アプリ名が空白の場合、プロジェクトがビルドされたときにプロジェクトの名前が設定されます。
# Description: 
AppNameProperties=アプリ名
# Description: 
ApiKeyProperties=APIキー
# Description: 
AnimationPropertyDescriptions=これは、画像に少数のモーションタイプを付けることができる限定的なアニメーションの形式です。可能なモーションは、ScrollRightSlow、ScrollRight、ScrollRightFast、ScrollLeftSlow、ScrollLeft、ScrollLeftFast、Stopです。
# Description: 
AnimationProperties=アニメーション
# Description: 
AnglePropertyDescriptions=デバイスのタイルの方向を示す角度を返します。つまり、デバイスの表面を転がるボールが感じる力の方向を示します。
# Description: 
AngleProperties=角度
# Description: 
AnchorVerticalPropertyDescriptions=垂直アライメントプロパティは、マーカーのアンカーをその高さに対してどこに配置するかを制御します。選択肢は以下の通りです： 1 = 上端揃え、2 = 垂直中央揃え、3 = 下端揃えです。
# Description: 
AnchorVerticalProperties=垂直アンカー
# Description: 
AnchorHorizontalPropertyDescriptions=水平アライメントプロパティは、マーカーのアンカーをその幅に対してどの位置に配置するかを制御します。選択肢は以下の通りです： 1 = 左揃え、3 = 水平方向中央揃え、2 = 右揃えです。
# Description: 
AnchorHorizontalProperties=水平アンカー
# Description: 
AltitudePropertyDescriptions=直近で利用可能な高度値（メートル単位）。利用可能な値がない場合は0が返されます。
# Description: 
AltitudeProperties=高度（標高）
# Description: 
AlternateTextPropertyDescriptions=画像がどのように見えるかを説明する説明文。
# Description: 
AlternateTextProperties=別テキスト
# Description: 
AllowCookiesProperties=クッキーを許可する
# Description: 
AllowCookiesPropertyDescriptions=レスポンスのクッキーを保存し、以降のリクエストで使用するかどうか。クッキーはAndroidバージョン2.3以上でのみサポートされています。
# Description: 
AlignVerticalProperties=垂直（縦）
# Description: 
AlignHorizontalProperties=水平に整列する
# Description: 
AirPressurePropertyDescriptions=センサーが利用可能で有効な場合、hPa（millibar）単位の気圧。
# Description: 
AirPressureProperties=気圧
# Description: 
AirPressureChangedEvents=気圧変化
# Description: 
AirPressureChangedEventDescriptions=気圧の変化が検出されたときに呼び出されます（単位はhPa）。
# Description: 
AfterTimeSetEvents=タイムセット後（時間設定後）
# Description: 
AfterTimeSetEventDescriptions=このイベントは、ユーザーがポップアップダイアログで時間を設定したときに実行されます。
# Description: 
AfterTextInputEvents=テキスト入力後
# Description: 
AfterTextInputEventDescriptions=ユーザーがShowTextDialogに応答した後に発生するイベント。
# Description: 
AfterSpeakingEvents=発言後
# Description: 
AfterSpeakingEventDescriptions=メッセージが発言された後に発生するイベント。メッセージを話すことに成功した場合はtrueが返され、失敗した場合はfalseが返されます。
# Description: 
AfterSoundRecordedEvents=録音後
# Description: 
AfterSoundRecordedEventDescriptions=新しく作成されたサウンドの場所を提供します。
# Description: 
AfterSelectingEvents=選択後
# Description: 
AfterSelectingEventDescriptions=ユーザーがドロップダウンリストから項目を選択した後に呼び出されるイベント。
# Description: 
AfterScanEvents=スキャン後
# Description: 
AfterScanEventDescriptions=スキャナが（テキスト）結果を読み取り、その結果を提供することを示します
# Description: 
AfterRecordingEvents=レコーディング後
# Description: 
AfterRecordingEventDescriptions=カメラでビデオが録画されたことを示し、保存されたビデオへの経路を提供します。
# Description: 
AfterPictureEvents=写真の後
# Description: 
AfterPictureEventDescriptions=撮影後に呼び出されます。テキスト引数 `image` は、携帯電話で画像を探すために使用する経路です。
# Description: 
AfterPickingEvents=ピッキング後
# Description: 
AfterGettingTextEvents=テキスト取得後
# Description: 
AfterGettingTextEventDescriptions=スピーチレコナイザー（音声認識）が音声を認識した後に発生するシンプルなイベントです。もし
# Description: 
AfterFileSavedEvents=ファイル保存後
# Description: 
AfterFileSavedEventDescriptions=ファイルの内容が書き込まれたことを示すイベント。
# Description: 
AfterDateSetEvents=アフターデートセット（日付設定後）
# Description: 
AfterDateSetEventDescriptions=ユーザーがダイアログで日付を選択した後に実行されるイベント
# Description: 
AfterChoosingEvents=選択後
# Description: 
AfterChoosingEventDescriptions=ユーザーがShowChooseDialog（選択ダイアログを表示する）を選択した後のイベント。
# Description: 
AfterActivityEvents=アフターアクティビティ（アクティビティ後）
# Description: 
AfterActivityEventDescriptions=このActivityStarter（アクティビティスターター）が戻った後に発生するイベント。
# Description: 
AddressesAndNamesPropertyDescriptions=ペアリングされたBluetoothデバイスのアドレスと名前
# Description: 
AddressesAndNamesProperties=住所と名前
# Description: 
AddYearsMethods=年の追加（加算年数）
# Description: 
AddYearsMethodDescriptions=指定された瞬間から数年後の時間を返します。
# Description: 
AddWeeksMethods=週の追加（追加週間）
# Description: 
AddWeeksMethodDescriptions=戻り値 指定された瞬間から何週間か後の時間における瞬間。
# Description: 
AddSecondsMethods=秒の追加（加算秒数）
# Description: 
AddSecondsMethodDescriptions=指定した瞬間の何秒後かを返します。
# Description: 
AddMonthsMethods=（暦の）月の追加
# Description: 
AddMonthsMethodDescriptions=指定した瞬間の数か月後の時間を返します。
# Description: 
AddMinutesMethods=分の追加（加算分数）
# Description: 
AddMinutesMethodDescriptions=指定した瞬間の数分後の時刻を返します。
# Description: 
AddHoursMethods=時間の追加（加算時間）
# Description: 
AddHoursMethodDescriptions=指定した瞬間の何時間後かを返します。
# Description: 
AddDurationMethods=期間の追加（加算期間）
# Description: 
AddDurationMethodDescriptions=引数で指定した時刻の、ある時間後の瞬間を返します
# Description: 
AddDaysMethods=addDays関数
# Description: 
AddDaysMethodDescriptions=指定した瞬間から数日後の時間を返します。
# Description: 
ActivityStarter__ResultPropertyDescriptions=アクティビティの結果を返します。
# Description: 
ActivityStarterHelpStringComponentPallette=<code>StartActivity</code>メソッドを使用してアクティビティを起動できるコンポーネントです。<p><ul> <li> 別の App Inventor for Android アプリケーションを起動します。ソースコードをダウンロードし、ファイルエクスプローラーやunzipユーティリティを使って「youngandroidproject/project.properties」というファイルを見つけてください。例えば、<code>main=com.gmail.Bitdiddle.Ben.HelloPurr.Screen1</code>のようになります。（最初のコンポーネントはBen.Bitdiddleによって作成されたことを示します。）
# Description: 
ActivityPackagePropertyDescriptions=開始される特定のコンポーネントのパッケージ部分を返します。
# Description: 
ActivityErrorEventDescriptions=ActivityError（アクティビティエラー）イベントは使用されなくなりました。代わりに Screen ErrorOccurred （画面エラー発生）イベントを使用してください。
# Description: 
ActivityPackageProperties=アクティビティパッケージ
# Description: 
ActivityClassPropertyDescriptions=開始される特定のコンポーネントのクラス部分を返します。
# Description: 
ActivityClassProperties=アクティビティクラス
# Description: 
ActivityCanceledEvents=アクティビティキャンセル
# Description: 
ActivityCanceledEventDescriptions=アクティビティがキャンセルされ、ActivityStarter（アクティビティスターター）が戻った場合に発生するイベントです。
# Description: 
ActionPropertyDescriptions=アクティビティを開始するために使用されるアクションを返します。
# Description: 
ActionProperties=アクション
# Description: 
ActionBarPropertyDescriptions=アクションバーのプロパティ
# Description: 
ActionBarProperties=アクションバー
# Description: 
AccuracyPropertyDescriptions=最新の精度をメートル単位で表します。値がない場合は0が返されます。
# Description: 
AccuracyProperties=精度
# Description: 
AcceptConnectionWithUUIDMethods=UUIDで接続を受け入れる
# Description: 
AcceptConnectionWithUUIDMethodDescriptions=特定のUUIDを持つ着信接続を受け入れる。
# Description: 
AcceptConnectionMethods=接続を受け入れる（アクセプトコネクション）
# Description: 
AcceptConnectionMethodDescriptions=シリアルポートプロファイル（SPP）で着信接続を受け入れる。
# Description: 
AccentColorPropertyDescriptions=ハイライトやその他のユーザーインターフェースのアクセントに使われる色です。
# Description: 
AccentColorProperties=アクセントカラー
# Description: 
AccelerometerSensor__LegacyModePropertyDescriptions=このプロパティが追加される前のリリースでは、AccelerometerSensorコンポーネントは、Androidシステムから受信したセンサー値を直接渡していました。ただし、これらの値は、デフォルトが横向きモードのタブレットを補正しないため、MIT App Inventorのプログラマーが補正する必要があります。しかし、携帯電話のようなポートレートモードのデバイスでは、補正をかけると正しくない結果になってしまいます。ランドスケープモードのタブレットを検出し、補正を行うようになりました。ただし、プロジェクトですでに補正が行われている場合は、正しくない結果が得られます。プロジェクトを更新していただくことが望ましいのですが、このプロパティを "true "に設定するだけで、補償コードを無効にすることもできます。注意：このプロパティは将来のリリースで削除される可能性があるため、プロジェクトを更新することをお勧めします。
# Description: 
AccelerometerSensor__EnabledPropertyDescriptions=trueの場合、センサーはイベントを生成する。そうでなければ、デバイスが加速されたり揺さぶられたりしても、イベントは生成されない。
# Description: 
AccelerometerSensor__AvailablePropertyDescriptions=加速度センサーがデバイス上で利用可能かどうかを返します。
# Description: 
AccelerometerSensorHelpStringComponentPallette=揺れを検知し、SI単位(m/s<sup>2</sup>)を使用して3次元で加速度をおおよそ測定できる非可視コンポーネント。コンポーネント：<ul><li> <strong>xAccel</strong>: 0 携帯電話が平らな面に静止しているときはプラス、携帯電話が右に傾いている（左側が盛り上がっている）ときはマイナス、携帯電話が左に傾いている（右側が盛り上がっている）ときはマイナス。</li> <li> <strong>yAccel</strong>: 0  電話機が平らな面に静止しているときはプラス、底面が持ち上がっているときはプラス、上面が持ち上がっているときはマイナスである。</li> <li> <strong>zAccel</strong>: -9.8と同等 (デバイスがディスプレイを上向きにして地面と平行に静止しているときの地球の重力を毎秒メートルで表し、地面に垂直な場合は0、下向きの場合は+9.8。また、重力に逆らって加速させることによっても、その値に影響を与えることができる。</li></ul>
# Description: 
AbsoluteStrengthProperties=絶対強度
# Description: 
AbsoluteStrengthPropertyDescriptions=フィールドの絶対的な強さを示す。
# Description: 
TextToSpeech__PitchPropertyDescriptions=TextToSpeech のピッチを設定します。値は 0 から 2 の間で、値が低いほど合成音声のトーンが低くなり、値が大きいほど合成音声のトーンが高くなります。
# Description: 
TextToSpeech__LanguagePropertyDescriptions=TextToSpeech の言語を設定します。これは実際に話されている言語ではなく、単語の発音方法を変更します。たとえば、言語を に設定し、誰かがフランス語なまりで英語を話しているような音声で英語のテキストを話します。
# Description: 
TextToSpeechHelpStringComponentPallette=TextToSpeech コンポーネントは、指定されたテキストを読み上げます。音声のピッチと速度を設定できます。 <p>言語コードを指定して言語を設定することもできます。これにより、実際に話される言語ではなく、単語の発音が変更されます。たとえば、言語をフランス語に設定して英語のテキストを話すと、フランス語のアクセントで英語 (en) を話しているように聞こえます。</p> <p>国コードを指定して国を指定することもできます。これは発音に影響を与える可能性があります。たとえば、イギリス英語 (GBR) はアメリカ英語 (USA) とは異なって聞こえます。すべての国コードがすべての言語に影響するわけではありません。</p> <p>利用可能な言語と国は特定のデバイスによって異なり、AvailableLanguages プロパティと AvailableCountries プロパティで一覧表示できます。</p>
# Description: 
TextSizePropertyDescriptions=リストビュー項目のテキスト サイズ。
# Description: 
TextProperties=テキスト
# Description: 
TextInputCanceledEventDescriptions=ユーザがテキストダイアログに反応した後で発生するイベント。
# Description: 
TextColorDetailPropertyDescriptions=リストビュー stringItems の DetailText のテキストの色。
# Description: 
TextBox__WidthPropertyDescriptions=TextBox の水平幅をピクセル単位で指定します。
# Description: 
TextBox__WidthPercentPropertyDescriptions=TextBox の水平幅を画面の幅のパーセンテージとして指定します。
# Description: 
TextBox__VisiblePropertyDescriptions=TextBox を画面上に表示するかどうかを指定します。値は TextBox が表示されている場合は true、非表示の場合は false です。
# Description: 
TextBox__TextPropertyDescriptions=テキストボックスの内容を返します。
# Description: 
TextBox__TextColorPropertyDescriptions=テキストの色。デザイナーまたはブロック エディターで名前によって色を選択できます。デフォルトの文字色は黒です。
# Description: 
TextBox__TextAlignmentPropertyDescriptions=テキストを左揃え、中央揃え、または右揃えにするかどうか。デフォルトでは、テキストは左揃えで表示されます。
# Description: 
TextBox__RequestFocusMethodDescriptions=TextBox をアクティブに設定します。
# Description: 
TextBox__NumbersOnlyPropertyDescriptions=true の場合、このテキスト ボックスはキーボード入力として数字のみを受け入れます。数値には、小数点と、オプションで先頭にマイナス記号を含めることができます。これはキーボード入力にのみ適用されます。 NumbersOnly が true の場合でも、[set Text to] を使用して任意のテキストを入力できます。
# Description: 
TextBox__LostFocusEventDescriptions=ユーザーが別のテキスト ボックスに触れた場合など、TextBox が入力用に選択されなくなったときに発生するイベント。
# Description: 
TextBox__HintPropertyDescriptions=ユーザーが入力すべき内容についてのヒントを提供するために、TextBox 内に薄く表示されるテキスト。これは、Text プロパティが空の場合にのみ表示されます。
# Description: 
TextBox__HideKeyboardMethodDescriptions=キーボードを隠します。これが必要なのは、複数行のテキスト ボックスのみです。ユーザーが「完了」キーを押すと、単一行のテキスト ボックスはキーボードを閉じます。
# Description: 
TextBox__HeightPropertyDescriptions=TextBox の垂直の高さをピクセル単位で指定します。
# Description: 
TextBox__HeightPercentPropertyDescriptions=TextBox の垂直の高さを、画面の高さのパーセンテージとして指定します。
# Description: 
TextBox__GotFocusEventDescriptions=ユーザーが TextBox に触れた場合など、TextBox が入力用に選択されたときに発生するイベント。
# Description: 
TextBox__FontTypefacePropertyDescriptions=テキストのフォント。値はデザイナーで変更できます。
# Description: 
TextBox__FontSizePropertyDescriptions=テキストのフォント サイズ。デフォルトでは 14.0 ポイントです。
# Description: 
TextBox__FontItalicPropertyDescriptions=テキストを斜体で表示するかどうか。デフォルトでは、そうではありません。
# Description: 
TextBox__FontBoldPropertyDescriptions=テキストのフォントを太字にするかどうか。デフォルトではそうではありません。
# Description: 
TextBox__EnabledPropertyDescriptions=ユーザーが TextBox にテキストを入力できるかどうか。デフォルトでは、これは true です。
# Description: 
TextBox__BackgroundColorPropertyDescriptions=入力ボックスの背景色。デザイナーまたはブロック エディターで名前によって色を選択できます。デフォルトの背景色は ''default'' (シェーディングされた 3D 外観) です。
# Description: 
TextBoxHelpStringComponentPallette=<p>ユーザーがテキストを入力するためのボックス。初期またはユーザーが入力したテキスト値は、<code>Text</code> プロパティにあります。空白の場合、ボックス内に薄いテキストとして表示される <code>Hint</code> プロパティは、ユーザーに入力内容に関するガイダンスを提供します。</p><p><code>MultiLine</code> > プロパティは、テキストに複数の行を含めることができるかどうかを決定します。単一行のテキスト ボックスの場合、ユーザーが [完了] キーを押すとキーボードが自動的に閉じます。複数行のテキスト ボックスのキーボードを閉じるには、アプリで HideKeyboard メソッドを使用するか、ユーザーによる Back キーの押下に依存する必要があります。</p><p><code> NumbersOnly</code> プロパティは、キーボードが数値入力を受け入れるように制限します。 </p><p>その他のプロパティは、テキスト ボックスの外観 (<code>TextAlignment</code>、<code>BackgroundColor</code> など) とテキスト ボックスを使用できるかどうか (<code>) に影響します。有効</code>)。</p><p>テキスト ボックスは通常、<code>Button</code> コンポーネントとともに使用され、テキストの入力が完了したらユーザーがボタンをクリックします。</p><p >ユーザーが入力したテキストを表示したくない場合は、代わりに <code>PasswordTextBox</code> を使用してください。</p>
# Description: 
TemperaturePropertyDescriptions=センサーが利用可能で有効な場合の温度 (摂氏)
# Description: 
TemperatureProperties=温度
# Description: 
TemperatureChangedEvents=温度が変化しました
# Description: 
TemperatureChangedEventDescriptions=Called when a change is detected in the temperature (in degrees Celsius).
# Description: 
TapThresholdPropertyDescriptions=右、左、上、下のピクセル数を設定します。(タッチではなく) ドラッグとみなされるには、一連のドラッグが開始点から移動する必要があります。
# Description: 
TakePictureMethods=写真を撮る
# Description: 
TagWrittenEventDescriptions=Indicates that a tag has come into range of the NFC sensor and has been written.
# Description: 
TagReadEventDescriptions=Indicates that a new tag has been detected. Currently this is only a plain text tag, as specified in the manifest.
# Description: Text for screen animation choice 'Zoom '
zoomScreenAnimation=ズーム
# Description: 
zoomParams=ズーム
# Description: 
TextingHelpStringComponentPallette=<p><code>SendMessage</code> メソッドが呼び出されたときに、<code>Message</code> プロパティで指定されたテキスト メッセージを <code>PhoneNumber< で指定された電話番号に送信するコンポーネント。 /code> プロパティ。</p> <p><code>ReceivingEnabled</code> プロパティが 1 に設定されている場合、メッセージは<b>受信されません</b>。 <code>ReceivingEnabled</code> が 2 に設定されている場合、メッセージはアプリケーションの実行中にのみ受信されます。最後に、<code>ReceivingEnabled</code> が 3 に設定されている場合、アプリケーションが実行されているときはメッセージが受信され、 アプリケーションが実行されていない<b>ときは</b>メッセージはキューに入れられ、ユーザーに通知が表示されます。 </p> <p>メッセージが到着すると、<code>MessageReceived</code> イベントが発生し、送信番号とメッセージが提供されます。</p> <p> このコンポーネントを含むアプリは、次のような場合でもメッセージを受信します。それはバックグラウンドにあり（つまり、画面に表示されていないとき）、さらに、アプリが実行されていない場合でも、電話にインストールされている限り、アプリは実行されます。アプリがフォアグラウンドにないときに携帯電話がテキスト メッセージを受信すると、携帯電話の通知バーに通知が表示されます。通知を選択するとアプリが起動します。アプリ開発者としては、電話機でテキスト メッセージを無視できるように、ユーザーが ReceivingEnabled を制御できるようにしたいと思うでしょう。</p> <p>GoogleVoiceEnabled プロパティが true の場合、メッセージを送信できます。 Google Voiceを使用したWi-Fi。このオプションを使用するには、ユーザーが Google Voice アカウントを持っており、モバイル Voice アプリが電話にインストールされている必要があります。 Google Voice オプションは、Android 2.0 (Eclair) 以降をサポートする携帯電話でのみ機能します。</p> <p>電話番号 (例: 650-555-1212) を指定するには、<code>PhoneNumber</code> を設定します。プロパティを、指定された数字を含むテキスト文字列に変換します (例: 6505551212)。ダッシュ、ドット、括弧を含めることができますが (例: (650)-555-1212)、無視されます。スペースは含めることはできません。</p> <p>アプリで電話番号を指定するもう 1 つの方法は、<code>PhoneNumberPicker</code> コンポーネントを組み込むことです。これにより、ユーザーは保存されている電話番号から電話番号を選択できるようになります。電話の連絡先にあります。</p>
# Description: 
TimePicker__EnabledPropertyDescriptions=設定されている場合、ユーザーは TimePicker をタップしてアクションを実行できます。
# Description: 
TimePicker__BackgroundColorPropertyDescriptions=ボタンの背景色を返します
# Description: 
TimePickerHelpStringComponentPallette=<p>クリックすると、ユーザーが時間を選択できるポップアップ ダイアログが起動するボタン。</p>
# Description: 
TimeIntervalPropertyDescriptions=センサーが位置情報の更新を送信するために使用する最小時間間隔をミリ秒単位で決定します。ただし、位置の更新は、電話機の位置が実際に変化した場合にのみ受信され、指定された時間間隔の使用は保証されません。たとえば、時間間隔として 1000 が使用されている場合、位置の更新は 1000 ミリ秒より早く実行されることはありませんが、その後はいつでも実行される可能性があります。
# Description: 
ThumbPositionPropertyDescriptions=スライダーのつまみの位置を設定します。この値が MaxValue より大きい場合、MaxValue と同じ値に設定されます。この値が MinValue より小さい場合は、MinValue と同じ値に設定されます。
# Description: 
ThumbEnabledPropertyDescriptions=スライダーのサムを表示するかどうかを設定します。
# Description: 
ThumbColorInactivePropertyDescriptions=スイッチがオフ/チェックされていない場合の「スイッチ」のサム (前後に切り替えるボタン) の色を返します。
# Description: 
ThumbColorActivePropertyDescriptions=スイッチがオン/チェックされている場合の「スイッチ」のサム (前後に切り替えるボタン) の色を返します。
# Description: 
Thermometer__EnabledPropertyDescriptions=有効にすると、デバイスは変更をリッスンします。
# Description: 
Thermometer__AvailablePropertyDescriptions=デバイスに温度計コンポーネントをサポートするハードウェアがあるかどうかを指定します。
# Description: 
ThermometerHelpStringComponentPallette=周囲（外部）温度を測定できるセンサー部品です。ほとんどの Android デバイスにはこのセンサーがありません。
# Description: 
ThemePropertyDescriptions=アプリケーションが使用するテーマを設定します。
# Description: 
ThemeProperties=テーマ
# Description: 
Texting__SendMessageMethodDescriptions=メッセージと電話番号が事前に入力された状態で、電話のデフォルトのテキスト メッセージング アプリを起動します。
# Description: 
Texting__PhoneNumberPropertyDescriptions=SendMessage 関数が呼び出されたときにテキスト メッセージを送信する電話番号を設定します。
