# Description: 
AccelerometerSensor__MinimumIntervalPropertyDescriptions=電話が切れるまでの最小間隔
# Description: 
AccelerationChangedEvents=加速度が変化しました
# Description: 
AccelerationChangedEventDescriptions=加速度がX, Y, Z座標のいずれかの方向で変化しました。
# Description: 
AboveRangeEvents=範囲超過
# Description: 
AboveRangeEventEnabledProperties=範囲超過イベントが有効です
# Description: 
AboutScreenPropertyDescriptions=画面に関する情報。システムメニューから「このアプリケーションについて」を選択すると表示されます。アプリについて人々に知らせるために使用します。複数画面アプリでは、各画面に独自のスクリーンについての情報があります。
# Description: 
AboutScreenProperties=スクリーンについて
# Description: Message providing details about starting the wireless connection.
AICompanionMenuItem=AIコンパニオン
# Description: 
Button__FontBoldPropertyDescriptions=設定した場合、ボタンテキストは太字で表示されます。
# Description: 
Button__EnabledPropertyDescriptions=設定した場合、ユーザーはボタンをタップしてアクションを起こすことができます。
# Description: 
Button__ClickEventDescriptions=ユーザーはボタンをタップして離しました。
# Description: 
Button__BackgroundColorPropertyDescriptions=ボタンの背景色を返します
# Description: 
ButtonHelpStringComponentPallette=クリックを検出する機能を持つボタン。外観の多くの部分を変更することができ、クリックが可能かどうか（<code>Enabled</code>）は、デザイナーまたはブロックエディタで変更することができます。
# Description: 
BuildRequestDataMethods=ビルドリクエストデータ
# Description: 
BuildRequestDataMethodDescriptions=名前と値のペアを表す2要素のサブリストのリストを、ポストテキストに渡すのに適した、application/x-www-form-urlencodedメディアタイプとしてフォーマットされた文字列に変換します。
# Description: 
BuildPostDataMethods=ビルドポストデータ
# Description: 
BufferSizePropertyDescriptions=バッファーの大きさをバイト数で返します
# Description: 
BufferSizeProperties=バッファーの大きさ
# Description: 
BoundsMethods=境界
# Description: 
BoundsMethodDescriptions=四角形の外接枠を ((北西) (南東)) の形式で返します。
# Description: 
BoundsChangeEvents=境界の変更
# Description: 
BoundsChangeEventDescriptions=ユーザーがマップをパンニングまたはズームしてマップの境界を変更しました。
# Description: 
BoundingBoxPropertyDescriptions=マップのバウンディングボックスを[[北, 西], [南, 東]]として保存。
# Description: 
BoundingBoxProperties=バウンディング（境界）ボックス
# Description: 
BounceMethods=バウンドする
# Description: 
BottomOfRangePropertyDescriptions=BelowRange、WithinRange、AboveRange イベントで使用される範囲の一番下。
# Description: 
BottomOfRangeProperties=最下位（範囲の下）
# Description: 
BluetoothServer__EnabledPropertyDescriptions=Bluetoothが有効かどうか
# Description: 
BluetoothServer__AvailablePropertyDescriptions=デバイスでBluetoothが利用可能かどうか
# Description: 
BluetoothServerHelpStringComponentPallette=Bluetoothサーバーコンポーネント
# Description: 
BluetoothErrorEventDescriptions=Bluetoothエラーイベントは使用されなくなりました。代わりに、スクリーン.エラーが発生しましたイベントを使用してください。
# Description: 
BluetoothClient__EnabledPropertyDescriptions=Bluetoothが有効かどうか
# Description: 
BluetoothClient__AvailablePropertyDescriptions=デバイスでBluetoothが利用可能かどうか
# Description: 
BluetoothClientPropertyDescriptions=通信に使用するBluetoothクライアントコンポーネント。
# Description: 
BluetoothClientProperties=Bluetooth　クライアント
# Description: 
BluetoothClientHelpStringComponentPallette=Bluetooth クライアント・コンポーネント
# Description: 
BlocksToolkitPropertyDescriptions=画面のサブセットを表すJSON文字列。テンプレートアプリの作成者は、これを使用して、プロジェクトで利用可能なコンポーネント、デザイナープロパティ、およびブロックを制御できます。
# Description: 
BlocksToolkitProperties=ブロックツールキット
# Description: 
BigDefaultTextPropertyDescriptions=チェックを入れると、ハイコントラストモードになります
# Description: 
BigDefaultTextProperties=ビッグデフォルトテキスト
# Description: 
BelowRangeEvents=範囲外
# Description: 
BelowRangeEventEnabledProperties=範囲外イベントが有効
# Description: 
BehaviorPropertyCategory=行動
# Description: 
BeforeSpeakingEvents=話す前
# Description: 
BeforeSpeakingEventDescriptions=スピークが呼び出されたときに発生するイベント。
# Description: 
BeforePickingEvents=ピッキング前
# Description: 
BeforePageLoadEvents=ページのロード前
# Description: 
BeforePageLoadEventDescriptions=ページがロードされると、このイベントが実行されます。
# Description: 
BeforeGettingTextEvents=テキストを取得する前
# Description: 
BeforeGettingTextEventDescriptions=`音声認識`が起動されたときに発生するシンプルなイベント。
# Description: 
BearingToPointMethodDescriptions=マーカーから指定された緯度経度までの方位を、真北からの度数で返します。
# Description: 
BearingToFeatureMethodDescriptions=マーカー（目印）から指定された地図フィーチャーまでの方位を、真北からの度数で返します。線とロイド（重心）パラメータが true の場合、方位は地図フィーチャの中心になります。そうでない場合、方位はマーカー（目印）に最も近いフィーチャ内の点に対して計算されます。
# Description: 
BaudRatePropertyDescriptions=現在の通信速度を返す
# Description: 
BaudRateProperties=通信速度
# Description: 
Barometer__EnabledPropertyDescriptions=もし有効なら、デバイスは変更を聞きます。
# Description: 
Barometer__AvailablePropertyDescriptions=デバイスが気圧計コンポーネントをサポートするハードウェアを持っているかどうかを指定します。
# Description: 
BarometerHelpStringComponentPallette=周囲の気圧を測定できるセンサー部品。
# Description: 
BarcodeScanner__ResultPropertyDescriptions=前回のスキャン結果のテキスト。
# Description: 
BarcodeScannerHelpStringComponentPallette=バーコードスキャナーを使用してバーコードを読み取るためのコンポーネント
# Description: 
BallotQuestionPropertyDescriptions=投票される質問（問題）。
# Description: 
BallotQuestionProperties=バロットに関する質問
# Description: 
BallotOptionsPropertyDescriptions=バロットオプションのリスト。
# Description: 
BallotOptionsProperties=バロットオプション
# Description: 
Ball__ZPropertyDescriptions=’ボール’を他のボールとどのように重ねるか
# Description: 
Ball__YPropertyDescriptions=ボールの垂直座標で、ボールが下に移動するにつれて増加する。原点中心プロパティがtrueの場合、この座標はボールの中心を表し、そうでない場合はボールの上端を表します。
# Description: 
Ball__XPropertyDescriptions=ボールの水平座標で、ボールが右に移動するにつれて大きくなります。原点中心プロパティがtrueの場合、この座標はボールの中心を表し、そうでない場合はボールの左端を表します。
# Description: 
Ball__VisiblePropertyDescriptions=ボールが表示されているかどうか。
# Description: 
Ball__TouchedEventDescriptions=ユーザーが有効化されたボールに触れ、すぐに指を離したときに呼び出されるイベントハンドラーです。指定された x 座標と y 座標は、キャンバスの左上からの相対座標です。
# Description: 
Ball__TouchUpEventDescriptions=ユーザーが有効化されたボールへのタッチを止めたとき（タッチダウンイベントの後に指を離したとき）に呼び出されるイベント ハンドラーです。これは、キャンバスの左上からの相対的なタッチの x 座標と y 座標を提供します。
# Description: 
Ball__TouchDownEventDescriptions=ユーザーが有効化されたボールにタッチし始める（指をボールの上に置いてそのままにしておく）ときに呼び出されるイベントハンドラーです。これは、キャンバスの左上からのタッチの x 座標と y 座標を提供します。
# Description: 
Ball__SpeedPropertyDescriptions=有効な場合の、ボールが間隔ごとに移動するピクセル数。
# Description: 
Ball__RadiusPropertyDescriptions=ボールの端から中心までの距離。
# Description: 
Ball__PointTowardsMethodDescriptions=ボールを指定したスプライト（ボールまたは画像スプライト）の方向に向けます。新しい方位は、2つのスプライトの中心点を結ぶ線と平行になります。
# Description: 
Ball__PointInDirectionMethodDescriptions=座標(x, y)を持つ点に向かってボールのヘディングを設定します。
# Description: 
Ball__PaintColorPropertyDescriptions=ボールの色。
# Description: 
Ball__MoveToPointMethodDescriptions=ボールの原点を、[x-座標, y-座標]としてフォーマットされたリストで指定された座標の位置に移動します。
# Description: 
Ball__MoveToMethodDescriptions=ボールのx座標とy座標を設定します。原点の中心がtrueの場合、ボールの中心がここに配置されます。そうでない場合は、ボールの左上端が指定した座標に配置されます。
# Description: 
Ball__MoveIntoBoundsMethodDescriptions=ボールの一部が枠外にはみ出した場合、ボールを枠内に戻します。ボールの幅が大きすぎてキャンバスに収まらない場合、ボールの左側をキャンバスの左側に揃えます。ボールが高すぎて キャンバスに収まらない場合、ボールの上辺をキャンバスの上辺に揃えます。
# Description: 
Ball__IntervalPropertyDescriptions=ボールの位置が更新される間隔をミリ秒で指定します。例えば、間隔が50で速度が10の場合、50ミリ秒ごとにスプライトはヘディング方向に10ピクセル移動します。
# Description: 
Ball__HeadingPropertyDescriptions=ボールのヘディングを正のX軸より上の角度で返します。0度は画面の右方向、90度は画面の上方向です。
# Description: 
Ball__FlungEventDescriptions=有効化されたボール上でフライングジェスチャー（クイックスワイプ）が行われたときに呼び出されるイベントハンドラーです。これは、フリングの開始位置の x 座標と y 座標（キャンバスの左上からの相対座標）、速度（ピクセル/ミリ秒）、ヘディング（0～360 度）、フリングのベクトルの x 成分と y 成分を提供します。
# Description: 
Ball__EnabledPropertyDescriptions=ボールが動くかどうかをコントロールし、コリジョン、ドラッグ、タッチ、フライングで操作できます。
# Description: 
Ball__EdgeReachedEventDescriptions=ボールが画面の端に達したときに呼び出されるイベントハンドラーです。そのエッジで Bounce （バウンド）が呼ばれると、ボールは到達したエッジから跳ね返ったように見えます。ここでの端は、北(1)、北東(2)、東(3)、南東(4)、南(-1)、南西(-2)、西(-3)、北西(-4)の8方向のいずれかを示す整数で表されます。
# Description: 
Ball__DraggedEventDescriptions=ボールがドラッグされたときに呼び出されるイベントハンドラーです。すべての呼び出しにおいて、開始座標はスクリーンが最初にタッチされた場所であり、"current "座標は現在の線分の終点を表します。ドラッグの最初の呼び出しでは、"previous "座標は開始座標と同じです。MoveToが明示的に呼び出されない限り、ボールはドラッグされたイベントに応じて実際にはどこにも移動しないことに注意してください。スムーズな移動のためには、各座標を初期値と現在値と前回値の差の和に設定する必要があります。
# Description: 
Ball__CollidingWithMethodDescriptions=このボールと渡されたスプライト（ボールまたは画像スプライト）の間に衝突が登録されているかどうかを示します。
# Description: 
Ball__BounceMethodDescriptions=ボールを壁から離れるようにバウンドさせます。通常のバウンドの場合、エッジ引数はエッジリーチが返すものを指定します。
# Description: 
BallHelpStringComponentPallette=<p><code>Canvas</code> 上に配置できる丸い「スプライト」。タッチやドラッグに反応し、他のスプライト (<code>ImageSprite</code> など) と対話できます。 <code>Ball</code>s) と Canvas の端を移動し、そのプロパティ値に従って移動します。</p><p>たとえば、<code>Ball</code> を手前に 4 ピクセル移動させるには、 <code>Canvas</code> の先頭を 500 ミリ秒 (0.5 秒) ごとに表示するには、<code>Speed</code> プロパティを 4 [ピクセル] に設定し、<code>Interval</code> プロパティを 4 [ピクセル] に設定します。 500 [ミリ秒]、<code>Heading</code> プロパティを 90 [度]、<code>Enabled</code> プロパティを <code>True</code> に設定します。</p><p> <code>Ball</code> と <code>ImageSprite</code> の違いは、後者は画像ファイルから外観を取得できるのに対し、<code>Ball</code> の外観は画像ファイルから取得できることです。 <code>PaintColor</code> プロパティと <code>Radius</code> プロパティを変更することによってのみ変更されます。</p>
# Description: 
BackgroundImageinBase64PropertyDescriptions=背景画像をBase64形式で設定します。これにはAPIレベル >= 8が必要です。APIレベルが8未満のデバイスの場合、これを設定すると背景が空になってしまいます。
# Description: 
BackgroundImageinBase64Properties=Base64の背景画像
# Description: 
BackgroundImageProperties=背景の画像
# Description: 
BackgroundColorProperties=背景の色
# Description: 
BackPressedEvents=バックプレス
# Description: 
BackPressedEventDescriptions=端末のバックボタンが押されました。
# Description: 
AzimuthPropertyDescriptions=デバイスの方位角を返します。意味のある値を返すには、センサーが有効になっている必要があります。
# Description: 
AzimuthProperties=アジマス（方位角）
# Description: 
AverageLuxProperties=ルクス平均
# Description: 
AverageLuxPropertyDescriptions=最近測定された10個の光量の平均値（ルクス単位）。
# Description: 
AvailableProvidersPropertyDescriptions=GPSやネットワークなど、利用可能なサービスプロバイダのリストです。この情報はリストとテキスト形式で提供されます。
# Description: 
AvailableProvidersProperties=利用可能なプロバイダー
# Description: 
AvailableProperties=利用可能
# Description: 
AvailableLanguagesPropertyDescriptions=このデバイスで音声の読み上げを使用できる言語のリストです。これらの略語の意味を確認するには、サポートされている言語のAndroid開発者ドキュメントを確認してください。
# Description: 
AvailableLanguagesProperties=利用可能な言語
# Description: 
AvailableCountriesPropertyDescriptions=テキストの読み上げで使用できる、このデバイスで使用可能な国コードのリストです。これらの略語の意味については、サポート言語のAndroid開発者向けドキュメントをご確認ください。
# Description: 
AvailableCountriesProperties=利用可能な国
# Description: 
AuthorizeMethods=許可（オーソライズ）
# Description: 
AuthorizeMethodDescriptions=OAuthプロトコルを使用して、Webブラウザ経由でTwitterにログインするようにユーザーをリダイレクトします。
# Description: 
AskForPermissionMethods=許可を求める（許可申請）
# Description: 
AskForPermissionMethodDescriptions=危険なパーミッションへのアクセス許可をユーザーに求めます。
# Description: 
AppendValueToListMethods=値をリストに追加
# Description: 
AppendValueToListMethodDescriptions=リストの末尾に値をアトミックに追加します。2つのデバイスが同時にこの関数を使用した場合、両方が追加され、データが失われることはありません。
# Description: 
AppendValueMethods=値の追加（付加価値）
# Description: 
AppendValueMethodDescriptions=リストの末尾に値をアトミックに追加します。2つのデバイスが同時にこの関数を使用した場合、両方が追加され、データが失われることはありません。
# Description: 
AppendToFileMethods=ファイルへの追加
# Description: 
AppendToFileMethodDescriptions=ファイルストレージの末尾にテキストを追加し、ファイルが存在しない場合はファイルを作成します。ファイルが書き込まれる場所については、セーブファイルのヘルプを参照してください。
# Description: 
AppearancePropertyCategory=アピアランス（容姿）
# Description: 
AppNamePropertyDescriptions=アプリ名が空白の場合、プロジェクトがビルドされたときにプロジェクトの名前が設定されます。
# Description: 
AppNameProperties=アプリ名
# Description: 
ApiKeyProperties=APIキー
# Description: 
AnimationPropertyDescriptions=これは、画像に少数のモーションタイプを付けることができる限定的なアニメーションの形式です。可能なモーションは、ScrollRightSlow、ScrollRight、ScrollRightFast、ScrollLeftSlow、ScrollLeft、ScrollLeftFast、Stopです。
# Description: 
AnimationProperties=アニメーション
# Description: 
AnglePropertyDescriptions=デバイスのタイルの方向を示す角度を返します。つまり、デバイスの表面を転がるボールが感じる力の方向を示します。
# Description: 
AngleProperties=角度
# Description: 
AnchorVerticalPropertyDescriptions=垂直アライメントプロパティは、マーカーのアンカーをその高さに対してどこに配置するかを制御します。選択肢は以下の通りです： 1 = 上端揃え、2 = 垂直中央揃え、3 = 下端揃えです。
# Description: 
AnchorVerticalProperties=垂直アンカー
# Description: 
AnchorHorizontalPropertyDescriptions=水平アライメントプロパティは、マーカーのアンカーをその幅に対してどの位置に配置するかを制御します。選択肢は以下の通りです： 1 = 左揃え、3 = 水平方向中央揃え、2 = 右揃えです。
# Description: 
AnchorHorizontalProperties=水平アンカー
# Description: 
AltitudePropertyDescriptions=直近で利用可能な高度値（メートル単位）。利用可能な値がない場合は0が返されます。
# Description: 
AltitudeProperties=高度（標高）
# Description: 
AlternateTextPropertyDescriptions=画像がどのように見えるかを説明する説明文。
# Description: 
AlternateTextProperties=別テキスト
# Description: 
AllowCookiesProperties=クッキーを許可する
# Description: 
AllowCookiesPropertyDescriptions=レスポンスのクッキーを保存し、以降のリクエストで使用するかどうか。クッキーはAndroidバージョン2.3以上でのみサポートされています。
# Description: 
AlignVerticalProperties=垂直（縦）
# Description: 
AlignHorizontalProperties=水平に整列する
# Description: 
AirPressurePropertyDescriptions=センサーが利用可能で有効な場合、hPa（millibar）単位の気圧。
# Description: 
AirPressureProperties=気圧
# Description: 
AirPressureChangedEvents=気圧変化
# Description: 
AirPressureChangedEventDescriptions=気圧の変化が検出されたときに呼び出されます（単位はhPa）。
# Description: 
AfterTimeSetEvents=タイムセット後（時間設定後）
# Description: 
AfterTimeSetEventDescriptions=このイベントは、ユーザーがポップアップダイアログで時間を設定したときに実行されます。
# Description: 
AfterTextInputEvents=テキスト入力後
# Description: 
AfterTextInputEventDescriptions=ユーザーがShowTextDialogに応答した後に発生するイベント。
# Description: 
AfterSpeakingEvents=発言後
# Description: 
AfterSpeakingEventDescriptions=メッセージが発言された後に発生するイベント。メッセージを話すことに成功した場合はtrueが返され、失敗した場合はfalseが返されます。
# Description: 
AfterSoundRecordedEvents=録音後
# Description: 
AfterSoundRecordedEventDescriptions=新しく作成されたサウンドの場所を提供します。
# Description: 
AfterSelectingEvents=選択後
# Description: 
AfterSelectingEventDescriptions=ユーザーがドロップダウンリストから項目を選択した後に呼び出されるイベント。
# Description: 
AfterScanEvents=スキャン後
# Description: 
AfterScanEventDescriptions=スキャナが（テキスト）結果を読み取り、その結果を提供することを示します
# Description: 
AfterRecordingEvents=レコーディング後
# Description: 
AfterRecordingEventDescriptions=カメラでビデオが録画されたことを示し、保存されたビデオへの経路を提供します。
# Description: 
AfterPictureEvents=写真の後
# Description: 
AfterPictureEventDescriptions=撮影後に呼び出されます。テキスト引数 `image` は、携帯電話で画像を探すために使用する経路です。
# Description: 
AfterPickingEvents=ピッキング後
# Description: 
AfterGettingTextEvents=テキスト取得後
# Description: 
AfterGettingTextEventDescriptions=スピーチレコナイザー（音声認識）が音声を認識した後に発生するシンプルなイベントです。もし
# Description: 
AfterFileSavedEvents=ファイル保存後
# Description: 
AfterFileSavedEventDescriptions=ファイルの内容が書き込まれたことを示すイベント。
# Description: 
AfterDateSetEvents=アフターデートセット（日付設定後）
# Description: 
AfterDateSetEventDescriptions=ユーザーがダイアログで日付を選択した後に実行されるイベント
# Description: 
AfterChoosingEvents=選択後
# Description: 
AfterChoosingEventDescriptions=ユーザーがShowChooseDialog（選択ダイアログを表示する）を選択した後のイベント。
# Description: 
AfterActivityEvents=アフターアクティビティ（アクティビティ後）
# Description: 
AfterActivityEventDescriptions=このActivityStarter（アクティビティスターター）が戻った後に発生するイベント。
# Description: 
AddressesAndNamesPropertyDescriptions=ペアリングされたBluetoothデバイスのアドレスと名前
# Description: 
AddressesAndNamesProperties=住所と名前
# Description: 
AddYearsMethods=年の追加（加算年数）
# Description: 
AddYearsMethodDescriptions=指定された瞬間から数年後の時間を返します。
# Description: 
AddWeeksMethods=週の追加（追加週間）
# Description: 
AddWeeksMethodDescriptions=戻り値 指定された瞬間から何週間か後の時間における瞬間。
# Description: 
AddSecondsMethods=秒の追加（加算秒数）
# Description: 
AddSecondsMethodDescriptions=指定した瞬間の何秒後かを返します。
# Description: 
AddMonthsMethods=（暦の）月の追加
# Description: 
AddMonthsMethodDescriptions=指定した瞬間の数か月後の時間を返します。
# Description: 
AddMinutesMethods=分の追加（加算分数）
# Description: 
AddMinutesMethodDescriptions=指定した瞬間の数分後の時刻を返します。
# Description: 
AddHoursMethods=時間の追加（加算時間）
# Description: 
AddHoursMethodDescriptions=指定した瞬間の何時間後かを返します。
# Description: 
AddDurationMethods=期間の追加（加算期間）
# Description: 
AddDurationMethodDescriptions=引数で指定した時刻の、ある時間後の瞬間を返します
# Description: 
AddDaysMethods=addDays関数
# Description: 
AddDaysMethodDescriptions=指定した瞬間から数日後の時間を返します。
# Description: 
ActivityStarter__ResultPropertyDescriptions=アクティビティの結果を返します。
# Description: 
ActivityStarterHelpStringComponentPallette=<code>StartActivity</code>メソッドを使用してアクティビティを起動できるコンポーネントです。<p><ul> <li> 別の App Inventor for Android アプリケーションを起動します。ソースコードをダウンロードし、ファイルエクスプローラーやunzipユーティリティを使って「youngandroidproject/project.properties」というファイルを見つけてください。例えば、<code>main=com.gmail.Bitdiddle.Ben.HelloPurr.Screen1</code>のようになります。（最初のコンポーネントはBen.Bitdiddleによって作成されたことを示します。）
# Description: 
ActivityPackagePropertyDescriptions=開始される特定のコンポーネントのパッケージ部分を返します。
# Description: 
ActivityErrorEventDescriptions=ActivityError（アクティビティエラー）イベントは使用されなくなりました。代わりに Screen ErrorOccurred （画面エラー発生）イベントを使用してください。
# Description: 
ActivityPackageProperties=アクティビティパッケージ
# Description: 
ActivityClassPropertyDescriptions=開始される特定のコンポーネントのクラス部分を返します。
# Description: 
ActivityClassProperties=アクティビティクラス
# Description: 
ActivityCanceledEvents=アクティビティキャンセル
# Description: 
ActivityCanceledEventDescriptions=アクティビティがキャンセルされ、ActivityStarter（アクティビティスターター）が戻った場合に発生するイベントです。
# Description: 
ActionPropertyDescriptions=アクティビティを開始するために使用されるアクションを返します。
# Description: 
ActionProperties=アクション
# Description: 
ActionBarPropertyDescriptions=アクションバーのプロパティ
# Description: 
ActionBarProperties=アクションバー
# Description: 
AccuracyPropertyDescriptions=最新の精度をメートル単位で表します。値がない場合は0が返されます。
# Description: 
AccuracyProperties=精度
# Description: 
AcceptConnectionWithUUIDMethods=UUIDで接続を受け入れる
# Description: 
AcceptConnectionWithUUIDMethodDescriptions=特定のUUIDを持つ着信接続を受け入れる。
# Description: 
AcceptConnectionMethods=接続を受け入れる（アクセプトコネクション）
# Description: 
AcceptConnectionMethodDescriptions=シリアルポートプロファイル（SPP）で着信接続を受け入れる。
# Description: 
AccentColorPropertyDescriptions=ハイライトやその他のユーザーインターフェースのアクセントに使われる色です。
# Description: 
AccentColorProperties=アクセントカラー
# Description: 
AccelerometerSensor__LegacyModePropertyDescriptions=このプロパティが追加される前のリリースでは、AccelerometerSensorコンポーネントは、Androidシステムから受信したセンサー値を直接渡していました。ただし、これらの値は、デフォルトが横向きモードのタブレットを補正しないため、MIT App Inventorのプログラマーが補正する必要があります。しかし、携帯電話のようなポートレートモードのデバイスでは、補正をかけると正しくない結果になってしまいます。ランドスケープモードのタブレットを検出し、補正を行うようになりました。ただし、プロジェクトですでに補正が行われている場合は、正しくない結果が得られます。プロジェクトを更新していただくことが望ましいのですが、このプロパティを "true "に設定するだけで、補償コードを無効にすることもできます。注意：このプロパティは将来のリリースで削除される可能性があるため、プロジェクトを更新することをお勧めします。
# Description: 
AccelerometerSensor__EnabledPropertyDescriptions=trueの場合、センサーはイベントを生成する。そうでなければ、デバイスが加速されたり揺さぶられたりしても、イベントは生成されない。
# Description: 
AccelerometerSensor__AvailablePropertyDescriptions=加速度センサーがデバイス上で利用可能かどうかを返します。
# Description: 
AccelerometerSensorHelpStringComponentPallette=揺れを検知し、SI単位(m/s<sup>2</sup>)を使用して3次元で加速度をおおよそ測定できる非可視コンポーネント。コンポーネント：<ul><li> <strong>xAccel</strong>: 0 携帯電話が平らな面に静止しているときはプラス、携帯電話が右に傾いている（左側が盛り上がっている）ときはマイナス、携帯電話が左に傾いている（右側が盛り上がっている）ときはマイナス。</li> <li> <strong>yAccel</strong>: 0  電話機が平らな面に静止しているときはプラス、底面が持ち上がっているときはプラス、上面が持ち上がっているときはマイナスである。</li> <li> <strong>zAccel</strong>: -9.8と同等 (デバイスがディスプレイを上向きにして地面と平行に静止しているときの地球の重力を毎秒メートルで表し、地面に垂直な場合は0、下向きの場合は+9.8。また、重力に逆らって加速させることによっても、その値に影響を与えることができる。</li></ul>
# Description: 
AbsoluteStrengthProperties=絶対強度
# Description: 
AbsoluteStrengthPropertyDescriptions=フィールドの絶対的な強さを示す。
# Description: 
TextToSpeech__PitchPropertyDescriptions=TextToSpeech のピッチを設定します。値は 0 から 2 の間で、値が低いほど合成音声のトーンが低くなり、値が大きいほど合成音声のトーンが高くなります。
# Description: 
TextToSpeech__LanguagePropertyDescriptions=TextToSpeech の言語を設定します。これは実際に話されている言語ではなく、単語の発音方法を変更します。たとえば、言語を に設定し、誰かがフランス語なまりで英語を話しているような音声で英語のテキストを話します。
# Description: 
TextToSpeechHelpStringComponentPallette=TextToSpeech コンポーネントは、指定されたテキストを読み上げます。音声のピッチと速度を設定できます。 <p>言語コードを指定して言語を設定することもできます。これにより、実際に話される言語ではなく、単語の発音が変更されます。たとえば、言語をフランス語に設定して英語のテキストを話すと、フランス語のアクセントで英語 (en) を話しているように聞こえます。</p> <p>国コードを指定して国を指定することもできます。これは発音に影響を与える可能性があります。たとえば、イギリス英語 (GBR) はアメリカ英語 (USA) とは異なって聞こえます。すべての国コードがすべての言語に影響するわけではありません。</p> <p>利用可能な言語と国は特定のデバイスによって異なり、AvailableLanguages プロパティと AvailableCountries プロパティで一覧表示できます。</p>
# Description: 
TextSizePropertyDescriptions=リストビュー項目のテキスト サイズ。
# Description: 
TextProperties=テキスト
# Description: 
TextInputCanceledEventDescriptions=ユーザがテキストダイアログに反応した後で発生するイベント。
# Description: 
TextColorDetailPropertyDescriptions=リストビュー stringItems の DetailText のテキストの色。
# Description: 
TextBox__WidthPropertyDescriptions=TextBox の水平幅をピクセル単位で指定します。
# Description: 
TextBox__WidthPercentPropertyDescriptions=TextBox の水平幅を画面の幅のパーセンテージとして指定します。
# Description: 
TextBox__VisiblePropertyDescriptions=TextBox を画面上に表示するかどうかを指定します。値は TextBox が表示されている場合は true、非表示の場合は false です。
# Description: 
TextBox__TextPropertyDescriptions=テキストボックスの内容を返します。
# Description: 
TextBox__TextColorPropertyDescriptions=テキストの色。デザイナーまたはブロック エディターで名前によって色を選択できます。デフォルトの文字色は黒です。
# Description: 
TextBox__TextAlignmentPropertyDescriptions=テキストを左揃え、中央揃え、または右揃えにするかどうか。デフォルトでは、テキストは左揃えで表示されます。
# Description: 
TextBox__RequestFocusMethodDescriptions=TextBox をアクティブに設定します。
# Description: 
TextBox__NumbersOnlyPropertyDescriptions=true の場合、このテキスト ボックスはキーボード入力として数字のみを受け入れます。数値には、小数点と、オプションで先頭にマイナス記号を含めることができます。これはキーボード入力にのみ適用されます。 NumbersOnly が true の場合でも、[set Text to] を使用して任意のテキストを入力できます。
# Description: 
TextBox__LostFocusEventDescriptions=ユーザーが別のテキスト ボックスに触れた場合など、TextBox が入力用に選択されなくなったときに発生するイベント。
# Description: 
TextBox__HintPropertyDescriptions=ユーザーが入力すべき内容についてのヒントを提供するために、TextBox 内に薄く表示されるテキスト。これは、Text プロパティが空の場合にのみ表示されます。
# Description: 
TextBox__HideKeyboardMethodDescriptions=キーボードを隠します。これが必要なのは、複数行のテキスト ボックスのみです。ユーザーが「完了」キーを押すと、単一行のテキスト ボックスはキーボードを閉じます。
# Description: 
TextBox__HeightPropertyDescriptions=TextBox の垂直の高さをピクセル単位で指定します。
# Description: 
TextBox__HeightPercentPropertyDescriptions=TextBox の垂直の高さを、画面の高さのパーセンテージとして指定します。
# Description: 
TextBox__GotFocusEventDescriptions=ユーザーが TextBox に触れた場合など、TextBox が入力用に選択されたときに発生するイベント。
# Description: 
TextBox__FontTypefacePropertyDescriptions=テキストのフォント。値はデザイナーで変更できます。
# Description: 
TextBox__FontSizePropertyDescriptions=テキストのフォント サイズ。デフォルトでは 14.0 ポイントです。
# Description: 
TextBox__FontItalicPropertyDescriptions=テキストを斜体で表示するかどうか。デフォルトでは、そうではありません。
# Description: 
TextBox__FontBoldPropertyDescriptions=テキストのフォントを太字にするかどうか。デフォルトではそうではありません。
# Description: 
TextBox__EnabledPropertyDescriptions=ユーザーが TextBox にテキストを入力できるかどうか。デフォルトでは、これは true です。
# Description: 
TextBox__BackgroundColorPropertyDescriptions=入力ボックスの背景色。デザイナーまたはブロック エディターで名前によって色を選択できます。デフォルトの背景色は ''default'' (シェーディングされた 3D 外観) です。
# Description: 
TextBoxHelpStringComponentPallette=<p>ユーザーがテキストを入力するためのボックス。初期またはユーザーが入力したテキスト値は、<code>Text</code> プロパティにあります。空白の場合、ボックス内に薄いテキストとして表示される <code>Hint</code> プロパティは、ユーザーに入力内容に関するガイダンスを提供します。</p><p><code>MultiLine</code> > プロパティは、テキストに複数の行を含めることができるかどうかを決定します。単一行のテキスト ボックスの場合、ユーザーが [完了] キーを押すとキーボードが自動的に閉じます。複数行のテキスト ボックスのキーボードを閉じるには、アプリで HideKeyboard メソッドを使用するか、ユーザーによる Back キーの押下に依存する必要があります。</p><p><code> NumbersOnly</code> プロパティは、キーボードが数値入力を受け入れるように制限します。 </p><p>その他のプロパティは、テキスト ボックスの外観 (<code>TextAlignment</code>、<code>BackgroundColor</code> など) とテキスト ボックスを使用できるかどうか (<code>) に影響します。有効</code>)。</p><p>テキスト ボックスは通常、<code>Button</code> コンポーネントとともに使用され、テキストの入力が完了したらユーザーがボタンをクリックします。</p><p >ユーザーが入力したテキストを表示したくない場合は、代わりに <code>PasswordTextBox</code> を使用してください。</p>
# Description: 
TemperaturePropertyDescriptions=センサーが利用可能で有効な場合の温度 (摂氏)
# Description: 
TemperatureProperties=温度
# Description: 
TemperatureChangedEvents=温度が変化しました
# Description: 
TemperatureChangedEventDescriptions=Called when a change is detected in the temperature (in degrees Celsius).
# Description: 
TapThresholdPropertyDescriptions=右、左、上、下のピクセル数を設定します。(タッチではなく) ドラッグとみなされるには、一連のドラッグが開始点から移動する必要があります。
# Description: 
TakePictureMethods=写真を撮る
# Description: 
TagWrittenEventDescriptions=Indicates that a tag has come into range of the NFC sensor and has been written.
# Description: 
TagReadEventDescriptions=Indicates that a new tag has been detected. Currently this is only a plain text tag, as specified in the manifest.
# Description: Text for screen animation choice 'Zoom '
zoomScreenAnimation=ズーム
# Description: 
zoomParams=ズーム
# Description: 
TextingHelpStringComponentPallette=<p><code>SendMessage</code> メソッドが呼び出されたときに、<code>Message</code> プロパティで指定されたテキスト メッセージを <code>PhoneNumber< で指定された電話番号に送信するコンポーネント。 /code> プロパティ。</p> <p><code>ReceivingEnabled</code> プロパティが 1 に設定されている場合、メッセージは<b>受信されません</b>。 <code>ReceivingEnabled</code> が 2 に設定されている場合、メッセージはアプリケーションの実行中にのみ受信されます。最後に、<code>ReceivingEnabled</code> が 3 に設定されている場合、アプリケーションが実行されているときはメッセージが受信され、 アプリケーションが実行されていない<b>ときは</b>メッセージはキューに入れられ、ユーザーに通知が表示されます。 </p> <p>メッセージが到着すると、<code>MessageReceived</code> イベントが発生し、送信番号とメッセージが提供されます。</p> <p> このコンポーネントを含むアプリは、次のような場合でもメッセージを受信します。それはバックグラウンドにあり（つまり、画面に表示されていないとき）、さらに、アプリが実行されていない場合でも、電話にインストールされている限り、アプリは実行されます。アプリがフォアグラウンドにないときに携帯電話がテキスト メッセージを受信すると、携帯電話の通知バーに通知が表示されます。通知を選択するとアプリが起動します。アプリ開発者としては、電話機でテキスト メッセージを無視できるように、ユーザーが ReceivingEnabled を制御できるようにしたいと思うでしょう。</p> <p>GoogleVoiceEnabled プロパティが true の場合、メッセージを送信できます。 Google Voiceを使用したWi-Fi。このオプションを使用するには、ユーザーが Google Voice アカウントを持っており、モバイル Voice アプリが電話にインストールされている必要があります。 Google Voice オプションは、Android 2.0 (Eclair) 以降をサポートする携帯電話でのみ機能します。</p> <p>電話番号 (例: 650-555-1212) を指定するには、<code>PhoneNumber</code> を設定します。プロパティを、指定された数字を含むテキスト文字列に変換します (例: 6505551212)。ダッシュ、ドット、括弧を含めることができますが (例: (650)-555-1212)、無視されます。スペースは含めることはできません。</p> <p>アプリで電話番号を指定するもう 1 つの方法は、<code>PhoneNumberPicker</code> コンポーネントを組み込むことです。これにより、ユーザーは保存されている電話番号から電話番号を選択できるようになります。電話の連絡先にあります。</p>
# Description: 
TimePicker__EnabledPropertyDescriptions=設定されている場合、ユーザーは TimePicker をタップしてアクションを実行できます。
# Description: 
TimePicker__BackgroundColorPropertyDescriptions=ボタンの背景色を返します
# Description: 
TimePickerHelpStringComponentPallette=<p>クリックすると、ユーザーが時間を選択できるポップアップ ダイアログが起動するボタン。</p>
# Description: 
TimeIntervalPropertyDescriptions=センサーが位置情報の更新を送信するために使用する最小時間間隔をミリ秒単位で決定します。ただし、位置の更新は、電話機の位置が実際に変化した場合にのみ受信され、指定された時間間隔の使用は保証されません。たとえば、時間間隔として 1000 が使用されている場合、位置の更新は 1000 ミリ秒より早く実行されることはありませんが、その後はいつでも実行される可能性があります。
# Description: 
ThumbPositionPropertyDescriptions=スライダーのつまみの位置を設定します。この値が MaxValue より大きい場合、MaxValue と同じ値に設定されます。この値が MinValue より小さい場合は、MinValue と同じ値に設定されます。
# Description: 
ThumbEnabledPropertyDescriptions=スライダーのサムを表示するかどうかを設定します。
# Description: 
ThumbColorInactivePropertyDescriptions=スイッチがオフ/チェックされていない場合の「スイッチ」のサム (前後に切り替えるボタン) の色を返します。
# Description: 
ThumbColorActivePropertyDescriptions=スイッチがオン/チェックされている場合の「スイッチ」のサム (前後に切り替えるボタン) の色を返します。
# Description: 
Thermometer__EnabledPropertyDescriptions=有効にすると、デバイスは変更をリッスンします。
# Description: 
Thermometer__AvailablePropertyDescriptions=デバイスに温度計コンポーネントをサポートするハードウェアがあるかどうかを指定します。
# Description: 
ThermometerHelpStringComponentPallette=周囲（外部）温度を測定できるセンサー部品です。ほとんどの Android デバイスにはこのセンサーがありません。
# Description: 
ThemePropertyDescriptions=アプリケーションが使用するテーマを設定します。
# Description: 
ThemeProperties=テーマ
# Description: 
Texting__SendMessageMethodDescriptions=メッセージと電話番号が事前に入力された状態で、電話のデフォルトのテキスト メッセージング アプリを起動します。
# Description: 
Texting__PhoneNumberPropertyDescriptions=SendMessage 関数が呼び出されたときにテキスト メッセージを送信する電話番号を設定します。
# Description: 
GetBatteryCurrentMethodDescriptions=バッテリー電流を取得します。
# Description: 
GetBackgroundPixelColorMethods=背景ピクセルの色を取得する
# Description: 
GetBackgroundPixelColorMethodDescriptions=指定した点の色を取得します。これには背景や描画された点、線、円が含まれますが、スプライトは含まれません。
# Description: 
GenerateLightPropertyDescriptions=光センサーが光を発生させるかどうか。
# Description: 
GenerateLightProperties=光の生成
# Description: 
GenerateColorPropertyDescriptions=センサーによって生成されるべき色。なし、赤、緑、青のみが有効な値です。ディテクトカラー （色検出）プロパティがTrueに設定されている場合、センサーは色を生成しません。
# Description: 
GenerateColorProperties=色の生成
# Description: 
GameIdPropertyDescriptions=このアプリケーションのゲーム名に関して。同じゲームIDで1つ以上のゲームインスタンスを持つことができます。
# Description: 
GameIdProperties=ゲームID
# Description: 
GameClient__WebServiceErrorEventDescriptions=ウェブサーバーとの通信中にエラーが発生したことを示します。
# Description: 
GameClient__UserEmailAddressPropertyDescriptions=このゲームクライアントのプレイヤーIDとして使用されるメールアドレス。現在、ユーザーがゲームに参加するには、手動でこれを設定する必要があります。しかし、このプロパティは将来変更され、自動的に設定されるようになり、ユーザーは変更できなくなります。
# Description: 
GameClient__SendMessageMethodDescriptions=受信者リストのすべての受信者にキー付きメッセージを送信します。メッセージはコンテンツリストで構成されます。
# Description: 
GameClientHelpStringComponentPallette=アプリケーションがオンライン・ゲーム・サーバーと通信する方法を提供します
# Description: Error given when sending fails
GallerySendingError=ギャラリーへのプロジェクト送信エラー
# Description: Error given if login fails for some reason
GalleryLoginError=ギャラリーへのログインエラー
# Description: 
GPSLostEvents=GPS紛失
# Description: 
GPSLostEventDescriptions=このイベントは廃止されました。
# Description: 
GPSAvailableEvents=GPS利用可能
# Description: 
GPSAvailableEventDescriptions=このイベントは廃止されました。
# Description: 
FusiontablesControl__ApiKeyPropertyDescriptions=アプリ開発者のAPIキーのセッター。
# Description: 
FusiontablesControlHelpStringComponentPallette=ｖ説明：\nコンテキスト: FusiontablesControlHelpStringComponentPalletteSource\n<p>Google Fusion Tables と通信する非表示コンポーネント。 Fusion Tables を使用すると、データ テーブルを保存、共有、クエリ、視覚化できます。このコンポーネントを使用すると、これらのテーブルのクエリ、作成、変更が可能になります。</p> <p><font color=red><b>注:</b>&nbsp;Google は、2019 年 12 月 3 日に Fusion Tables サービスを終了しました。コンポーネントは機能しなくなりました。</font></p> <p>このコンポーネントは、<a href="https://developers.google.com/fusiontables/docs/v2/getting_started" target="_blank">Fusion を使用します。テーブル API V2.0</a>。 <p>Fusion Tables を使用するアプリケーションは、Google のサーバーに対して認証する必要があります。これを行うには 2 つの方法があります。最初の方法では、開発者が取得した API キーを使用します (下記を参照)。このアプローチでは、エンドユーザーも Fusion Table にアクセスするためにログインする必要があります。 2 番目の方法は、サービス アカウントを使用することです。この方法では、認証情報と、<a href="https://code.google.com/apis/console/" target="_blank">Google API コンソール<から取得する特別な「サービス アカウント メール アドレス」を作成します。 /a>。次に、Fusion Table Control にサービス アカウントの電子メール アドレスの名前を伝え、秘密キーをアセットとしてアプリケーションにアップロードし、このファイルを指すように キーファイル プロパティを設定します。最後に、デザイナーで「UseServiceAuthentication」チェックボックスをオンにします。サービス アカウントを使用する場合、エンドユーザーは Fusion Tables を使用するためにログインする必要はありません。サービス アカウントがすべてのアクセスを認証します。</p> <p>API キーを取得するには、次の手順に従ってください。</p> <ol> <li><a href="https://code.google.com/apis/console/" に移動します。
# Description: 
FusionTablesStandardErrorMessage=Fusion Tables（フュージョン）クエリでのエラー
# Description: 
FusionTablesDeprecated=このイベントは、<code>RequestFriendTimeline</code> を通じてリクエストされたメッセージが取得されたときに発生します。 <code>timeline</code> パラメータと <code>Timeline</code> プロパティにはリストのリストが含まれます。各サブリストにはフォームのステータス更新 (ユーザー名メッセージ) が含まれます
# Description: 
FunctionCompletedEvents=機能完了
# Description: 
FunctionCompletedEventDescriptions=関数呼び出しが完了したことを示します。
# Description: 
FullScreenPropertyDescriptions=VideoPlayer （ビデオプレイヤー）の動画が現在フルスクリーンモードで表示されているかどうかを返します。
# Description: 
FullScreenProperties=フルスクリーン
# Description: 
FriendTimelinePropertyDescriptions=このプロパティには、フォローされているユーザーの最新メッセージ 20 件が含まれます。最初はリストは空です。これを設定するには、プログラムは次の手順を実行する必要があります。 <ol> <li> <code>Authorize</code> メソッドを呼び出します。</li> <li> <code>IsAuthorized</code> イベントを待ちます。</li> <li> <code>Follow</code> メソッドを 1 つ以上呼び出してフォローするユーザーを指定します。</li> <li> <code>RequestFriendTimeline（リクエストフレンドタイムライン）</code> メソッドを呼び出します。</li> <li> <code>FriendTimelineReceived（フレンドタイムラインの受信）</code> イベントを待ちます。</li> </ol>このプロパティの値はメッセージのリストに設定されます (その後、<code>RequestFriendTimelineフレンドタイムラインのリクエスト< が呼び出されるまでその値が維持されます)。 /コード>。
# Description: 
FriendTimelineReceivedEvents=フレンド タイムライン の受信
# Description: 
FriendTimelineReceivedEventDescriptions=このイベントは、<code>RequestFriendTimeline</code> を通じてリクエストされたメッセージが取得されたときに発生します。 <code>timeline</code> パラメータと <code>Timeline</code> プロパティにはリストのリストが含まれます。各サブリストにはフォームのステータス更新 (ユーザー名メッセージ) が含まれます
# Description: 
FriendTimelineProperties=フレンドタイムライン
# Description: 
FormatTimeMethods=フォーマット時刻
# Description: 
FormatTimeMethodDescriptions=瞬間の時刻を表すテキスト
# Description: 
FormatDateTimeMethods=フォーマット 日付 時間
# Description: 
FormatDateTimeMethodDescriptions=指定したパターンの、ある瞬間の日付と時刻を表すテキストを返します
# Description: 
FormatDateMethods=日付フォーマット
# Description: 
FormatDateMethodDescriptions=指定されたパターンの瞬間の日付を表すテキスト
# Description: 
ForgetLoginMethods=ログイン忘れ
# Description: 
ForgetLoginMethodDescriptions=エンドユーザーのログイン認証情報を忘れます。サービス認証には影響しません
# Description: 
FontTypefaceProperties=フォント書体
# Description: 
FontTypefaceDetailPropertyDescriptions=ラベルのテキストのフォントフェイスをデフォルト、セリフ、サンセリフ、等幅で返します。
# Description: 
FontTypefaceDetailProperties=フォント書体の詳細
# Description: 
FontSizeProperties=フォントサイズ
# Description: 
FontSizeDetailPropertyDescriptions=リストビューの文字列の文字サイズ アイテム.
# Description: 
FontSizeDetailProperties=フォントサイズの詳細
# Description: 
FontItalicProperties=斜体フォント
# Description: 
FontBoldProperties=太字フォント
# Description: 
FollowersReceivedEvents=フォロワー数
# Description: 
FollowersReceivedEventDescriptions=このイベントは、<code>RequestFollowers</code> を通じてリクエストされたログイン ユーザーのフォロワーがすべて取得されたときに発生します。フォロワーのリストは、<code>followers</code> パラメーターまたは <code>Followers</code> プロパティで見つけることができます。
# Description: 
FollowersPropertyDescriptions=このプロパティには、ログインしているユーザーのフォロワーのリストが含まれます。最初はリストは空です。これを設定するには、プログラムは次の手順を実行する必要があります。 <ol> <li> <code>Authorize</code> メソッドを呼び出します。</li> <li> <code>IsAuthorized</code> イベントを待ちます。</li> <li> <code>RequestFollowers</code> メソッドを呼び出します。</li> <li> <code>FollowersReceived</code> イベントを待ちます。</li></ol>このプロパティの値はその後、フォロワーのリストに設定されます (その後 <code>RequestFollowers</code> が呼び出されるまでその値が維持されます)。
# Description: 
FollowersProperties=フォロワー
# Description: 
FollowMethods=フォロー
# Description: 
FollowMethodDescriptions=ユーザーのフォローを開始します。
# Description: 
FollowLinksPropertyDescriptions=WebViewer （ウェブ閲覧者）でリンクがタップされたときに、リンクをたどるかを決定します。リンクをたどる場合、GoBack（戻る）とGoForward（前進）を使用してブラウザの履歴を移動できます。
# Description: 
FollowLinksProperties=リンクをフォローする
# Description: 
FlungEvents=フラング（投げ飛ばす）
# Description: 
FirstRemovedEvents=最初に取り除かれたもの
# Description: 
FirebaseURLPropertyDescriptions=この Firebase（ファイヤーベースDB） の URL を取得します。
# Description: 
FirebaseURLProperties=ファイヤーベースURL
# Description: 
FirebaseTokenPropertyDescriptions=デフォルトの Firebase（ファイヤーベース） のtoken（トークン）を指定します。
# Description: 
FirebaseTokenProperties=ファイヤーベースToken（トークン）
# Description: 
FirebaseErrorEvents=ファイヤーベースエラー
# Description: 
FirebaseErrorEventDescriptions=Firebase （ファイヤーベース）との通信でエラーが発生したことを示します。
# Description: 
FirebaseDB__StoreValueMethodDescriptions=Firebase（ファイヤーベース） に、指定されたタグの下に指定された値を格納するよう依頼します。
# Description: 
FirebaseDB__GotValueEventDescriptions=GetValue（取得値） 要求が成功したことを示します。
# Description: 
FirebaseDB__GetValueMethodDescriptions=GetValue（取得値） は Firebase（ファイヤーベース） に、指定されたタグの下に格納されている値を取得するよう依頼します。タグの下に値が格納されていない場合は、GotValue （得た値）に valueIfTagNotThere（タグがない場合の値） を渡します。
# Description: 
FirebaseDB__FirstRemovedEventDescriptions="RemoveFirst（最初に削除 ） "関数によってトリガーされるイベントです。引数 "value（値） "は、リストの最初にあり、現在削除されているオブジェクトです。
# Description: 
FirebaseDB__DataChangedEventDescriptions=Firebase（ファイヤーベース）のデータが変更されたことを示します。更新されたタグと値でイベントを起動します。
# Description: 
FirebaseDB__ClearTagMethodDescriptions=Firebase（ファイヤーベース）からタグを削除する
# Description: 
FirebaseDBHelpStringComponentPallette=Firebase（ファイヤーベース） と通信して情報を保存・取得する、目に見えないコンポーネントです。
# Description: 
FillScreenMethods=塗りつぶし画面
# Description: 
FillScreenMethodDescriptions=スクリーンを色で塗りつぶす。
# Description: 
FillOpacityPropertyDescriptions=マップフィーチャーの内部の不透明度。
# Description: 
FillOpacityProperties=塗りつぶしの不透明度
# Description: 
FillColorProperties=塗りつぶし色
# Description: 
File__LegacyModePropertyDescriptions=アプリが外部ストレージのディレクトリのルートからファイルにアクセスできるようにします（レガシーモード）。
# Description: 
File__GotTextEventDescriptions=ファイルの内容が読み込まれたことを示すイベントです。
# Description: 
File__DeleteMethodDescriptions=ストレージからファイルを削除します。ファイル名の前に / を付けると、SD カード内の特定のファイルを削除します。例えば、/myFile.txt は /sdcard/myFile.txt というファイルを削除します。ファイルが/で始まらない場合、プログラムのプライベートストレージにあるファイルが削除されます。アセットファイルは削除できないため、//で始まるファイルはエラーとなります。
# Description: 
FileHelpStringComponentPallette=ファイルを保存・取得するための非可視コンポーネントです。このコンポーネントを使用して、デバイスにファイルを書き込んだり、読み込んだりします。デフォルトの動作では、アプリに関連付けられたプライベートデータディレクトリにファイルを書き込みます。コンパニオンは、デバッグ用のパブリックディレクトリにファイルを書き込む特殊なケースです。ファイル コンポーネントがパスとスコープを使用してファイルへのアクセスを管理する方法の詳細については、[詳細情報] リンクを使用してください。
# Description: 
FeaturesProperties=フィーチャー
# Description: 
FeaturesFromGeoJSONPropertyDescriptions=与えられた文字列からフィーチャーのコレクションをロードします。文字列が有効な GeoJSON でない場合、ErrorLoadingFeatureCollection （エラーローディングフィーチャーコレクション）エラーが url = <string> で実行されます。
# Description: 
FeaturesFromGeoJSONProperties=フィーチャーfrom GeoJSON
# Description: 
FeatureStopDragEvents=フィーチャーストップドラッグ
# Description: 
FeatureStopDragEventDescriptions=ユーザーがマップフィーチャのドラッグを停止しました。
# Description: 
FeatureFromDescriptionMethods=説明からのフィーチャー
# Description: 
FeatureStartDragEvents=フィーチャースタートドラッグ
# Description: 
FeatureStartDragEventDescriptions=ユーザーはマップフィーチャーをドラッグし始めました。
# Description: 
FeatureLongClickEvents=フィーチャーロングドラッグ
# Description: 
FeatureLongClickEventDescriptions=ユーザーがマップ機能を長押ししました。
# Description: 
FeatureFromDescriptionMethodDescriptions=フィーチャ記述を App Inventor マップ フィーチャに変換します。ポイントは次のように変換されます
# Description: 
FeatureDragEvents=フィーチャードラッグ
# Description: 
FeatureDragEventDescriptions=ユーザーが、マップフィーチャーをドラッグしました。
# Description: 
FeatureCollection__WidthPropertyDescriptions=FeatureCollection（フィーチャーコレクション） の横幅をピクセル単位で指定します。
# Description: 
FeatureCollection__WidthPercentPropertyDescriptions=FeatureCollection（フィーチャーコレクション）の横幅をスクリーンの横幅に対するパーセンテージで指定します。
# Description: 
FeatureCollection__VisiblePropertyDescriptions=FeatureCollection（フィーチャーコレクション） を画面に表示するかどうかを指定します。FeatureCollectionが表示されている場合はtrue、非表示の場合はfalseとなります。
# Description: 
FeatureCollection__FeaturesPropertyDescriptions=この FeatureCollection （フィーチャーコレクション）に配置されているフィーチャのリストです。このリストには、FeatureFromDescription （説明からのフィーチャー）の呼び出しによって作成されたフィーチャーも含まれます。
# Description: 
FeatureCollection__SourcePropertyDescriptions=feature collection（フィーチャコレクション）の入力に使用されたソース URL を指定します。フィーチャコレクションがURLからロードされなかった場合、これは空文字列になります。
# Description: 
FeatureCollection__HeightPropertyDescriptions=FeatureCollection （フィーチャーコレクション）の垂直方向の高さをピクセル単位で指定します。
# Description: 
FeatureCollection__HeightPercentPropertyDescriptions=FeatureCollection（フィーチャーコレクション） の垂直方向の高さを、スクリーンの高さに対するパーセンテージで指定します。
# Description: 
FeatureCollectionHelpStringComponentPallette=FeatureCollection （フィーチャーコレクション）には、1 つ以上のマップフィーチャがグループとして含まれます。コレクション内のフィーチャで発生したイベントは、コレクションオブジェクトの対応するイベントもトリガします。FeatureCollection は、マップにコンテンツを追加する手段として、外部リソースからロードできます。
# Description: 
FeatureClickEvents=フューチャークリック
# Description: 
FeatureClickEventDescriptions=ユーザーが地図フィーチャーをクリックしました。
# Description: 
ExtrasPropertyDescriptions=アクティビティに追加データとして渡されるキーと値のペアのリストを指定します。
# Description: 
ExtrasProperties=エクストラ
# Description: 
ExtraValuePropertyDescriptions=アクティビティに渡される追加値を返します： 新しいコードでは、代わりにExtras（エクストラ）プロパティを使用してください。
# Description: 
ExtraValueProperties=エクストラバリュー（値）
# Description: 
ExtraKeyPropertyDescriptions=アクティビティに渡される追加キーを返します： 新しいコードでは、Extras（エクストラ）プロパティを代わりに使用してください。
# Description: 
ExtraKeyProperties=エクストラキー
# Description: 
ExtendMovesOutsideCanvasPropertyDescriptions=移動がキャンバスの境界を超えることができるかどうかを決定します。デフォルトは false です。このプロパティは後方互換性のために提供されています。
# Description: 
ExtendMovesOutsideCanvasProperties=キャンバスの外に動きを拡張する
# Description: 
ExistsMethods=存在する
# Description: 
ExistsMethodDescriptions=与えられたスコープにパスが存在するかどうかをテストします。
# Description: 
Ev3UltrasonicSensor__WithinRangeEventEnabledPropertyDescriptions=距離がBottomOfRange（最小）とTopOfRange（最大）の間にあるときにWithinRange（範囲内）イベントを発生させるかどうか。
# Description: 
DatePicker__ImagePropertyDescriptions=ボタンに表示する画像。
# Description: 
DatePicker__FontTypefacePropertyDescriptions=DatePicker（日付を選択する部品） テキストのポイントサイズ。
# Description: 
DatePicker__FontSizePropertyDescriptions=DatePicker（日付を選択する部品） テキストのポイントサイズ。
# Description: 
DatePicker__FontItalicPropertyDescriptions=設定された場合、DatePicker （日付を選択する部品）テキストはイタリック体で表示されます。
# Description: 
DatePicker__FontBoldPropertyDescriptions=設定された場合、DatePicker（日付を選択する部品）テキストは太字で表示されます。
# Description: 
DatePicker__BackgroundColorPropertyDescriptions=ボタンの背景色を返します
# Description: 
DatePickerHelpStringComponentPallette=<p>ボタンをクリックすると、ポップアップダイアログが表示され、ユーザーが日付を選択することができます。</p>
# Description: 
DataUriPropertyDescriptions=アクティビティを開始するために使用されるデータURIを返します。
# Description: 
DataUriProperties=データUrl
# Description: 
DataTypePropertyDescriptions=アクティビティに渡すMIMEタイプを返します。
# Description: 
DataTypeProperties=データタイプ
# Description: 
DataChangedEvents=データ変更
# Description: The label used to indicate cycling navigation.
CyclingNavMethod=サイクリング
# Description: 
CurrentUrlPropertyDescriptions=現在表示されているページのURLです。リンクをたどって新しいページにアクセスした場合、これはホームURLとは異なる可能性があります。
# Description: 
CurrentUrlProperties=現在のUrl
# Description: 
CurrentPageTitlePropertyDescriptions=現在表示されているページのタイトル
# Description: 
CurrentPageTitleProperties=現在のページタイトル
# Description: 
CurrentAddressPropertyDescriptions=現住所のテキスト表現、または「No address available（住所不明）」を提供します。
# Description: 
CurrentAddressProperties=現在の住所
# Description: 
CreateMarkerMethods=マーカーを作成
# Description: 
CreateMarkerMethodDescriptions=指定した緯度と経度に、デフォルトのプロパティを持つ新しいマーカーを作成します。
# Description: 
CreateElementMethods=要素の作成
# Description: 
CreateElementMethodDescriptions=ListView（リスト表示）エントリーを作成する。MainText（メインテキスト）は必須です。DetailTextとImageName（画像名）はオプションです。
# Description: 
CountryPropertyDescriptions=音声生成に使用する国コードです。これは発音に影響します。例えば、イギリス英語（GBR）とアメリカ英語（USA）では発音が異なります。すべての国コードがすべての言語に影響するわけではありません。
# Description: 
CountryProperties=国
# Description: 
CopyFileMethods=コピーファイル
# Description: 
CopyFileMethodDescriptions=最初のファイルの内容を2番目のファイルにコピーします。
# Description: 
ContactUriPropertyDescriptions=デバイス上のコンタクトの位置を指定するURIです。
# Description: 
ContactUriProperties=Uriに連絡
# Description: 
ContactPicker__WidthPropertyDescriptions=ContactPickerの横幅をピクセル単位で指定します。
# Description: 
ContactPicker__WidthPercentPropertyDescriptions=ContactPickerの横幅を画面の横幅に対する割合で指定します。
# Description: 
ContactPicker__VisiblePropertyDescriptions=ContactPickerを画面に表示するかどうかを指定します。ContactPickerが表示されている場合はtrue、非表示の場合はfalseとなります。
# Description: 
ContactPicker__TouchUpEventDescriptions=ContactPicker がリリースされたことを示します。
# Description: 
ContactPicker__TouchDownEventDescriptions=ContactPicker が押し下げられたことを示します。
# Description: 
ContactPicker__TextPropertyDescriptions=ContactPickerに表示するテキスト。
# Description: 
ContactPicker__TextColorPropertyDescriptions=ボタンテキストの色。
# Description: 
ContactPicker__TextAlignmentPropertyDescriptions=左か、中央か、右か。
# Description: 
ContactPicker__ShowFeedbackPropertyDescriptions=画像を背景に持つ ContactPicker に視覚的なフィードバックを表示するかどうかを指定します。
# Description: 
ContactPicker__ShapePropertyDescriptions=`ContactPicker` のスタイルを返します。
# Description: 
ContactPicker__PicturePropertyDescriptions=選択したコンタクトの画像 URI を返します。この URI を使用して、コンタクトの写真やその他のフィールドを取得できます。
# Description: 
ContactPicker__PhoneNumberPropertyDescriptions=選択した連絡先に関連付けられた主電話番号、または連絡先に電話番号が関連付けられていない場合は空文字列を返します。
# Description: 
ContactPicker__OpenMethodDescriptions=ユーザーがクリックしたかのように、ContactPickerを開きます。
# Description: 
ContactPicker__LostFocusEventDescriptions=カーソルがContactPickerから離れ、クリックできなくなったことを示します。
# Description: 
ContactPicker__ImagePropertyDescriptions=ボタンに表示する（される）画像。
# Description: 
ContactPicker__HeightPropertyDescriptions=ContactPickerの垂直方向の高さをピクセル単位で指定します。
# Description: 
ContactPicker__HeightPercentPropertyDescriptions=ContactPickerの垂直方向の高さを、画面の高さに対するパーセンテージで指定します。
# Description: 
ContactPicker__GotFocusEventDescriptions=カーソルがContactPickerの上に移動し、クリックできるようになったことを示します。
# Description: 
ContactPicker__FontTypefacePropertyDescriptions=ContactPicker テキストのフォントファミリー。
# Description: 
ContactPicker__FontSizePropertyDescriptions=ContactPicker テキストのポイントサイズ。
# Description: 
ContactPicker__FontItalicPropertyDescriptions=設定された場合、ContactPickerテキストはイタリック体で表示されます。
# Description: 
ContactPicker__FontBoldPropertyDescriptions=設定すると、ContactPickerのテキストは太字で表示されます。
# Description: 
ContactPicker__EnabledPropertyDescriptions=設定されている場合、ユーザーはContactPickerをタップしてアクションを起こすことができます。
# Description: 
ContactPicker__BeforePickingEventDescriptions=イベント `ContactPicker` がクリックされたとき、またはpicker（ピッカー）が表示されたときに発生するイベントです
# Description: 
ContactPicker__BackgroundColorPropertyDescriptions=ボタンの背景色を返します
# Description: 
ContactPicker__AfterPickingEventDescriptions=`ContactPicker`アクティビティが結果を返し、プロパティが入力された後に発生するイベントです。
# Description: 
ContactPickerHelpStringComponentPallette=ボタンをクリックすると、選択する連絡先のリストが表示されます。ユーザーが選択した後、以下のプロパティが選択したコンタクトに関する情報に設定されます：連絡先の名前 </li> <li> <code>EmailAddress</code>: 連絡先のプライマリ電子メール アドレス </li> <li> <code>ContactUri</code>: 連絡先s デバイス上の URI </li><li> <code>EmailAddressList</code>: 連絡先の電子メール アドレスのリスト </li> <li> <code>PhoneNumber</code>: 連絡先の主電話番号 (以降の Android バージョン)</li> <li> <code>PhoneNumberList</code>: 連絡先の電話番号のリスト (以降の Android バージョン)</li> <li> <code>Picture</code>: 連絡先の画像を含むファイルの名前。<code>Image</code> または < の <code>Picture</code> プロパティ値として使用できます。 code>ImageSprite</code> コンポーネント。</li></ul></p><p>その他のプロパティはボタンの外観に影響します (<code>TextAlignment</code>、<code>BackgroundColor</code>)。 </p><p>ContactPicker コンポーネントは、すべての電話で動作するとは限りません。たとえば、システム 3.0 より前の Android システムでは、電話番号を選択できず、電子メール アドレスのリストには電子メールが 1 つだけ含まれます。
# Description: 
ContactNamePropertyDescriptions=選択した連絡先のフルネーム、または名前がない場合は空文字列を返します。
# Description: 
ContactNameProperties=連絡先（連絡先名）
# Description: 
ConsumerSecretPropertyDescriptions=ConsumerSecret プロパティのゲッターメソッド。
# Description: 
ConsumerSecretProperties=ConsumerSecret
# Description: 
ConsumerKeyPropertyDescriptions=ConsumerKey プロパティのゲッター・メソッドです。
# Description: 
ConsumerKeyProperties=Consumer Key
# Description: 
ConnectionAcceptedEvents=接続を許可
# Description: 
ConnectionAcceptedEventDescriptions=bluetooth接続が受け入れられたことを示します。
# Description: 
ConnectWithUUIDMethods=UUIDと接続
# Description: 
ConnectWithUUIDMethodDescriptions=指定されたアドレスとUUIDを持つBluetoothデバイスに接続します。接続に成功した場合はtrueを返します。
# Description: 
ConnectMethods=接続
# Description: 
ConnectMethodDescriptions=指定されたアドレスとシリアルポートプロファイル（SPP）を持つBluetoothデバイスに接続します。接続に成功した場合は true を返します。
# Description: 
CompletedEvents=完了
# Description: 
ColumnsPropertyDescriptions=Columnsプロパティゲッターメソッド。
# Description: 
ColumnsProperties=COLUMN 関数
# Description: 
ColumnPropertyDescriptions=Column property getter method.（プロパティのゲッターメソッドです。）
# Description: 
ColorRightPropertyDescriptions=親指の右側のスライダーの色。
# Description: 
ColorRightProperties=ColorRight（カラーライト）
# Description: 
ColorLeftPropertyDescriptions=親指の左側にあるスライダーの色。
# Description: 
ColorLeftProperties=ColorLeft（カラーレフト）
# Description: 
ColorChangedEvents=色変更
# Description: 
ColorChangedEventEnabledProperties=ColorChangedEventEnabled（カラーチェンジ・イベント有効）
# Description: 
CollidingWithMethods=CollidingWith（衝突する）
# Description: 
CollidedWithEvents=CollidedWith（と一緒に）
# Description: 
CollidedWithEventDescriptions=2つの有効なスプライト(
# Description: 
CloudDB__StoreValueMethodDescriptions=タグに値を格納します。
# Description: 
CloudDB__GotValueEventDescriptions=であることを示す
# Description: 
CloudDB__GetValueMethodDescriptions=タグの値を取得します。値は返されませんが、値が検索されるとGotValueイベントが発生します。
# Description: 
CloudDB__FirstRemovedEventDescriptions=RemoveFirstFromList "関数（value)"によってトリガーされるイベントです。引数 "関数（value） "は、リストの最初にあり、現在削除されているオブジェクトです。
# Description: 
CloudDB__DataChangedEventDescriptions=CloudDBプロジェクトのデータが変更されたことを示します。`tag`を持つイベントを起動します
# Description: 
CloudDB__ClearTagMethodDescriptions=CloudDBからタグを削除します。
# Description: 
CloudDBHelpStringComponentPallette=インターネットに接続されたデータベースサーバー（Redisソフトウェアを使用）にデータを保存できる、目に見えないコンポーネントです。これにより、アプリのユーザー同士でデータを共有することができます。デフォルトでは、データはMITが管理するサーバーに保存されますが、独自のサーバーをセットアップして実行することもできます。RedisServer "プロパティと "RedisPort "プロパティを設定して、独自のサーバーにアクセスしてください。
# Description: 
CloudDBErrorEvents=CloudDBエラー
# Description: 
CloudDBErrorEventDescriptions=CloudDB Redisサーバーとの通信中にエラーが発生したことを示します。
# Description: 
CloudConnectedMethods=Cloud接続
# Description: 
CloudConnectedMethodDescriptions=ネットワーク上にいてCloudDBサーバーに接続できそうであればTrueを返します。
# Description: 
CloseSerialMethods=シリアルを閉じる
# Description: 
CloseSerialMethodDescriptions=シリアル接続を閉じます。クローズするとtrueを返します。
# Description: 
CloseScreenAnimationPropertyDescriptions=現在の画面を閉じて前の画面に戻るときのアニメーションです。有効なオプションはdefault、fade、zoom、slidehorizontal、slidevertical、noneです
# Description: 
CloseScreenAnimationProperties=CloseScreenAnimation（クローズスクリーンアニメーション）
# Description: 
CloseScreenAnimationMethods=CloseScreenAnimation（クローズスクリーンアニメーション）
# Description: 
ClockHelpStringComponentPallette=<p>携帯電話の内部時計を使用して、瞬間の時間を提供する非可視コンポーネントです。</p> <p>定期的に設定された間隔でタイマーを起動し、時間の計算、操作、および変換を実行できます。使用可能なパターンは空文字列です、 MM/DD/YYYY HH:mm:ss a, or MMM d, yyyyHH:mm. 空文字列は、FormatDateTimeの場合は "MMM d, yyyy HH:mm:ss a"、FormatDateの場合は "MMM d, yyyy "となるデフォルトの書式を提供します。<a すべての可能なフォーマットを見るには、以下を参照してください。href="https://docs.oracle.com/javase/7/docs/api/java/text/SimpleDateFormat.html" _target="_blank">
# Description: 
ClickablePropertyDescriptions=画像をクリック可能にするかどうかを指定します。
# Description: 
ClickableProperties=クリック可能
# Description: 
ClickEvents=クリック
# Description: 
ClearTagMethods=タグのクリア（消去）
# Description: 
ClearMethods=消去
# Description: 
ClearMethodDescriptions=このキャンバスに描かれたものはすべて消去されますが、背景色や画像は消去されません。
# Description: 
ClearLocationsMethods=位置をクリア（消去）
# Description: 
ClearLocationsMethodDescriptions=保存された場所のアクセス許可を消去します。
# Description: 
ClearCookiesMethods=クッキーのクリア（消去）
# Description: 
ClearCachesMethods=キャッシュのクリア（消去）
# Description: 
ClearCachesMethodDescriptions=WebViewのキャッシュをクリア（消去）します。
# Description: 
ClearAllMethods=すべてクリア（すべて消去）
# Description: 
ClearAllMethodDescriptions=データストア全体をクリア（消去）します。
# Description: 
Circle__VisiblePropertyDescriptions=円を画面に表示するかどうかを指定します。コンポーネントが表示されている場合はtrue、非表示の場合はfalseとなります。
# Description: 
Circle__TypePropertyDescriptions=フィーチャのタイプを返します。円の場合、MapFeature.Circle ("Circle")を返します。
# Description: 
Circle__TitlePropertyDescriptions=ユーザーが円をクリックしたときに表示される情報ウィンドウに表示されるタイトル。
# Description: 
Circle__StrokeWidthPropertyDescriptions=円の輪郭を描くストロークの幅。
# Description: 
Circle__StrokeColorPropertyDescriptions=円の輪郭に使われるペイントの色。
# Description: 
Circle__ShowInfoboxMethodDescriptions=円のinfobox （インフォボックス）を表示します。これはEnableInfobox（有効なインフォボックス）がfalseに設定されていてもinfoboxを表示します。
# Description: 
Circle__SetLocationMethodDescriptions=円の中心を設定します。
# Description: 
Circle__RadiusPropertyDescriptions=円の半径（メートル単位）。
# Description: 
Circle__LongitudePropertyDescriptions=円の中心の経度。
# Description: 
Circle__LongClickEventDescriptions=ユーザーが円を長押ししました。このイベントはDragable（ドラッグ）がfalseの場合のみに発生します。
# Description: 
Circle__LatitudePropertyDescriptions=円の中心の緯度。
# Description: 
Circle__FillColorPropertyDescriptions=円を塗りつぶすのに使われるペンキの色。
# Description: 
Circle__EnableInfoboxPropertyDescriptions=ユーザーが円をタップしたときに infobox（インフォボックス）ウィンドウを表示するかどうかを設定します。
# Description: 
Circle__DraggablePropertyDescriptions=Draggable （ドラッグ）プロパティは、ユーザーがサークルを長押しして新しい場所にドラッグできるかどうかを設定するために使用されます。
# Description: 
Circle__DragEventDescriptions=ユーザーは円をドラッグしました。
# Description: 
Circle__DistanceToPointMethodDescriptions=円と緯度経度点間の距離をメートル単位で計算します。
# Description: 
Circle__DescriptionPropertyDescriptions=ユーザーが円をクリックしたときに、表示される情報（ウィンドウに表示されます）の説明です。
# Description: 
Circle__ClickEventDescriptions=ユーザーは円をクリックしました。
# Description: 
CircleHelpStringComponentPallette=円
# Description: 
ChoosingCanceledEvents=選択キャンセル
# Description: 
ChoosingCanceledEventDescriptions=ユーザーがShowChooseDialogをキャンセルしたときに発生するイベントです。
# Description: 
CheckedPropertyDescriptions=ボックスにチェックが入っていればtrue、そうでなければfalse。
# Description: 
CheckedProperties=チェック済み
# Description: 
CheckBox__WidthPropertyDescriptions=CheckBox（チェックボックス）の横幅を、ピクセル単位で指定します。
# Description: 
CheckBox__WidthPercentPropertyDescriptions=CheckBox（チェックボックス）の横幅を、画面の横幅に対するパーセンテージで指定します。
# Description: 
CheckBox__VisiblePropertyDescriptions=CheckBox（チェックボックス）を画面に表示するかどうかを指定します。値は、CheckBoxが表示されている場合はtrue、非表示の場合はfalseになります。
# Description: 
CheckBox__TextPropertyDescriptions=CheckBox（チェックボックス）が表示するテキストを指定します。
# Description: 
CheckBox__TextColorPropertyDescriptions=CheckBox（チェックボックス）のテキスト色をアルファ-赤-緑-青の整数で指定します。
# Description: 
CheckBox__LostFocusEventDescriptions=CheckBox（チェックボックス）がフォーカスされなくなりました。
# Description: 
CheckBox__HeightPropertyDescriptions=CheckBox（チェックボックス）の垂直方向の高さを、ピクセル単位で指定します。
# Description: 
CheckBox__HeightPercentPropertyDescriptions=CheckBox（チェックボックス）の垂直方向の高さを、スクリーンの高さに対するパーセンテージで指定します。
# Description: 
CheckBox__GotFocusEventDescriptions=CheckBox（チェックボックス）がフォーカスされたコンポーネントになりました。
# Description: 
CheckBox__FontTypefacePropertyDescriptions=CheckBox（チェックボックス）のテキストフォント面を指定します。
# Description: 
CheckBox__FontSizePropertyDescriptions=CheckBox（チェックボックス） のテキストフォントサイズを、スケールに依存しないピクセル単位で指定します。
# Description: 
CheckBox__FontItalicPropertyDescriptions=CheckBox （チェックボックス）のテキストをイタリック体にする場合は true を設定します。
# Description: 
CheckBox__FontBoldPropertyDescriptions=CheckBox（チェックボックス） のテキストを太字にする場合は true を設定します。
# Description: 
CheckBox__EnabledPropertyDescriptions=CheckBox （チェックボックス）がアクティブでクリック可能であれば真(true)。
# Description: 
CheckBox__ChangedEventDescriptions=ユーザーはCheckBox（チェックボックス）をタップして離しました。
# Description: 
CheckBox__BackgroundColorPropertyDescriptions=CheckBox（チェックボックス）の背景色をアルファ-赤-緑-青の整数で指定します。
# Description: 
CheckBoxHelpStringComponentPallette=ユーザーがクリックするとイベントが発生するチェックボックスです。外観に影響するプロパティが多数あり、デザイナーまたはブロックエディタで設定できます。
# Description: 
CheckAuthorizedMethods=CheckAuthorized（認証チェック）
# Description: 
CheckAuthorizedMethodDescriptions=すでにアクセス権があるかどうかをチェックし、もしあればIsAuthorizedイベントハンドラを呼び出します。
# Description: 
CharacterEncodingPropertyDescriptions=テキストの送受信時に使用する文字エンコーディングを設定します。デフォルト値は `"UTF-8" です
# Description: 
ChangedEvents=変更
# Description: 
CentroidMethods=重心
# Description: 
CentroidMethodDescriptions=ポリゴンの重心を（緯度経度）のペアとして返します。
# Description: 
CenterMethods=中心
# Description: 
CenterMethodDescriptions=（緯度経度）形式のリストとして矩形の中心を返します。
# Description: 
CenterFromStringPropertyDescriptions=<p>マップの初期中心座標を設定します。値はカンマで区切られた10進数の緯度経度座標の組で指定します。例えば、<code>42.359144, -71.093612</code>のように指定します。</p><p>ブロックコードでは、パフォーマンス上の理由から、このプロパティで使用するために文字列表現に変換するのではなく、数値の緯度と経度でSetCenterを使用することをおすすめします。</p>
# Description: 
CenterFromStringProperties=文字列の中心
# Description: 
Canvas__WidthPropertyDescriptions=キャンバスの横幅を、ピクセル単位で指定します。
# Description: 
Canvas__WidthPercentPropertyDescriptions=キャンバスの水平方向の幅を、スクリーンの幅に対するパーセンテージで指定します。
# Description: 
Canvas__VisiblePropertyDescriptions=キャンバスを画面に表示するかどうかを指定します。キャンバスが表示されている場合はtrue、非表示の場合はfalseとなります。
# Description: 
Canvas__TouchedEventDescriptions=ユーザーがキャンバスにタッチし、すぐに指を離したとき：キャンバスの左上からの相対的なタッチの位置（x,y）を提供します。TouchedAnySpriteは、同じタッチがスプライトにもタッチした場合にtrueになり、そうでない場合はfalseになります。
# Description: 
Canvas__TouchUpEventDescriptions=ユーザーがキャンバスへのタッチを止めたとき（TouchDownイベントの後に指を離したとき）：キャンバスの左上からの相対的なタッチの位置（x,y）を提供します
# Description: 
Canvas__TouchDownEventDescriptions=ユーザーがキャンバスに触れ始めたとき（キャンバスに指を置き、そのままにしたとき）：キャンバスの左上からの相対的なタッチの位置（x,y）を提供します
# Description: 
Canvas__TextAlignmentPropertyDescriptions=DrawText()またはDrawAngle()によって描画されたテキストの、そのコマンドで指定された点に対する配置を決定する：テキストの左の点、テキストの中央の点、またはテキストの右の点。
# Description: 
Canvas__SaveMethodDescriptions=このキャンバスの画像をデバイスの外部ストレージに保存します。エラーが発生した場合は、ScreenのErrorOccurredイベントが呼び出されます。
# Description: 
Canvas__PaintColorPropertyDescriptions=線を引く色
# Description: 
Canvas__HeightPropertyDescriptions=キャンバスの縦の高さを、ピクセル単位で指定します。
# Description: 
Canvas__HeightPercentPropertyDescriptions=キャンバスの垂直方向の高さを、スクリーンの高さに対するパーセンテージで指定します。
# Description: 
Canvas__FontSizePropertyDescriptions=キャンバスに描画されるテキストのフォントサイズ。
# Description: 
Canvas__FlungEventDescriptions=キャンバス上でフライングジェスチャ（クイックスワイプ）が行われたとき：キャンバスの左上からのフライングの開始位置（x,y）を提供します。また、フリングの速度 (ピクセル/ミリ秒) と方位 (0-360 度)、フリングのベクトルの x 速度と y 速度成分も提供します。flungSprite "の値は、スプライトがジェスチャの開始点の近くにあった場合に真になります。
# Description: 
Canvas__DrawPointMethodDescriptions=与えられた座標の点をキャンバスに描画します。
# Description: 
Canvas__DrawLineMethodDescriptions=キャンバス上の指定された座標の間に線を描画します。
# Description: 
Canvas__DrawCircleMethodDescriptions=キャンバス上の指定された座標を中心に、指定された半径の円（塗りつぶし）を描画します。
# Description: 
Canvas__DraggedEventDescriptions=ある点(prevX, prevY)から別の点(x, y)へドラッグしたとき。startX,startYのペアはユーザーが最初に画面に触れた場所を示し、draggedAnySpriteはスプライトがドラッグされているかどうかを示します。
# Description: 
Canvas__BackgroundImagePropertyDescriptions=キャンバスの背景画像を含むファイル名
# Description: 
Canvas__BackgroundColorPropertyDescriptions=キャンバスの背景色。
# Description: 
CanvasHelpStringComponentPallette=<p>2次元のタッチセンサー式長方形パネルで、描画やスプライトの移動ができます。</p> <p><code>背景カラー</code>、<code>ペイントカラー</code>、<code>背景画像</code>、<code>Width</code>、および <code>Height Canvas の </code> は、デザイナーまたはブロック エディターのいずれかで設定できます。<code>Width</code> と <code>Height</code> はピクセル単位で測定され、正の値である必要があります。</p><p>キャンバス上の任意の位置は、(X, Y) のペアとして指定できます。 ) 値。<ul> <li>X はキャンバスの左端からのピクセル数です。</li><li>Y はキャンバスの上端からのピクセル数です。</li>< /ul>.</p> <p>キャンバスまたは <code>Sprite</code> (<code>画像スプライト</code> または <code>Ball</) がいつどこでタッチされたかを知らせるイベントがあります。 code>) がドラッグされました。点、線、円を描画するメソッドもあります。</p>
# Description: 
CanGoForwardMethods=前進
# Description: 
CanGoForwardMethodDescriptions=WebViewer が履歴リストを進むことができる場合に true を返します。
# Description: 
CanGoBackMethods=戻る
# Description: 
CanGoBackMethodDescriptions=WebViewer が履歴リストに戻れる場合に true を返します。
# Description: 
CameraHelpStringComponentPallette=デバイスのカメラを使って写真を撮影するコンポーネントです。写真撮影後、AfterPictureイベントの引数として、写真を含む携帯電話上のファイル名を使用できます。このファイル名は、例えばImageコンポーネントのPictureプロパティを設定するために使用することができます。
# Description: 
CamcorderHelpStringComponentPallette=ビデオが録画されると、AfterRecording イベントの引数として、クリップを含む携帯電話上のファイル名が使用可能になります。ファイル名は、例えばVideoPlayerコンポーネントのsourceプロパティを設定するために使用できます。
# Description: 
CalibrationFailedEvents=キャリブレーション失敗
# Description: 
CalibrationFailedEventDescriptions=このイベントは廃止されました。
# Description: 
CalibrateStrideLengthPropertyDescriptions=このプロパティは廃止されました。
# Description: 
CalibrateStrideLengthProperties=ストライドの長さを調整
# Description: 
BytesAvailableToReceiveMethods=受信可能なバイト数
# Description: 
BytesAvailableToReceiveMethodDescriptions=ブロックせずに受信できるバイト数の推定値を返します
# Description: 
Button__WidthPropertyDescriptions=ボタンの横幅を、ピクセル単位で指定します。
# Description: 
Button__WidthPercentPropertyDescriptions=ボタンの横幅を、スクリーンの横幅に対するパーセンテージで指定します。
# Description: 
Button__VisiblePropertyDescriptions=ボタンを画面に表示するかどうかを指定します。ボタンが表示されている場合はtrue、非表示の場合はfalseとなります。
# Description: 
Button__TouchUpEventDescriptions=ボタンが離されたことを示します。
# Description: 
Button__TouchDownEventDescriptions=ボタンが押されたことを示します。
# Description: 
Button__TextPropertyDescriptions=ボタンに表示するテキスト。
# Description: 
Button__TextColorPropertyDescriptions=ボタンテキスト（ボタンの文字）の色。
# Description: 
Button__TextAlignmentPropertyDescriptions=左か、中央か、右か。
# Description: 
Button__ShowFeedbackPropertyDescriptions=背景として画像を持つボタンに対して、ビジュアルフィードバックを表示するかどうかを指定します。
# Description: 
Button__ShapePropertyDescriptions=`ボタン`のスタイルを返します。
# Description: 
Button__LostFocusEventDescriptions=カーソルがボタンから離れ、クリックできなくなったことを示します。
# Description: 
Button__LongClickEventDescriptions=ユーザーはボタンを押したままでした（押し続けました）。
# Description: 
Button__ImagePropertyDescriptions=ボタンに表示する画像。
# Description: 
Button__HeightPropertyDescriptions=ボタンの垂直方向の高さを、ピクセル単位で指定します。
# Description: 
Button__HeightPercentPropertyDescriptions=ボタンの垂直方向の高さを、スクリーンの高さに対するパーセンテージで指定します。
# Description: 
Button__GotFocusEventDescriptions=カーソルがボタンの上に移動し、クリックできるようになったことを示します。
# Description: 
Button__FontTypefacePropertyDescriptions=ボタンテキストのフォントファミリー。
# Description: 
Button__FontSizePropertyDescriptions=ボタンテキストのポイントサイズ。
# Description: 
Button__FontItalicPropertyDescriptions=設定した場合、ボタンテキストはイタリック体で表示されます。
# Description: 
Ev3UltrasonicSensor__WithinRangeEventDescriptions=検出された距離が範囲内に入ったときに呼び出されます。
# Description: 
Ev3UltrasonicSensor__BelowRangeEventEnabledPropertyDescriptions=距離がBottomOfRange（最下位）以下になったときにBelowRange（範囲以下）イベントを発生させるかどうか。
# Description: 
Ev3UltrasonicSensor__BelowRangeEventDescriptions=検出された距離が範囲を下回ったときに呼び出されます。
# Description: 
Ev3UltrasonicSensor__AboveRangeEventEnabledPropertyDescriptions=距離がTopOfRange（最大）を超えたときにAboveRange（上記範囲）イベントを発生させるかどうか。
# Description: 
Ev3UltrasonicSensor__AboveRangeEventDescriptions=検出された距離が範囲を超えたときに呼び出されます。
# Description: 
Ev3UltrasonicSensorHelpStringComponentPallette=LEGO MINDSTORMS EV3ロボットの超音波センサーに高レベルのインターフェースを提供するコンポーネント。
# Description: 
Ev3UI__DrawPointMethodDescriptions=スクリーン上に点を描く。
# Description: 
Ev3UI__DrawLineMethodDescriptions=スクリーンに線を引く。
# Description: 
Ev3UI__DrawCircleMethodDescriptions=スクリーンに円を描く。
# Description: 
Ev3UIHelpStringComponentPallette=LEGO MINDSTORMS EV3ロボットに高レベルのインターフェースを提供するコンポーネントで、EV3の画面にグラフを描画する機能を持ちます。
# Description: 
Ev3TouchSensor__ReleasedEventDescriptions=タッチセンサーが押されたときに呼び出されます。
# Description: 
Ev3TouchSensor__PressedEventEnabledPropertyDescriptions=タッチセンサーが押されたときにPressed（押された）イベントを発生させるかどうかを指定します。
# Description: 
Ev3TouchSensor__PressedEventDescriptions=タッチセンサーが押されたときに呼び出されます。
# Description: 
Ev3TouchSensorHelpStringComponentPallette=LEGO MINDSTORMS EV3ロボットのタッチセンサーに高レベルのインターフェースを提供するコンポーネント。
# Description: 
Ev3SoundHelpStringComponentPallette=LEGO MINDSTORMS EV3ロボットのサウンド機能への高レベルインターフェースを提供するコンポーネント。
# Description: 
Ev3Motors__WheelDiameterPropertyDescriptions=モーターに取り付ける車輪の直径を指定します。
# Description: 
Ev3Motors__StopMethodDescriptions=ロボットのモーターを止める。
# Description: 
Ev3Motors__StopBeforeDisconnectPropertyDescriptions=切り離す前にモーターを停止させるかどうか。
# Description: 
Ev3MotorsHelpStringComponentPallette=LEGO MINDSTORMS EV3ロボットにハイレベルとローレベルの両方のインターフェイスを提供するコンポーネントで、モーターを制御できる機能を備えています。
# Description: 
Ev3GyroSensorHelpStringComponentPallette=LEGO MINDSTORMS EV3ロボットのジャイロセンサーに高レベルのインターフェースを提供するコンポーネント。
# Description: 
Ev3Commands__KeepAliveMethodDescriptions=EV3ブリックを一定時間シャットダウンしないでください。
# Description: 
Ev3Commands__GetFirmwareVersionMethodDescriptions=EV3のファームウェアバージョンを取得します。
# Description: 
Ev3CommandsHelpStringComponentPallette=LEGO MINDSTORMS EV3ロボットに低レベルのインターフェースを提供するコンポーネントで、EV3ロボットにシステムコマンドやダイレクトコマンドを送信する機能を持ちます。
# Description: 
Ev3ColorSensor__WithinRangeEventEnabledPropertyDescriptions=光量がBottomOfRange（最小）とTopOfRange（最大）の間にあるときにWithinRange（範囲内）イベントを発生させるかどうか。
# Description: 
Ev3ColorSensor__WithinRangeEventDescriptions=光量が範囲内になりました。
# Description: 
Ev3ColorSensor__GetLightLevelMethodDescriptions=光量をパーセントで返し、光量が読み取れない場合は-1を返します。
# Description: 
Ev3ColorSensor__ColorChangedEventEnabledPropertyDescriptions=Modeプロパティが "color（色） "に設定され、検出された色が変化したときにColorChanged（色変更）イベントを発生させるかどうか。
# Description: 
Ev3ColorSensor__ColorChangedEventDescriptions=検出された色が変更されたときに呼び出されます。ColorChanged（色変更）イベントは、Modeプロパティが "color（色） "に設定され、ColorChangedEventEnabled（色変更イベント有効）プロパティがTrueに設定されている場合に発生します。
# Description: 
Ev3ColorSensor__BelowRangeEventEnabledPropertyDescriptions=光量がBottomOfRange（上記範囲）以下になったときにBelowRange（範囲以下）イベントを発生させるかどうか。
# Description: 
Ev3ColorSensor__BelowRangeEventDescriptions=光量が範囲を下回りました。
# Description: 
Ev3ColorSensor__AboveRangeEventEnabledPropertyDescriptions=光量がTopOfRange（最大）を超えたときにAboveRange（上記範囲）イベントを発生させるかどうか。
# Description: 
Ev3ColorSensor__AboveRangeEventDescriptions=光量が範囲を超えました。
# Description: 
Ev3ColorSensorHelpStringComponentPallette=LEGO MINDSTORMS EV3ロボットのカラーセンサーに高レベルのインターフェースを提供するコンポーネントです。
# Description: 
ErrorOccurredEvents=エラー発生
# Description: 
EndLongitudePropertyDescriptions=終了地点の経度。
# Description: 
EndLongitudeProperties=終点経度
# Description: 
EndLocationPropertyDescriptions=終了地点を設定する。
# Description: 
EndLocationProperties=終了位置
# Description: 
EndLatitudePropertyDescriptions=終了地点の緯度。
# Description: 
EndLatitudeProperties=終点緯度
# Description: 
EnabledProperties=有効
# Description: 
EnableZoomPropertyDescriptions=ユーザーがタッチジェスチャを使用してマップをズームできるかどうかを設定します。この値は、ユーザーが <a href="#Map.ShowZoom">ShowZoom</a> によって提供されるズーム コントロールを使用してズームできるかどうかには影響しません。
# Description: 
EnableZoomProperties=ズームを有効にする
# Description: 
EnableSpeedRegulationPropertyDescriptions=モータの回転を一定速度に保つかを指定します。
# Description: 
EnableSpeedRegulationProperties=速度規制を有効にする
# Description: 
EnableRotationPropertyDescriptions=ユーザーの向きに応じて地図を回転できるようにします。
# Description: 
EnableRotationProperties=回転を有効にする
# Description: 
EnablePanPropertyDescriptions=マップの2本指パンニング機能を有効にする
# Description: 
EnablePanProperties=パンの有効化
# Description: 
EnableInfoboxProperties=有効化インフォボックス
# Description: 
EmailPicker__WidthPropertyDescriptions=Eメールピッカーの横幅をピクセル単位で指定します。
# Description: 
EmailPicker__WidthPercentPropertyDescriptions=Eメールピッカーの横幅を画面の横幅に対するパーセンテージで指定します。
# Description: 
EmailPicker__VisiblePropertyDescriptions=Eメールピッカーを画面に表示するかどうかを指定します。値は、Eメールピッカーが表示されている場合はtrue、非表示の場合はfalseになります。
# Description: 
EmailPicker__TextPropertyDescriptions=テキストボックスの内容を返します。
# Description: 
EmailPicker__TextColorPropertyDescriptions=テキストの色についてです。デザイナーまたはブロックエディターで色を選択できます。デフォルトのテキスト色は黒です。
# Description: 
EmailPicker__TextAlignmentPropertyDescriptions=テキストを左寄せにするか、中央寄せにするか、右寄せにするかに関してです。デフォルトでは、テキストは左寄せになります。
# Description: 
EmailPicker__RequestFocusMethodDescriptions=Eメールピッカーをアクティブに設定します。
# Description: 
EmailPicker__LostFocusEventDescriptions=ユーザーが別のテキストボックスをタッチした場合など、Eメールピッカーが入力のために選択されなくなったときに発生するイベントです。
# Description: 
EmailPicker__HintPropertyDescriptions=ユーザーが何を入力すべきかのヒントを提供するために、Eメールピッカーにかすかに表示されるべきテキストです。これは、テキストプロパティが空の場合にのみ表示されます。
# Description: 
EmailPicker__HeightPropertyDescriptions=Eメールピッカーの垂直方向の高さをピクセル単位で指定します。
# Description: 
EmailPicker__HeightPercentPropertyDescriptions=Eメールピッカーの垂直方向の高さを、画面の高さに対するパーセンテージで指定します。
# Description: 
EmailPicker__GotFocusEventDescriptions=ユーザーが `Eメールピッカー` に触れるなどして入力が選択されたときに発生するイベントです。
# Description: 
EmailPicker__FontTypefacePropertyDescriptions=テキストのフォントに関してです。この値はデザイナーで変更できます。
# Description: 
EmailPicker__FontSizePropertyDescriptions=テキストのフォントサイズに関してです。デフォルトでは14.0ポイントです。
# Description: 
EmailPicker__FontItalicPropertyDescriptions=テキストをイタリック体で表示するかどうかに関してです。デフォルトでは表示されません。
# Description: 
EmailPicker__FontBoldPropertyDescriptions=テキストのフォントを太字にするかどうかに関してです。デフォルトでは太字ではありません。
# Description: 
EmailPicker__EnabledPropertyDescriptions=ユーザーがEメールピッカーにテキストを入力できるかどうかに関してです。デフォルトでは、これはtrueです。
# Description: 
EmailPicker__BackgroundColorPropertyDescriptions=入力ボックスの背景色についてです。デザイナーまたはブロックエディタで色を選択できます。デフォルトの背景色は''default''（陰影のある立体的な色）です。
# Description: 
EmailPickerHelpStringComponentPallette=Eメールピッカーはテキスト ボックスの一種です。ユーザーが連絡先の名前または電子メール アドレスの入力を開始すると、電話機には入力を完了する選択肢のドロップダウン メニューが表示されます。連絡先の数が多い場合、ドロップダウンが表示されるまでに数秒かかることがあり、一致の計算中に中間結果が表示されることがあります。 <p>テキスト ボックスの最初の内容とユーザー入力後の内容<は、<code>Text</code> プロパティにあります。 <code>Text</code> プロパティが最初は空の場合、<code>Hint</code> プロパティの内容がユーザーへのヒントとしてテキスト ボックスに薄く表示されます。</p> <p>他のプロパティは、テキスト ボックスの外観 (<code>TextAlignment</code>、<code>BackgroundColor</code> など) とテキスト ボックスを使用できるかどうか (<code>Enabled</code>) に影響します。 p><p>このようなテキスト ボックスは通常、<code>Button</code> コンポーネントとともに使用され、テキストの入力が完了したらユーザーがボタンをクリックします。
# Description: 
EmailAddressPropertyDescriptions=選択した連絡先の主メールアドレス、またはメールアドレスが利用できない場合は空の文字列を返します。
# Description: 
EmailAddressProperties=Eメールアドレス
# Description: 
EmailAddressListPropertyDescriptions=選択した連絡先に関連するメールアドレスのリストを返します。
# Description: 
EmailAddressListProperties=Eメールアドレスリスト
# Description: 
ElementsProperties=要素
# Description: 
ElementsFromStringProperties=文字列から要素
# Description: 
ElapsedTimePropertyDescriptions=歩数計を開始してからの経過時間（ミリ秒）。
# Description: 
ElapsedTimeProperties=経過時間
# Description: 
EdgeReachedEvents=到達したエッジ
# Description: 
EastLongitudePropertyDescriptions=長方形の東端を、本初子午線から東に10進法で示します。
# Description: 
EastLongitudeProperties=東経経度
# Description: 
DurationToWeeksMethods=継続時間（週数）
# Description: 
DurationToWeeksMethodDescriptions=期間を週数に変更します。
# Description: 
DurationToSecondsMethods=継続時間（秒）
# Description: 
DurationToSecondsMethodDescriptions=継続時間を秒数に変換します。
# Description: 
DurationToMinutesMethods=所要時間（分）
# Description: 
DurationToMinutesMethodDescriptions=継続時間を分単位に変換します。
# Description: 
DurationToHoursMethods=所要時間（時間）
# Description: 
DurationToHoursMethodDescriptions=継続時間を時間数に変換します。
# Description: 
DurationToDaysMethods=所要時間（日数）
# Description: 
DurationToDaysMethodDescriptions=期間を日数に変換します。
# Description: 
DurationMethods=持続時間
# Description: 
DurationMethodDescriptions=インスタンス間の経過ミリ秒である持続期間を返します。
# Description: The label used to indicate driving navigation.
DrivingNavMethod=ドライビング
# Description: 
DriveMotorsPropertyDescriptions=駆動に使用されるモーターポート：左車輪のモーターポート、右車輪のモーターポートの順。
# Description: 
DriveMotorsProperties=駆動モーター
# Description: 
DrawTextMethods=テキストを描く
# Description: 
DrawTextMethodDescriptions=フォントサイズとテキストの配置プロパティの値を使用して、指定された座標に相対的に指定されたテキストを描画します。
# Description: 
DrawTextAtAngleMethods=テキストを斜めに描く
# Description: 
DrawTextAtAngleMethodDescriptions=フォントサイズとテキストの配置プロパティの値を使用して、指定された座標から指定された角度で指定されたテキストを描画します。
# Description: 
DrawShapeMethods=図形を描く
# Description: 
DrawShapeMethodDescriptions=pointList （ポイントリスト）は、座標を表す 2 つの番号を持つサブリストを含むリストでなければなりません。例えば ((x1 y1) (x2 y2) (x3 y3)) fill が true の場合、図形は塗りつぶされます。
# Description: 
DrawRectMethods=長方形を描く
# Description: 
DrawRectMethodDescriptions=スクリーンに長方形を描く。
# Description: 
DrawPointMethods=ポイント（点）を描く
# Description: 
DrawLineMethods=線を描く
# Description: 
DrawIconMethods=アイコンを描く
# Description: 
DrawIconMethodDescriptions=画面上に内蔵アイコンを描画します。
# Description: 
DrawArcMethods=円弧を描く
# Description: 
DrawCircleMethods=円を描く
# Description: 
DrawArcMethodDescriptions=キャンバス上に円弧を描画します。指定した楕円（左、上、右、下で指定）から円弧を描画します。開始角度は、右に向かうときは0、時計回りに回転するときは大きくなります。useCenter（中心を使用） が true の場合、円弧の代わりにセクターが描画されます。fillがtrueの場合、輪郭だけでなく、塗りつぶされた円弧（またはセクター）が描画されます。
# Description: 
DraggedEvents=ドラッグされた
# Description: 
DraggableProperties=ドラッグ可能
# Description: 
DragEvents=ドラッグ
# Description: 
DownloadFileMethods=ダウンロードファイル
# Description: 
DownloadFileMethodDescriptions=ロボットにファイルをダウンロードします。
# Description: 
DoubleTapAtPointEvents=ポイントでダブルタップ
# Description: 
DoubleTapAtPointEventDescriptions=ユーザがマップ上のポイントをダブルタップしました。ズーム・ジェスチャーが有効で、マップのズーム・レベルが最大でない場合、このイベントに続いて ZoomChanged（ズーム変更） イベントが発生します。
# Description: 
DoScanMethods=スキャンを実行する
# Description: 
DoScanMethodDescriptions=カメラを使ってバーコードのスキャンを開始します。スキャンが完了すると、AfterScan（アフタースキャン）イベントが発生します。
# Description: 
DoQueryMethods=クエリを実行する
# Description: 
DoQueryMethodDescriptions=非推奨。このブロックは2012年末をもって非推奨となりました。SendQueryを使用してください。
# Description: 
DistanceToPointMethods=ポイント（点）までの距離
# Description: 
DistanceToFeatureMethods=フィーチャーまでの距離
# Description: 
DistanceToFeatureMethodDescriptions=2つの地図フィーチャ間の距離をメートル単位で計算します。
# Description: 
DistanceProperties=距離
# Description: 
DistanceIntervalPropertyDescriptions=センサーが位置情報の更新を送信するための最小距離間隔をメートル単位で指定します。例えば、これを 5 に設定した場合、センサーは 5 メートルを通過した後にのみ LocationChanged （位置変更）イベントを発生します。しかし、センサーは正確に距離間隔で更新を受信することを保証しません。例えば、イベントを発生させるのに5メートル以上かかるかもしれないなど。
# Description: 
DistanceIntervalProperties=距離間隔
# Description: 
DisplayDropdownMethods=ドロップダウンの表示
# Description: 
DisplayDropdownMethodDescriptions=ユーザーがスピナーをクリックしたときと同じ動作をします。
# Description: 
DismissProgressDialogMethods=ProgressDialog（プログレスダイアログ）の解除
# Description: 
DismissProgressDialogMethodDescriptions=以前に表示されたProgressDialog（プログレスダイアログ）ボックスを解除します
# Description: 
DisconnectOnErrorPropertyDescriptions=エラーが発生した場合、BluetoothClientを自動的に切断します。
# Description: 
DisconnectOnErrorProperties=接続エラー
# Description: 
DisconnectMethods=未接続
# Description: 
DisconnectMethodDescriptions=接続されているBluetooth機器との接続を解除します。
# Description: 
DirectMessagesReceivedEvents=ダイレクトメッセージの受信
# Description: 
DirectMessagesReceivedEventDescriptions=このイベントは、<code>RequestDirectMessages</code> を通じてリクエストされた最近のメッセージが取得されたときに発生します。メッセージのリストは、<code>messages</code> パラメーターまたは <code>Messages</code> プロパティで見つけることができます。
# Description: 
DirectMessagesPropertyDescriptions=このプロパティには、ログインしているユーザーについて言及した最新のメッセージのリストが含まれています。最初はリストは空です。これを設定するには、プログラムは次の手順を実行する必要があります。 <ol> <li> <code>Authorize</code> メソッドを呼び出します。</li> <li> <code>Authorized</code> イベントを待ちます。</li> <li> <code>RequestDirectMessages</code> メソッドを呼び出します。</li> <li> <code>DirectMessagesReceived</code> イベントを待ちます。</li></ol>このプロパティの値は、取得されたダイレクト メッセージのリストに設定されます (その後、<code>RequestDirectMessages</code> が呼び出されるまでその値が維持されます)。
# Description: 
DirectMessagesProperties=ダイレクトメッセージ
# Description: 
DirectMessageMethods=ダイレクトメッセージ
# Description: 
DirectMessageMethodDescriptions=これにより、指定されたユーザーにプライベート メッセージが送信されます。メッセージが 160 文字を超える場合は切り詰められます。 <p><u>要件</u>: これは、ユーザーが Twitter に正常にログインしたことを示します <code>IsAuthorized</code> イベントが発生した後にのみ呼び出す必要があります。</p>
# Description: 
DeveloperBucketPropertyDescriptions=Firebase（ファイヤーベース）の開発者固有のパスを指定します。
# Description: 
DeveloperBucketProperties=開発者バケット
# Description: 
DetectColorPropertyDescriptions=センサーが色と光のどちらを検出するか。Trueはセンサーが色を検出することを示し、Falseはセンサーが光を検出することを示します。DetectColorプロパティがTrueに設定されている場合、BelowRange、WithinRange、AboveRangeイベントは発生せず、センサーは色を生成しません。DetectColorプロパティがFalseに設定されている場合、ColorChangedイベントは発生しません。
# Description: 
DetectColorProperties=色の検出
# Description: 
DescriptionProperties=説明
# Description: 
DelimiterBytePropertyDescriptions=ReceiveText（受信テキスト）、ReceiveSignedBytes（受信サイン付きバイト数）、ReceiveUnsignedBytes（受信符号なしバイト数）を呼び出す際に、numberOfBytesパラメータに負の数を渡す場合に使用する区切りバイトを設定します。これらの関数は、ここで指定した値になるまでバイトの読み込みを続けます。デフォルトの区切り文字は0（nullバイト）です。
# Description: 
DelimiterByteProperties=Delimiterバイト
# Description: 
DeleteMethods=消去
# Description: 
DeleteFileMethods=デフォルトファイル
# Description: 
DeleteFileMethodDescriptions=ロボット上のファイルを削除します。
# Description: 
DefaultURLPropertyDescriptions=デフォルトURLのプロパティ
# Description: 
DefaultURLProperties=デフォルトURL
# Description: 
DefaultScopePropertyDescriptions=ファイルコンポーネントを使用してアクセスされるファイルのデフォルトのスコープ（範囲）を指定します。Appスコープは、ほとんどのアプリで使えるはずです。レガシーモードは、アプリのファイルアクセスに関するAndroidの新しい制約より前のアプリに使用できます。
# Description: 
DefaultScopeProperties=デフォルトスコープ（デフォルト範囲）
# Description: 
DefaultRedisServerProperties=デフォルトのRedisサーバー
# Description: 
DefaultRedisServerPropertyDescriptions=使用するデフォルトのRedisサーバー。
# Description: 
DefaultFileScopePropertyDescriptions=コンポーネントがファイルにアクセスするときに使用するデフォルトのスコープ（範囲）を指定します。ただし
# Description: 
DefaultFileScopeProperties=デフォルトファイルス範囲
# Description: 
DeAuthorizeMethods=認可取り消し
# Description: 
DeAuthorizeMethodDescriptions=実行中のアプリのインスタンスからTwitterの認証を削除します
# Description: 
DayPropertyDescriptions=DatePicker （日付を選択する部品）を使用して最後に選択された月の日。
# Description: 
DayProperties=日
# Description: 
DayOfMonthMethods=月日
# Description: 
DayOfMonthMethodDescriptions=月日（1-31）をインスタントから返します。
# Description: 
DatePicker__WidthPropertyDescriptions=DatePicker（日付を選択する部品）の横幅をピクセル単位で指定します。
# Description: 
DatePicker__WidthPercentPropertyDescriptions=DatePicker（日付を選択する部品）日付を選択する部品の水平方向の幅を、画面の幅に対するパーセンテージで指定します。
# Description: 
DatePicker__VisiblePropertyDescriptions=DatePicker（日付を選択する部品）を画面に表示するかどうかを指定します。DatePicker（日付を選択する部品）が表示されている場合はtrue、非表示の場合はfalseとなります。
# Description: 
DatePicker__TouchUpEventDescriptions=DatePicker （日付を選択する部品）がリリースされたことを示します。
# Description: 
DatePicker__ShowFeedbackPropertyDescriptions=画像を背景に持つ DatePicker（日付を選択する部品） に視覚的なフィードバックを表示するかどうかを指定します。
# Description: 
DatePicker__ShapePropertyDescriptions=`DatePicker（日付を選択する部品）`のスタイルを返します。
# Description: 
DatePicker__LaunchPickerMethodDescriptions=DatePicker（日付を選択する部品）ダイアログを起動します。
# Description: 
DatePicker__HeightPropertyDescriptions=DatePicker（日付を選択する部品） の垂直方向の高さをピクセル単位で指定します。
# Description: 
DatePicker__EnabledPropertyDescriptions=設定されている場合、ユーザはDatePicker（日付を選択する部品）をタップしてアクションを起こすことができます。
# Description: 
DatePicker__HeightPercentPropertyDescriptions=DatePicker（日付を選択する部品）の垂直方向の高さを、画面の高さに対するパーセンテージで指定します。
# Description: 
DatePicker__GotFocusEventDescriptions=カーソルがDatePicker（日付を選択する部品）の上に移動し、クリックできるようになったことを示します。
# Description: 
DatePicker__InstantPropertyDescriptions=DatePicker（日付を選択する部品） を使用して最後に選択された時点の日付。
# Description: 
DatePicker__TouchDownEventDescriptions=DatePicker（日付を選択する部品） が押されたことを示します。
# Description: 
DatePicker__TextPropertyDescriptions=DatePicker（日付を選択する部品）に表示するテキスト。
# Description: 
DatePicker__TextColorPropertyDescriptions=ボタンテキストの色。
# Description: 
DatePicker__TextAlignmentPropertyDescriptions=左か、中央か、右か。
# Description: 
DatePicker__LostFocusEventDescriptions=カーソルがDatePicker（日付を選択する部品）から離れ、クリックできなくなったことを示します。
# Description: 
GetBatteryVoltageMethods=バッテリー電圧
# Description: 
GetBatteryCurrentMethods=バッテリー電流を取得する
# Description: 
GetBatteryLevelMethodDescriptions=ロボットのバッテリーレベルを取得します。電圧をミリボルトで返します。
# Description: 
GetBatteryLevelMethods=バッテリー残量
# Description: 
GetBatteryVoltageMethodDescriptions=バッテリー電圧を取得します。
# Description: 
GetBrickNameMethodDescriptions=ロボットのブリック名を取得します。
# Description: 
GetBrickNameMethods=ブリック名を取得
# Description: 
GetColorCodeMethodDescriptions=無色、黒、青、緑、黄、赤、白、茶に対応する0から7までのカラーコードを返します。
# Description: 
GetColorCodeMethods=カラーコードを取得
# Description: 
GetColorMethodDescriptions=現在検出されている色、または色が読み取れない場合、または DetectColor（ 色検出）プロパティが False に設定されている場合は None を返します。
# Description: 
GetColorMethods=カラーを取得
# Description: 
GetColorNameMethodDescriptions=色名を”色なし”、”黒”、”青”、”緑”、”黄”、”赤”、”白”、”茶”のいずれかで返します。
# Description: 
GetColorNameMethods=カラー名の取得
# Description: 
GetCurrentProgramNameMethodDescriptions=ロボット上で現在実行中のプログラム名を取得します。
# Description: 
GetCurrentProgramNameMethods=現在のプログラム名を取得
# Description: 
GetDetailTextMethodDescriptions=リストビュー要素の詳細テキストを取得します。
# Description: 
GetDetailTextMethods=詳細テキストを取得
# Description: 
GetDistanceMethodDescriptions=現在の距離をセンチメートル単位で 0 から 254 までの値で返します。
# Description: 
GetDistanceMethods=距離をとる
# Description: 
GetDurationMethodDescriptions=動画の継続時間をミリ秒単位で返します。
# Description: 
GetDurationMethods=期間を得る
