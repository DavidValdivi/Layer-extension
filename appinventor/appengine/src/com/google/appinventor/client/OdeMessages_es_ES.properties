AICompanionMenuItem=AI Companion
AboutScreenProperties=PantallaAcercaDe
AboveRangeEventEnabledProperties=DetectorLímiteSuperiorHabilitado
AboveRangeEvents=PorEncimaDeRango
AccelerationChangedEvents=CambioEnAceleración
AccelerometerSensorHelpStringComponentPallette=Componente no visible que detecta movimiento y mide aceleración aproximada en tres dimensiones utilizando unidades SI (m/s<sup>2</sup>). Las componentes son: <ul>\n<li> <strong>xAccel</strong>: 0 cuando el dispositivo no está en movimiento en una superficie plana, positivo cuando el dispositivo se inclina hacia la derecha (por ejemplo, cuando la se levanta por la parte izquierda), y negativo cuando el dispositivo se inclina hacia la izquierda (por ejemplo, levantándolo por la parte derecha). </li>\n <li> <strong>yAccel</strong>: 0 cuando el dispositivo se encuentra en una superficie plana (sin movimiento), positivo cuando se levanta la base, y negativo cuando se levanta la parte superior. </li>\n <li> <strong>zAccel</strong>: Tiene el valor de -9.8 (la gravedad de la tierra en metros por segundo) cuando el dispositivo no está en movimiento y paralelo al suelo con la pantalla hacia arriba, 0 cuando el dispositivo está en posición perpendicular al suelo, y +9.8 con la pantalla hacia abajo. Este valor puede verse afectado si se acelera en contra de la gravedad.</li></ul>
AcceptConnectionMethods=AceptarConexión
AcceptConnectionWithUUIDMethods=AceptarConexiónConUUID
AccuracyProperties=Exactitud
ActionProperties=Acción
ActivityClassProperties=ClaseDeActividad
ActivityPackageProperties=PaqueteDeActividad
ActivityStarterHelpStringComponentPallette=Un componente que puede iniciar una actividad utilizando el método <code>IniciarActividad</code>. <p>Las actividades que se pueden iniciar incluyen:<ul> <li> Iniciar otra aplicación App Inventor para Android. Para hacerlo, primero averigüe la <em>clase</em> de la otra aplicación descargando el código fuente y usando un explorador de archivos o una utilidad de descompresión para encontrar un archivo llamado "youngandroidproject/project.properties". La primera línea del archivo comenzará con "main=" y será seguida por el nombre de la clase; por ejemplo, <code>main=com.gmail.Bitdiddle.Ben.HelloPurr.Screen1</code>. (Los primeros componentes indican que fue creado por Ben.Bitdiddle
AddDaysMethods=AñadirDías
AddHoursMethods=AñadirHoras
AddMinutesMethods=AñadirMinutos
AddMonthsMethods=AñadirMeses
AddSecondsMethods=AñadirSegundos
AddWeeksMethods=AñadirSemanas
AddYearsMethods=AñadirAños
AddressesAndNamesProperties=DireccionesYNombres
AfterActivityEvents=DespuésDeActividad
AfterChoosingEvents=DespuésDeSelección
AfterDateSetEvents=DespuésFechaRecibida
AfterGettingTextEvents=DespuésDeObtenerTexto
AfterPickingEvents=DespuésDeSelección
AfterPictureEvents=DespuésDeTomarFoto
AfterRecordingEvents=DespuésDeGrabación
AfterScanEvents=DespuésDeScanear
AfterSelectingEvents=DespuésdeSeleccionar
AfterSoundRecordedEvents=DespuésDeSonidoGrabado
AfterSpeakingEvents=DespuésDeHablar
AfterTextInputEvents=DespuésDeEntradaDeTexto
AfterTimeSetEvents=DespuésdeDefinirHora
AlignHorizontalProperties=DispHorizontal
AlignVerticalProperties=DispVertical
AllowCookiesProperties=PermiteCookies
AltitudeProperties=Altitud
AngleProperties=Angulo
AnimationProperties=Animación
ApiKeyProperties=ClaveAPI
AppendToFileMethods=AñadirAArchivo
AuthorizeMethods=Autorizar
AvailableProperties=Disponible
AvailableProvidersProperties=ProveedoresDisponibles
AzimuthProperties=Acimut
BackPressedEvents=AtrásPresionado
BackgroundColorProperties=ColorDeFondo
BackgroundImageProperties=ImagenDeFondo
BallHelpStringComponentPallette=<p>Un ''sprite'' redondo que se puede colocar en un <code>Lienzo</code>, donde puede reaccionar a toques y arrastres, interactuar con otros sprites (<code>ImagenSprite</code>s y otros <code>Pelota</code>s) y el borde del lienzo, y muévalo según sus valores de propiedad.</p><p>Por ejemplo, para que una <code>Pelota</code> se mueva 4 píxeles hacia en la parte superior de un <code>Lienzo</code> cada 500 milisegundos (medio segundo), establecería la propiedad <code>Velocidad</code> en 4 [píxeles], la propiedad <code>Intervalo</code> en 500 [milisegundos], la propiedad <code>Encabezado</code> a 90 [grados] y la propiedad <code>Activado</code> a <code>Verdadero</code>.</p><p>El La diferencia entre una <code>Pelota</code> y un <code>ImagenSprite</code> es que este último puede obtener su apariencia de un archivo de imagen, mientras que la apariencia de una <code>Pelota</code> puede ser se modifica únicamente variando sus propiedades <code>Color</code> y <code>Radio</code>.</p>
BallotOptionsProperties=OpcionesDeVoto
BallotQuestionProperties=PreguntaDeVoto
BarcodeScannerHelpStringComponentPallette=Componente para usar el escáner para leer un código de barras
BeforeGettingTextEvents=AntesDeObtenerTexto
BeforePickingEvents=AntesDeSelección
BeforeSpeakingEvents=AntesDeHablar
BelowRangeEventEnabledProperties=DebajoDelRangoEventoHabilitado
BelowRangeEvents=PorDebajoDeRango
BluetoothClientHelpStringComponentPallette=Componente cliente de Bluetooth
BluetoothClientProperties=ClienteBluetooth
BluetoothServerHelpStringComponentPallette=Componente servidor de Bluetooth
BottomOfRangeProperties=InferiorDelRango
BounceMethods=Botar
BuildPostDataMethods=ConstruirDatoPost
BuildRequestDataMethods=ConstruirSolicitudDeDatos
ButtonHelpStringComponentPallette=Botón con capacidad de detectar clics. Se pueden cambiar muchos aspectos de su apariencia, así como si se puede hacer clic en él (<code>Activado</code>), se puede cambiar en el Diseñador o en el Editor de bloques.
BytesAvailableToReceiveMethods=BytesDisponiblesParaRecibir
CalibrateStrideLengthProperties=CalibraciónLongitudDeZancada
CalibrationFailedEvents=FalloEnCalibración
CamcorderHelpStringComponentPallette=Un componente para grabar vídeos utilizando la cámara del dispositivo. Cuando el vídeo se ha grabado, el nombre del archivo está disponible en el evento DespuesDeGrabación. Este nombre se puede usar, por ejemplo, como propiedad <code>Fuente</code> en el componente <code>ReproductorDeVídeo</code>.
CameraHelpStringComponentPallette=Un componente para tomar fotos utilizando la cámara del dispositivo. El nombre del archivo conteniendo la foto está disponible en el evento DespuesDeFoto. Este nombre se puede usar, por ejemplo, como propiedad <code>Foto</code> en el componente[a] <code>Imagen</code>.
CanGoBackMethods=PuedeVolverAtrás
CanGoForwardMethods=PuedeIrAdelante
CanvasHelpStringComponentPallette=<p>Un panel rectangular bidimensional sensible al tacto en el que se pueden dibujar y mover sprites.</p> <p>El <code>ColorDeFondo</code>, <code>ColorDePintura</code>, <code>Imagen de fondo</code>, <code>Ancho</code> y <code>Alto</code> del lienzo se pueden configurar en el Diseñador o en el Editor de bloques. El <code>Ancho</code> y el <code>Alto</code> se miden en píxeles y deben ser positivos.</p><p>Cualquier ubicación en el lienzo se puede especificar como un par de valores (X, Y ), donde <ul> <li>X es el número de píxeles alejados del borde izquierdo del lienzo</li><li>Y es el número de píxeles alejados del borde superior del lienzo</li></ul>.</p> <p>Hay eventos para saber cuándo y dónde se ha tocado un Lienzo o un <code>Sprite</code> (<code>ImagenSprite</code> o <code>Pelota</code>) ha sido arrastrado. También existen métodos para dibujar puntos, líneas y círculos.</p>
ChangedEvents=Cambiado
CharacterEncodingProperties=CodificaciónDelCarácter
CheckAuthorizedMethods=VerificarAutorizado
CheckBoxHelpStringComponentPallette=CasillaDeVerificación que activa un evento cuando se hace clic en ella. Existen muchas propiedades para definir su aspecto, que pueden gestionarse desde el Diseñador o el Editor de Bloques.
CheckedProperties=Verificado
ClearAllMethods=LimpiarTodo
ClearCookiesMethods=BorrarCookies
ClearLocationsMethods=VaciarUbicaciones
ClearMethods=Limpiar
ClearTagMethods=LimpiarEtiqueta
ClickEvents=Clic
ClockHelpStringComponentPallette=<p>Componente no visible que proporciona el instante en el tiempo mediante el reloj interno del teléfono. Puede activar un temporizador a intervalos establecidos regularmente y realizar cálculos de tiempo, manipulaciones y conversiones.</p> <p>También hay disponibles métodos para convertir un instante en texto. Los patrones aceptables son cadenas vacías, MM/DD/AAAA HH:mm:ss a, o MMM d, yyyyHH:mm. La cadena vacía proporcionará el formato predeterminado, que es "MMM d, yyyy HH:mm:ss a" para FormatoFechaHora "MMM d, yyyy" para FormatoFecha. Para ver todos los formatos posibles, consulte <a href="https://docs.oracle.com/javase/7/docs/api/java/text/SimpleDateFormat.html" _target="_blank">aquí</a> . </p>
CloseScreenAnimationMethods=AnimaciónCerrarPantalla
CloseScreenAnimationProperties=AnimaciónCierreDePantalla
CollidedWithEvents=EnColisiónCon
CollidingWithMethods=ChocandoCon
ColorChangedEventEnabledProperties=DetectoCambioColorActivado
ColorChangedEvents=CambioDeColor
ColorLeftProperties=ColorIzquierda
ColorRightProperties=ColorDerecha
ColumnsProperties=Columnas
CompatibilityMode=ModoCompatible
CompletedEvents=Completado
ConnectMethods=Conectar
ConnectWithUUIDMethods=ConectarconUUID
ConnectionAcceptedEvents=ConnexiónAceptada
ConsumerKeyProperties=ClaveDelCliente
ConsumerSecretProperties=DatoSecretoCliente
ContactNameProperties=NombreDeContacto
ContactPickerHelpStringComponentPallette=Un botón que, al pulsarlo, muestra una lista de contactos entre los que elegir. Cuando el usuario selecciona uno, se muestra la siguiente información del contacto seleccionado: <ul>\n<li> <code>Nombre del contacto</code></li>\n<li> <code>Correo electrónico</code>: Dirección principal de correo electrónico del contacto</li>\n<li><code>Foto</code>: Nombre del archivo que contiene la imagen del contacto, la cual puede utilizarse como valor para la propiedad <code>Foto</code> del componente <code>Imagen</code> o del componente <code>SpriteImagen</code>. </li></ul>\n</p><p>Hay otras propiedades que afectan a la apariencia del botón (<code>PosiciónDelTexto</code>, <code>ColorDeFondo</code>, etc.), y definen si el botón se puede pulsar (<code>Habilitado</code>). \n</p><p>No todos los teléfonos permiten seleccionar. Cuando falle, el componente mostrará una notificación. Es posible ignorar el error con el gestor de eventos Pantalla.Error.
CountryProperties=País
CurrentAddressProperties=DirecciónActual
CurrentPageTitleProperties=TítuloDePáginaActual
CurrentUrlProperties=UrlActual
DataTypeProperties=TipoDeDato
DataUriProperties=UriDelDato
DatePickerHelpStringComponentPallette=<p>Un botón que, al pulsarlo, abre una ventana de diálogo que permite al usuario seleccionar una fecha.</p>
DayOfMonthMethods=DíaDelMes
DayProperties=Día
DeAuthorizeMethods=Desautorizar
DeleteFileMethods=BorrarArchivo
DeleteMethods=Borrar
DelimiterByteProperties=ByteDelimitador
DetectColorProperties=DetectorDeColor
DirectMessageMethods=MensajeDirecto
DirectMessagesProperties=MensajeDirecto
DirectMessagesReceivedEvents=MensajeDirectoRecibido
DisconnectMethods=Desconectar
DisplayDropdownMethods=MostrarLista
DistanceIntervalProperties=IntervaloDeDistancia
DistanceProperties=Distancia
DoQueryMethods=EjecutarConsulta
DoScanMethods=Escanear
DownloadFileMethods=DescargarArchivo
DraggedEvents=Arrastrado
DrawCircleMethods=DibujarCírculo
DrawLineMethods=DibujarLínea
DrawPointMethods=DibujarPunto
DrawTextAtAngleMethods=DibujarTextoEnÁngulo
DrawTextMethods=DibujarTexto
DriveMotorsProperties=Motores
DurationMethods=Duración
EdgeReachedEvents=BordeAlcanzado
ElapsedTimeProperties=TiempoTranscurrido
ElementsFromStringProperties=ElementosDesdeCadena
ElementsProperties=Elementos
EmailAddressListProperties=ListaDeDireccionesDeCorreo
EmailAddressProperties=DirecciónDeCorreo
EmailPickerHelpStringComponentPallette=SelectorDeEmail es un tipo de campo de texto. Si el usuario comienza escribiendo el nombre o la dirección de correo electrónico de un contacto, el teléfono le mostrará un menú desplegable con las opciones para completar la selección. Si hay muchos contactos, puede pasar varios segundos hasta que aparezca la lista, y es posible que se muestren resultados intermedios mientras se encuentran las coincidencias. <p> En la propiedad <code>Texto</code> del campo de texto se guarda tanto el valor inicial como el valor una vez el usuario ha hecho su selección. Si la propiedad <code>Texto</code> está inicialmente vacía, se mostrará el contenido de la propiedad <code>Pista</code> en el cuadro de texto  con caracteres atenuados, para ofrecer una pista al usuario.</p>\n <p>Hay otras propiedades que afectan a la apariencia del cuadro de texto (<code>PosiciónDelTexto</code>, <code>ColorDeFondo</code>, etc.) y determinan si el objeto puede utilizarse (<code>Habilitado</code>). </p>\n<p>Este tipo de cuadros de texto se utilizan habitualmente con los componentes <code>Botón</code>, de forma que el usuario hace clic en el botón cuando ha terminado de introducir el texto.
EnabledProperties=Habilitado
ErrorOccurredEvents=ErrorGenerado
ExtraKeyProperties=ClaveAdicional
ExtraValueProperties=ValorAdicional
FileHelpStringComponentPallette=Componente no visible para almacenar y recuperar archivos. Utilice este componente para escribir o leer archivos en su dispositivo. El comportamiento predeterminado es escribir archivos en el directorio de datos privados asociado con su aplicación. Companion tiene una carcasa especial para escribir archivos en un directorio público para su depuración. Utilice el enlace Más información para leer más sobre cómo el componente Archivo utiliza rutas y ámbitos para administrar el acceso a los archivos.
FlungEvents=Lanzado
FollowLinksProperties=SeguirEnlaces
FollowMethods=Seguir
FollowersProperties=Seguidores
FollowersReceivedEvents=SeguidoresRecibido
FontBoldProperties=Negrita
FontItalicProperties=Cursiva
FontSizeProperties=Tamaño de letra
FontTypefaceProperties=TipoDeLetra
ForgetLoginMethods=OlvidarLogin
formComponentPallette=Formulario
FormHelpStringComponentPallette=Componente de mayor nivel que contiene a todos los demás componentes del programa.
FormatDateMethods=FormatoDeFecha
FormatDateTimeMethods=FormatoDeFechaYHora
FormatTimeMethods=FormatoDeHora
FriendTimelineProperties=TimelineDeAmigos
FriendTimelineReceivedEvents=RecibidoCronologíaAmigo
FullScreenProperties=PantallaCompleta
FunctionCompletedEvents=FunciónCompletada
GPSAvailableEvents=GPSDisponible
GPSLostEvents=GPSPerdido
GameClientHelpStringComponentPallette=Proporciona un medio para que las aplicaciones se comuniquen con servidores de juegos en línea
GameIdProperties=IdDelJuego
GenerateColorProperties=GenerarColor
GenerateLightProperties=GenerarLuz
GetBackgroundPixelColorMethods=TomarColorDeFondoDelPixel
GetBatteryLevelMethods=ObtenerNivelDeBatería
GetBrickNameMethods=ObtenerNombreDePieza
GetColorMethods=ObtenerColor
GetCurrentProgramNameMethods=ObtenerNombreProgramaActual
GetDistanceMethods=ObtenerDistancia
GetDurationMethods=ObtenerDuración
GetFirmwareVersionMethods=ObtenerVersiónFirmware
GetInputValuesMethods=ObtenerValoresDeEntrada
GetInstanceListsMethods=ObtenerListasDeInstancias
GetLightLevelMethods=ObtenerNivelDeLuz
GetMessagesMethods=ObtenerMensajes
GetMethods=Obtener
GetMillisMethods=ObtenerMiliseg
GetOutputStateMethods=ObtenerEstadoDeSalida
GetPixelColorMethods=TomarColorDePixel
GetSoundLevelMethods=ObtenerNivelSonido
GetTagsMethods=ObtenerEiquetas
GetTextMethods=ObtenerTexto
GetValueMethods=ObtenerValor
GetWifiIpAddressMethods=ObtenerIPWifi
GoBackMethods=IrAtrás
GoForwardMethods=IrAdelante
GoHomeMethods=IrAInicio
GoToUrlMethods=IrALaUrl
GoogleVoiceEnabledProperties=VozDeGoogleHabilitada
GotBallotConfirmationEvents=ObetenerConfimarciónDeVoto
GotBallotEvents=ObtenerVoto
GotFileEvents=ObtuvoArchivo
GotFocusEvents=ObtenertFoco
GotMessageEvents=ObtuvoMensaje
GotResultEvents=ResultadoObtenido
GotTextEvents=ObtuvoTexto
GotTranslationEvents=TraducciónRecibida
GotValueEvents=ObtenerValor
HasAccuracyProperties=TienePrecisión
HasAltitudeProperties=TieneAltitud
HasLongitudeLatitudeProperties=TieneLongitudYAltitud
HeadingProperties=Dirección
HeightProperties=Alto
HideKeyboardMethods=OcultarTeclado
HighByteFirstProperties=ByteAltoPrimero
HintProperties=Pista
HomeUrlProperties=UrlInicial
HorizontalArrangementHelpStringComponentPallette=<p>Elemento donde colocar los componentes que deban mostrarse de izquierda a derecha. Para que aparezcan uno sobre otro utilícese el elemento <code>DisposiciónVertical</code> en su lugar.</p>
HourMethods=Hora
HourProperties=Hora
HtmlTextDecodeMethods=DecodificarTextoHtml
IconProperties=Icono
ImageHelpStringComponentPallette=Componente para mostrar fotos. Mediante el Diseñador o el Editor de Bloques se pueden definir tanto la foto que hay que mostrar, como otras características que afectan a su apariencia.
imagePathParams=RutaAImagen
ImagePickerHelpStringComponentPallette=Es un botón con una finalidad especial. Cuando el usuario toca sobre un selector de fotos se abre la galería fotos del dispositivo, para que el usuario pueda elegir una. Una vez seleccionada se guarda en la tarjeta SD, y se almacena en la propiedad <code>ArchivoDeFoto</code> el nombre del archivo donde se ha guardado la foto. Para evitar consumir excesivos recursos de almacenamiento, se guarda un máximo de diez fotos. Al escoger nuevas fotos se irán borrando las anteriores, de la más antigua a la más reciente.
ImageProperties=Imagen
ImageSpriteHelpStringComponentPallette=<p>Es un “sprite” que puede colocarse dentro de un <code>Lienzo</code>, en el cual es posible tocarlo, arrastralo, o hacerle interactuar con otros sprites (<code>Pelota</code> u otros <code>SpriteImagen</code>) y con los lados del Lienzo, y donde podrá moverse de acuerdo a los valores indicados en sus propiedades. Su apariencia es la de la foto indicada en la propiedad <code>Foto</code>, (a menos que la propiedad <code>Visible</code> tenga el valor <code>Falso</code>(.</p><p>Por ejemplo, para que un <code>SpriteImagen</code> se mueva 10 pixels a la izquierda cada 1000 milisegundos (un segundo) hay que poner en la propiedad <code>Velocidad</code> el valor 10 [pixels], el valor 1000 [milisegundos] en la propiedad <code>Intervalo</code>, fijar en la propiedad <code>Dirección</code> el valor 180 [grados], y en la propiedad <code>Habilitado</code> establecer el valor <code>Verdadero</code>. Un sprite cuya propiedad <code>Rota</code> tenga el valor <code>Verdadero</code> rotará su foto según cambie la <code>Dirección</code> del sprite. La comprobación de colisiones se hace siempre con la posición original del objeto (sin rotar), de modo que la verificación de colisión puede ser inexacta para aquellos sprites muy largos y estrechos, o muy cortos y anchos, que se encuentren rotados. En todo momento es posible modificar cualquiera de las propiedades del sprite, a través del programa.</p>
InfoEvents=Información
InitializeEvents=Inicializar
InstanceIdChangedEvents=CambioEnIdDeInstancia
InstanceIdProperties=IdDeInstancia
InstantInTimeParams=instanteEnTiempo
InstantProperties=instante
IntervalProperties=Intervalo
InviteMethods=Invitar
InvitedEvents=Invitado
InvitedInstancesProperties=InstanciasInvitadas
IsAcceptingProperties=Acepta
IsAuthorizedEvents=Autorizado
IsConnectedProperties=Conectado
IsDevicePairedMethods=EstáemparejadoelDispositivo
IsLoopingProperties=Repetición
IsPlayingProperties=Sonando
IsPressedMethods=EstáPulsado
JoinedInstancesProperties=InstanciasJuntas
JsonTextDecodeMethods=DecodificarTextoJson
KeepAliveMethods=MantenerVivo
LabelHelpStringComponentPallette=Una etiqueta muestra un texto, definido en su propiedad <code>Texto</code>. Utilizando otras propiedades, que pueden manejarse en el Diseñador o en el Editor de Bloques, es posible modificar la apariencia y la ubicación del texto.
LanguageProperties=Idioma
LastMessageProperties=ÙltimoMensaje
LatitudeFromAddressMethods=LatitudDeLaDirección
LatitudeProperties=Latitud
LeaderProperties=Líder
LeaveInstanceMethods=AbandonarInstancia
LineWidthProperties=AnchoDeLínea
ListFilesMethods=ListarArchivos
ListPickerHelpStringComponentPallette=<p>Un botón que, al hacer clic en él, muestra una lista de textos para que el usuario elija. Los textos se pueden especificar a través del Diseñador o del Editor de bloques estableciendo la propiedad <code>ElementosDesdeCadena</code> en su concatenación separada por cadenas (por ejemplo, <em>opción 1, opción 2, opción 3</em>) o estableciendo la propiedad <code>Elementos</code> en una Lista en el editor de Bloques.</p><p>Estableciendo la propiedad ShowFilterBar en verdadero, la lista se podrá buscar. Otras propiedades afectan la apariencia del botón (<code>AlineamientoDeTexto</code>, <code>ColorDeFondo</code>, etc.) y si se puede hacer clic en él (<code>Activado</code>).</p>
ListViewHelpStringComponentPallette=<p>Es un componente visible que muestra una lista de textos e imágenes.</p><p>Se pueden establecer listas simples de cadenas utilizando la propiedad ElementosdesdeCadena. Se pueden crear listas más complejas de elementos que contengan múltiples cadenas y/o imágenes utilizando las propiedades ListaDatos y ListViewLayout. </p>
LocationChangedEvents=CambioEnUbicación
LocationSensorHelpStringComponentPallette=Es un componente no visible que ofrece información sobre la ubicación, incluyendo la longitud, latitud, altitud (si el dispositivo está preparado para ello), y dirección. También se puede hacer “codificación geográfica”, convirtiendo una dirección (no necesariamente la actual), a una latitud (por medio del método <code>LatitudDeLaDirección</code>) y a una longitud (con el método <code>LongitudDeLaDirección</code>).</p>\n<p>Para que esto funcione, el componente tiene que tener el valor <code>Verdadero</code> en la propiedad <code>Habilitado</code>, y debe ser viable determinar la ubicación, ya sea activando la conectividad a través de redes Wifi, o habilitando en el dispositivo la función GPS (si se está en el exterior). </p>\nEs posible que la información sobre la ubicación no esté disponible en el momento de iniciar la aplicación. Normalmente hay que esperar un poco para que el proveedor de la localización la encuentre y la utilice, o esperar al evento CambioEnUbicación
LogErrorMethods=RegistrarError
LogInfoMethods=RegistrarInfo
LogWarningMethods=RegistrarAviso
LongClickEvents=ClicLargo
LongitudeFromAddressMethods=LongitudDeLaDirección
LongitudeProperties=Longitud
LoopProperties=Bucle
LostFocusEvents=PerderFoco
LsGetStatusMethods=ObtenerEstadoLs
LsReadMethods=LeerLs
LsWriteMethods=EscribirLs
MagnitudeProperties=Magnitud
MakeInstantFromMillisMethods=HacerInstanteDesdeMilisegundos
MakeInstantMethods=HacerInstante
MakeNewInstanceMethods=HacerNuevaInstancia
MakePhoneCallMethods=LlamarPorTeléfono
MaxValueProperties=ValorMax
MentionsProperties=Menciones
MentionsReceivedEvents=MencionesRecibidas
MessageProperties=Mensaje
MessageReadMethods=MensajeLeer
MessageReceivedEvents=MensajeRecibido
MessageWriteMethods=MensajeEscribir
MinValueProperties=ValorMin
MinimumIntervalProperties=IntervaloMínimo
MinuteMethods=Minuto
MinuteProperties=Minuto
MockSpinnerAddItems=añadir elementos…
MonthInTextProperties=MesEnTexto
MonthMethods=Mes
MonthNameMethods=NombreDelMes
MonthProperties=Mes
MoveBackwardIndefinitelyMethods=MoverAtrásIndefinidamente
MoveBackwardMethods=MoverAtrás
MoveForwardIndefinitelyMethods=MoverAdelanteIndefinidamente
MoveForwardMethods=MoverAdelante
MoveIntoBoundsMethods=MoverDentroDeLímites
MoveToMethods=MoverA
MovingProperties=EnMovimiento
MultiLineProperties=Multilínea
NearFieldHelpStringComponentPallette=<p>Componente no visible para proporcionar capacidades NFC. Por ahora, este componente solo admite la lectura y escritura de etiquetas de texto (si el dispositivo lo admite)</p><p>Para poder leer y escribir etiquetas de texto, el componente debe tener su propiedad <code>ReadMode</code>. establezca en Verdadero o Falso respectivamente.</p><p><strong>Nota:</strong> Este componente solo funcionará en la Pantalla1 de cualquier aplicación App Inventor.</p>
NewInstanceMadeEvents=NuevaInstanciaCreada
NewLeaderEvents=NuevoLíder
NoLongerCollidingWithEvents=FinDeColisiónCon
NoOpenPollEvents=NoHayEncuestasAbiertas
NotifierHelpStringComponentPallette=El componente Notificador muestra cuadros con alertas, mensajes y alertas temporales, y hace anotaciones en el registro de Android utilizando los siguientes métodos: <ul><li>MostrarDiálogoMensaje: presenta un mensaje que el usuario puede descartar pulsando un botón.</li><li>MostrarDiálogoElección: muestra un mensaje y dos botones, para que el usuario pueda elegir entre dos respuestas, por ejemplo si o no, después de lo cual si activa el evento DespuésDeSelección.</li><li>MostrarDiálogoTexto: permite al usuario escribir una respuesta al mensaje, después de lo cual se activa el evento DespuésDeEntradaDeTexto. <li>MostrarAlerta: presenta una alerta que desaparece después de un breve periodo de tiempo.</li><li>RegistrarError: anota un mensaje de error en el registro de Android.</li><li>RegistrarInfo: escribe un mensaje de información en el registro de Android.</li><li>RegistrarAviso: anota un mensaje de aviso o advertencia en el registro de Android.</li><li>Se puede poner formato a los mensajes que aparecen en los cuadros de diálogo (pero no a las alertas) usando las siguientes etiquetas HTML: &lt;b&gt;, &lt;big&gt;, &lt;blockquote&gt;, &lt;br&gt;, &lt;cite&gt;, &lt;dfn&gt;, &lt;div&gt;, &lt;em&gt;, &lt;small&gt;, &lt;strong&gt;, &lt;sub&gt;, &lt;sup&gt;, &lt;tt&gt;. &lt;u&gt;</li><li>También se puede utilizar la etiqueta font para definir, por ejemplo, el color  con &lt;font color="blue"&gt;. Entre los nombres de colores disponibles están aqua, black, blue, fuchsia, green, grey, lime, maroon, navy, olive, purple, red, silver, teal, white, y yellow</li></ul>
NotifierLengthProperties=DuraciónDelNotificador
NowMethods=Ahora
NumbersOnlyProperties=SóloNúmeros
NxtColorSensorHelpStringComponentPallette=Este componente proporciona un interfaz de alto nivel para gestionar el sensor de color de un robot de LEGO MINDSTORMS NXT.
NxtDirectCommandsHelpStringComponentPallette=Proporciona un interfaz de bajo nivel para un robot de LEGO MINDSTORMS NXT, con funciones para enviar comandos directos NXT (Direct Commands).
NxtDriveHelpStringComponentPallette=Este componente proporciona un interfaz de alto nivel para un robot de LEGO MINDSTORMS NXT, con funciones para mover y girar el robot.
NxtLightSensorHelpStringComponentPallette=Este componente proporciona un interfaz de alto nivel para gestionar un sensor de luz en un robot de LEGO MINDSTORMS NXT.
NxtSoundSensorHelpStringComponentPallette=Este componente proporciona un interfaz de alto nivel para gestionar un sensor de sonido en un robot de LEGO MINDSTORMS NXT.
NxtTouchSensorHelpStringComponentPallette=Este componente proporciona un interfaz de alto nivel para gestionar un sensor de presiónen un robot de LEGO MINDSTORMS NXT.
NxtUltrasonicSensorHelpStringComponentPallette=Este componente proporciona un interfaz de alto nivel para gestionar un sensor de ultrasonido en un robot de LEGO MINDSTORMS NXT.
OpenMethods=Abrir
OpenScreenAnimationMethods=AnimaciónAlAbrirPantalla
OpenScreenAnimationProperties=AnimaciónAlAbrirPantalla
OrientationChangedEvents=CambioEnOrientación
OrientationSensorHelpStringComponentPallette=<p>Es un componente no visible que proporciona información acerca de la orientación física del dispositivo en tres dimensiones: <ul><li> <strong>Inclinación</strong>: 0 grados cuando el dispositivo esta en horizontal, aumenta hasta 90 grados cuando el dispositivo está apoyado en vertical sobre su lado izquierdo, y disminuye hasta -90 grados está apoyado en vertical sobre su lado derecho.   </li><li> <strong>Cabeceo</strong> 0 grados cuando el dispositivo está en horizontal, aumenta hasta 90 grados cuando la parte superior del dispositivo está apuntando hacia abajo,  y hasta 180 grados cuando está dado la vuelta. Cuando la parte inferior del dispositivo está apuntando al suelo, el cabeceo disminuye hasta -90 grados, y sigue disminuyendo hasta -180 grados cuando se gira completamente.</li> <li> <strong>Acimut</strong> 0 grados cuando la parte superior del dispositivo está orientada al norte, 90 grados cuando apunta al este, 180 grados cuando es hacia el sur, 270 grados cuando está apuntando al oeste, etc.</li></ul>  Para estas medidas se supone que que el dispositivo no está en movimiento.</p>
OtherScreenClosedEvents=OtraPantallaCerrada
PaintColorProperties=Color
PasswordTextBoxHelpStringComponentPallette=<p> Es un cuadro para escribir contraseñas. Es como un componente <code>CampoDeTexto</code> normal, pero no se muestran los caracteres mientras el usuario los está escribiendo.</p><p>El texto que escribe el usuario queda almacenado en la propiedad <code>Texto</code>. Si está vacío, se puede utilizar la propiedad <code>Pista</code>, que aparece como texto atenuado, para ofrecer al usuario un ayuda sobre lo que debe escribir.</p><p>Los campos de texto se utilizan normalmente junto a componentes <code>Botón</code>, de tal manera que el usuario pulsa el botón una vez que ha terminado de introducir el texto.</p>
PauseMethods=Pausar
PedometerHelpStringComponentPallette=Un componente que actúa como un Podómetro. Detecta movimiento a través del acelerómetro e intenta determinar si se ha dado un paso. Utilizando una longitud de zancada configurable, también puede estimar la distancia recorrida.
PhoneCallHelpStringComponentPallette=<p>Es un componente no visible que permite hacer una llamada de teléfono al número especificado en la propiedad <code>NúmeroDeTeléfono</code>, cuyo valor puede definirse en el Diseñador o en el Editor de Bloques. El método <code>LlamarPorTeléfono</code> de este componente ejecuta la acción de llamar al teléfono. </p><p>Habitualmente este componente se utiliza junto con el componente <code>SelectorDeContacto</code>, que permite al usuario seleccionar uno de los contactos que tiene guardados en el teléfono, y establece en la propiedad <code>NúmeroDeTeléfono</code> el número de dicho contacto.</p><p> Para especificar directamente el número de teléfono (por ejemplo, 250-555-1212), hay que poner en la propiedad <code>NúmeroDeTeléfono</code> un texto con el número deseado (por ejemplo, “2505551212”). Pueden incluirse guiones, paréntesis o puntos (por ejemplo “(250)-555-1212”  pero el sistema los eliminará. Atención: No pueden incluirse espacios.</p>
PhoneNumberListProperties=ListaDeNúmerosDeTeléfono
PhoneNumberPickerHelpStringComponentPallette=Al hacer clic sobre este botón se abrirá una lista que permitirá elegir entre los números de teléfono de contactos almacenados. Cuando el usuario haga la selección se guardan en las siguientes propiedades los datos del contacto elegido: <ul>\n<li> <code>NombreDelContacto</code>: el nombre del contacto</li>\n<li> <code>NúmeroDeTeléfono</code>: el número de teléfono del contacto</li>\n<li> <code>DirecciónDeCorreo</code>: la dirección de correo electrónico del contacto (e-mail)</li>\n<li> <code>Foto</code>: el nombre del archivo que contiene la imagen del contacto, que puede utilizarse como valor de la propiedad <code>Foto</code> del componente <code>Imagen</code>, o del componente <code>SpriteImagen</code>.</li></ul>\n</p><p>Hay otras propiedades que afectan a la apariencia del botón(<code>PosiciónDelTexto</code>, <code>ColorDeFondo</code>, etc.) o determinan si puede pulsarse (<code>Habilitado</code>).</p><p>No en todos los teléfonos es posible hacer la selección. Cuando no sea posible el componente mostrará una notificación. El error se podrá manejar usando el gestor de eventos Pantalla.Error.
PhoneNumberProperties=NúmeroDeTeléfono
PhoneStatusHelpStringComponentPallette=Componente que proporciona información sobre el teléfono.
PictureProperties=Foto
PitchProperties=Tono
PlayMethods=Reproducir
PlayOnlyInForegroundProperties=ReproducirSóloConPantallaActiva
PlaySoundFileMethods=ReproducirArchivoSonido
PlayToneMethods=ReproducirTono
PlayerHelpStringComponentPallette=Componente multimedia que reproduce sonido y controla la vibración del teléfono. El nombre del campo multimedia se especifica en la propiedad <code>Origen</code>, que puede definirse desde el Diseñador o en el Editor de Bloques. La cantidad de tiempo de vibración se especifica desde el Editor de Bloque en milisegundos (milésimas de segundo).\n<p>Para ver la lista de formatos de sonido admitidos consultar <a href="http://developer.android.com/guide/appendix/media-formats.html" target="_blank">Supported Media Formats</a>.</p>\n<p>Este componente es más adecuado para archivos de sonido grandes, como canciones, mientras para para archivos pequeños, como efectos de sonido, es más eficiente el componente <code>Sonido</code>.</p>
PlayerJoinedEvents=JugadorSeHaUnido
PlayerLeftEvents=JugadorHaAbandonado
PlayersProperties=Jugadores
PointInDirectionMethods=ApuntarEnLaDirección
PointTowardsMethods=ApuntarHacia
PositionChangedEvents=PosiciónCambiada
PostFileMethods=PublicarArchivo
PostTextMethods=PublicarTexto
PostTextWithEncodingMethods=PublicarTextoConCodificación
PressedEventEnabledProperties=EventoDePulsaciónHabilitado
PressedEvents=Presionado
PromptProperties=Prompt
PromptforPermissionProperties=SolicitudDePermiso
ProviderLockedProperties=ProveedorAsegurado
ProviderNameProperties=NombreDeProveedor
PublicInstancesProperties=InstanciasPúblicas
PutFileMethods=PonerArchivo
PutTextMethods=PonerTexto
PutTextWithEncodingMethods=PonerTextoCodificado
QueryProperties=Consulta
RadiusProperties=Radio
ReadFromMethods=LeerDesde
ReadModeProperties=ModoDeLectura
ReceiveSigned1ByteNumberMethods=RecibirNúmero1ByteConSigno
ReceiveSigned2ByteNumberMethods=RecibirNúmero2BytesConSigno
ReceiveSigned4ByteNumberMethods=RecibirNúmero4BytesConSigno
ReceiveSignedBytesMethods=RecibirBytesConSigno
ReceiveTextMethods=RecibirTexto
ReceiveUnsigned1ByteNumberMethods=RecibirNúmero1ByteSinSigno
ReceiveUnsigned2ByteNumberMethods=RecibirNúmero2BytesSinSigno
ReceiveUnsigned4ByteNumberMethods=RecibirNúmero4BytesSinSigno
ReceiveUnsignedBytesMethods=RecibirBytesSinSigno
ReceivingEnabledProperties=RecepciónHabilitada
RecordVideoMethods=GrabarVídeo
ReleasedEventEnabledProperties=DetectorDeLiberaciónHabilitado
ReleasedEvents=Liberado
RequestBallotMethods=SolicitarVoto
RequestDirectMessagesMethods=SolicitarMensajesDirectos
RequestFollowersMethods=SolicitarSeguidores
RequestFriendTimelineMethods=SolicitarLíneaDeTiempoDeAmigos
RequestHeadersProperties=PedirCabeceras
RequestMentionsMethods=SolicitarMenciones
RequestTranslationMethods=SolicitarTraducción
ResetInputScaledValueMethods=ReiniciarValorDeEntradaEscalado
ResetMethods=Reiniciar
ResetMotorPositionMethods=ReiniciarPosiciónMotor
ResolveActivityMethods=ConsultarActividad
ResponseFileNameProperties=NombreDelArchivoDeRespuesta
ResultNameProperties=NombreDelResultado
ResultProperties=Resultado
ResultTypeProperties=TipoDeResultado
ResultUriProperties=UriDeResultado
ResumeMethods=Continuar
RollProperties=Lanzar
RotatesProperties=Rota
RotationAngleProperties=ÁnguloRotación
RowsProperties=Registros
SaveAsMethods=Guardar como
SaveFileMethods=GuardarArchivo
SaveMethods=Guardar
SaveResponseProperties=GuardarRespuesta
ScalePictureToFitProperties=EscalarFotoAlTamañoMáximo
ScreenOrientationChangedEvents=CambioOrientaciónDePantalla
ScreenOrientationProperties=OrientaciónDeLaPantalla
ScrollableProperties=Enrollable
SearchResultsProperties=ResultadosDeBúsqueda
SearchSuccessfulEvents=ExitoEnBúsqueda
SearchTwitterMethods=BuscarEnTwitter
SecondMethods=Segundo
SecureProperties=Seguro
SeekToMethods=BuscarA
SelectionIndexProperties=IndiceSeleccionado
SelectionProperties=Selección
Send1ByteNumberMethods=EnviarNúmero1Byte
Send2ByteNumberMethods=EnviarNúmero2Bytes
Send4ByteNumberMethods=EnviarNúmero4Bytes
SendBallotMethods=EnviarVoto
SendBytesMethods=EnviarBytes
SendMessageEvents=EnviarMensaje
SendMessageMethods=EnviarMensaje
SendQueryMethods=EnviarConsulta
SendTextMethods=EnviarTexto
SensitivityProperties=Sensibilidad
SensorPortProperties=PuertoDelSensor
ServerCommandFailureEvents=FalloEnComandoDeServidor
ServerCommandMethods=ComandoDelServidor
ServerCommandSuccessEvents=ExitoEnComandoDeServidor
ServiceURLProperties=URLDelServicio
ServiceUrlProperties=UrlDeServicio
SetBackgroundPixelColorMethods=FijarColorDeFondoDelPixel
SetBrickNameMethods=DefinirNombreDePieza
SetInputModeMethods=DefinirModoDeEntrada
SetInstanceMethods=DefinirInstancia
SetLeaderMethods=DefinirLíder
SetOutputStateMethods=DefinirEstadoDeSalida
SetStatusMethods=DefinirEstado
ShakingEvents=Agitar
ShapeProperties=Forma
ShareFileMethods=CompartirArchivo
ShareFileWithMessageMethods=CompartirArchivoConMensaje
ShareMessageMethods=CompartirMensaje
SharingHelpStringComponentPallette=Compartir es un componente no visible que permite compartir archivos y/o mensajes entre esta aplicación y otras aplicaciones instaladas en un dispositivo. El componente mostrará una lista con las aplicaciones instaladas que son capaces de gestionar la información proporcionada, y permitirá al usuario elegir aquella con la que va a compartir el contenido, por ejemplo una aplicación de correo electrónico, una aplicación de red social, una aplicación de texto, etc.<br>Se puede obtener la vía de acceso al archivo directamente desde otros componentes como la Cámara o el SelectorDeImagen, pero también se puede especificar que se lea del dispositivo de almacenamiento. Hay que tener en cuenta que dispositivos distintos manejan el almacenamiento de manera diferente, por ejemplo, si tenemos un archivo arrow.gif en la carpeta <code>Appinventor/assets</code>, podría ser: <ul><li><code>”file:///sdcard/Appinventor/assets/arrow.gif"</code></li> o <li><code>"/storage/Appinventor/assets/arrow.gif"</code></li></ul>")
ShowAlertMethods=MostrarAlerta
ShowChooseDialogMethods=MostrarDiálogoElección
ShowFeedbackProperties=MostrarPulsación
ShowFilterBarProperties=MostrarBarraDeFiltrado
ShowMessageDialogMethods=MostrarDiálogoMensaje
ShowTablesProperties=mostrar tablas
ShowTextDialogMethods=MostrarDiálogoTexto
SimpleStepEvents=PasoSimple
SliderHelpStringComponentPallette=Un Deslizador es una barra de progreso con un marcador que puede desplazarse. Al tirar del marcador y arrastralo a la izquierda o a la derecha éste cambia de posición. Según se vaya arrastrando irá activándose el evento PosiciónCambiada, para indicar cuál es la nueva posición del marcador dentro del componente Deslizador. Se puede usar la posición del Deslizador en cualquier momento para cambiar dinámicamente otro atributo de un componente, como el tamaño de letra de un CampoDeTexto o el radio de una Pelota.
SoundHelpStringComponentPallette=<p>Un componente multimedia que reproduce archivos de sonido y, opcionalmente, vibra durante la cantidad de milisegundos (milésimas de segundo) especificada en el Editor de bloques. El nombre del archivo de sonido que se reproducirá se puede especificar en el Diseñador o en el Editor de bloques.</p> <p>Para conocer los formatos de archivos de sonido compatibles, consulte <a href="http://developer.android.com/ Guide/appendix/media-formats.html" target="_blank">Formatos multimedia compatibles con Android</a>.</p><p>Este componente <code>Sonido</code> es mejor para archivos de sonido cortos, como como efectos de sonido, mientras que el componente <code>Player</code> es más eficiente para sonidos más largos, como canciones.</p><p>Es posible que recibas un error si intentas reproducir un sonido inmediatamente después de configurar la fuente. .</p>
SoundRecorderHelpStringComponentPallette=<p>Componente multimedia para grabar sonido.</p>
SourceProperties=Origen
SpeakMethods=Hablar
SpeechRateProperties=VelocidadDePronunciación
SpeechRecognizerHelpStringComponentPallette=Es un componente que permite utilizar el reconocimiento de voz para convertir de voz a texto
SpeedProperties=Velocidad
SpinnerHelpStringComponentPallette=<p>Es un componente desplegable que muestra una ventana emergente que contiene una lista de elementos. Dichos elementos se definen en el Diseñador o en el Editor de Bloques poniendo en la propiedad <code>ElementosDesdeCadena</code> una sucesión de elementos separados por comas (por ejemplo, <em>opción 1, opción 2, opción 3</em>), o en el Editor de Bloques,  indicando en la propiedad <code>Elementos</code> el nombre de una Lista.</p>
StartActivityMethods=IniciarActividad
StartMethods=Iniciar
StartProgramMethods=InicarPrograma
StartedMovingEvents=ComienzaMovimiento
StartedRecordingEvents=ComienzoDeGrabación
StatusChangedEvents=CambioEnEstado
StopAcceptingMethods=DejarDeAceptar
StopBeforeDisconnectProperties=DetenerAntesDeDesconectar
StopDetectionTimeoutProperties=TiempoMáximoParaDetección
StopFollowingMethods=DejarDeSeguir
StopMethods=Detener
StopProgramMethods=DetenerPrograma
StopSoundPlaybackMethods=DetenerReproducciónSonido
StoppedMovingEvents=FinalizaMovimiento
StoppedRecordingEvents=FinDeGrabación
StoreValueMethods=GuardarValor
StrideLengthProperties=LongitudDeZancada
SystemTimeMethods=HoraDelSistema
TableArrangementHelpStringComponentPallette=<p>Es un elemento para definir el formato, y dentro del cual hay que ubicar los componentes que se desea que se representen en formato tabular.</p>
TagReadEvents=EtiquetaLeída
TagWrittenEvents=EtiquetaEscrita
TakePictureMethods=TomarFoto
TextAlignmentProperties=PosiciónDelTexto
TextBoxHelpStringComponentPallette=<p>Un cuadro para que el usuario ingrese texto. El valor de texto inicial o ingresado por el usuario está en la propiedad <code>Text</code>. Si está en blanco, la propiedad <code>Sugerencia</code>, que aparece como texto tenue en el cuadro, puede proporcionar al usuario orientación sobre qué escribir.</p><p>El <code>MultiLine</code > La propiedad determina si el texto puede tener más de una línea. Para un cuadro de texto de una sola línea, el teclado se cerrará automáticamente cuando el usuario presione la tecla Listo. Para cerrar el teclado para cuadros de texto de varias líneas, la aplicación debe usar el método OcultaTeclado o confiar en que el usuario presione la tecla Atrás.</p><p>La propiedad <code> SoloNúmeros</code> restringe el teclado para aceptar entradas numéricas. solamente.</p><p>Otras propiedades afectan la apariencia del cuadro de texto (<code>AlineaminetoDeTexto</code>, <code>ColorDeFondo</code>, etc.) y si se puede utilizar (<code> Habilitado</code>).</p><p>Los cuadros de texto generalmente se usan con el componente <code>Botón</code>, y el usuario hace clic en el botón cuando se completa la entrada de texto.</p><p >Si el texto ingresado por el usuario no debe mostrarse, use <code>CuadroDeTextoContraseña</code> en su lugar.</p>
TextColorProperties=ColorDeTexto
TextProperties=Texto
TextToSpeechHelpStringComponentPallette=El componente TextoAVoz pronuncia en voz alta un texto determinado. Puede establecer el tono y la velocidad del habla. <p>También puede configurar un idioma proporcionando un código de idioma. Esto cambia la pronunciación de las palabras, no el idioma real hablado. Por ejemplo, configurar el idioma en francés y hablar texto en inglés sonará como si alguien hablara inglés (en) con acento francés.</p> <p>También puede especificar un país proporcionando un código de país. Esto puede afectar la pronunciación. Por ejemplo, el inglés británico (GBR) sonará diferente al inglés estadounidense (EE. UU.). No todos los códigos de país afectarán a todos los idiomas.</p> <p>Los idiomas y países disponibles dependen del dispositivo en particular y se pueden enumerar con las propiedades IdiomasDisponibles y PaísesDisponibles.</p>
TextToWriteProperties=TextoAEscribir
TextingHelpStringComponentPallette=<p>Un componente que, cuando se llama al método <code>EnviarMensaje</code>, enviará el mensaje de texto especificado en la propiedad <code>Mensaje</code> al número de teléfono especificado en la propiedad <code>NúmeroTeléfono</code>.</p> <p>Si la propiedad <code>RecepciónActivada</code> se establece en 1, los mensajes <b>no</b> se recibirán. Si <code>RecepciónActivada</code> está configurado en 2, los mensajes se recibirán solo cuando la aplicación se esté ejecutando. Finalmente, si <code>RecepciónActivada</code> se establece en 3, los mensajes se recibirán cuando la aplicación se esté ejecutando <b>y</b> cuando la aplicación no se esté ejecutando, se pondrán en cola y se mostrará una notificación al usuario. </p> <p>Cuando llega un mensaje, se genera el evento <code>MensajeRecibido</code> y proporciona el número de envío y el mensaje.</p> <p> Una aplicación que incluye este componente recibirá mensajes incluso cuando está en segundo plano (es decir, cuando no está visible en la pantalla) y, más aún, incluso si la aplicación no se está ejecutando, siempre que esté instalada en el teléfono. Si el teléfono recibe un mensaje de texto cuando la aplicación no está en primer plano, mostrará una notificación en la barra de notificaciones. Al seleccionar la notificación, aparecerá la aplicación. Como desarrollador de aplicaciones, probablemente desee brindarles a sus usuarios la capacidad de controlar RecepciónActivada para que puedan hacer que el teléfono ignore los mensajes de texto.</p> <p>Si la propiedad GoogleVoiceActivado es verdadera, los mensajes se pueden enviar Wifi mediante Google Voice. Esta opción requiere que el usuario tenga una cuenta de Google Voice y que la aplicación móvil Voice esté instalada en el teléfono. La opción Google Voice solo funciona en teléfonos compatibles con Android 2.0 (Eclair) o superior.</p> <p>Para especificar el número de teléfono (por ejemplo, 650-555-1212), configure el <code>PhoneNumber</code> propiedad a una cadena de texto con los dígitos especificados (por ejemplo, 6505551212). Se pueden incluir guiones, puntos y paréntesis (por ejemplo, (650)-555-1212), pero se ignorarán; Es posible que no se incluyan espacios.</p> <p>Otra forma de que una aplicación especifique un número de teléfono sería incluir un componente <code>SelectorNúmeroTeléfono</code>, que permite a los usuarios seleccionar números de teléfono entre los almacenados. en los contactos del teléfono.</p>
ThumbPositionProperties=PosiciónDelPulgar
TimeIntervalProperties=IntervaloDeTemporizador
TimePickerHelpStringComponentPallette=<p>Es un botón que cuando se pulsa muestra una ventana que permite al usuario definir una hora.</p>
TimerAlwaysFiresProperties=TemporizadorSiempreSeDispara
TimerEnabledProperties=TemporizadorHabilitado
TimerEvents=Temporizador
TimerIntervalProperties=IntervaloDelTemporizador
TinyDBHelpStringComponentPallette=TinyDB es un componente no visible que puede almacenar datos. <p> Las aplicaciones creadas con App Inventor se inicializan cada vez que se ejecutan: si una aplicación inicializa el valor de una variable y el usuario termina la ejecución de la aplicación, el valor de esa variable se perderá, y no estará disponible la próxima vez que se ejecute la aplicación. TinyDB es un almacén de datos <em>persistente</em> para la aplicación, lo que significa que los datos estarán disponibles cada vez que se abra la aplicación. Un ejemplo de uso puede ser un juego que guarda las puntuaciones más altas cada vez que se juega. </p><p>Los datos son cadenas de texto que se almacenan en <em>etiquetas</em>. Para almacenar datos, se debe de especificar la etiqueta que corresponde a ese dato. Posteriormente, los datos se pueden recuperar con esa misma etiqueta.</p><p> Solamente existe una base de datos para cada aplicación. Aunque se utilicen distintas TinyDBs en una aplicación, todas ellas apuntan al mismo almacén. Se deben utilizar distintas etiquetas para guardar diferentes datos, y no usar diferentes almacenes. TinyDB es única para cada aplicación, y no se puede utilizar para pasar datos a otras aplicaciones instaladas en el dispositivo, pero se sí puede utilizar para pasar datos entre pantallas en la misma aplicación.</p><p> Cuando TinyDB se utiliza con la aplicación Companion, todas las aplicaciones comparten la misma DB. Esto no ocurre cuando la aplicación se empaqueta como un archivo apk. Pero mientras se desarrolla, se debe ser cuidadoso en situaciones en las que las mismas etiquetas se usan para distintas aplicaciones.</p>
TinyWebDBHelpStringComponentPallette=Componente non visible que puede establecer comunicación con un servicio Web para almacenar o recuperar información.
TitleProperties=Título
TopOfRangeProperties=MáximoEnRango
TouchDownEvents=Presionar
TouchUpEvents=Soltar
TouchedEvents=Tocar
TurnClockwiseIndefinitelyMethods=GirarSentidoRelojIndefinidamente
TurnCounterClockwiseIndefinitelyMethods=GirarSentidoContrarioRelojIndefinidamente
TweetMethods=Tuitear
TweetWithImageMethods=TuitearConImagen
TwitPic_API_KeyProperties=TwitPic_API_Key
TwitterHelpStringComponentPallette=Es un componente no visible que permite comunicarse con <a href="http://www.twitter.com" target="_blank">Twitter</a>. Tan pronto como el usuario acceda con su cuenta de  Twitter (y se haya confirmado la autorización con el evento <code>Autorizado</code>), estarán disponibles más operaciones:<ul><li> Buscar en Twitter (<code>BúsquedaTwitter</code>)</li>\n<li> Enviar un Tweet (<code>Tweet</code>)     </li>\n<li> Enviar un Tweet con una Imagen (<code>TweetConImagen</code>)     </li>\n<li> Enviar un mensake directo a un usuario específico (<code>MensajeDirecto</code>)</li>\n <li> Recibir los mensajes más recientes (<code>SolicitarMensajesDirectos</code>)</li>\n <li> Seguir a otros usuarios (<code>Seguir</code>)</li>\n<li> Dejar de seguir a un usuario (<code>DejarDeSeguir</code>)</li>\n<li> Obtener una lista de usuarios que siguen al usuario autorizaod (<code>SolicitarSeguidores</code>)</li>\n <li> Obtener mensajes en la lista de amigos (<code>SolicitarLíneaDeTiempoDeAmigos</code>)</li>\n <li> Obtener las menciones más recientes (<code>SolicitarMenciones</code>)</li></ul></p>\n <p> Se deberán obtener los códigos Comsumer Key y Consumer Secret para acceder a Twitter en  http://twitter.com/oauth_clients/new
userInterfaceComponentPallette=Interfaz de usuario
UriEncodeMethods=CodificaciónUri
UrlProperties=Url
UseFrontProperties=CámaraFrontal
UseGPSProperties=UsarGPS
UserChoiceProperties=SelecciónDeUsuario
UserEmailAddressProperties=EmailDeUsuario
UserEmailAddressSetEvents=ConjuntoDeEmailsDeUsuario
UserIdProperties=IdentificadorDeUsuario
UsernameProperties=NombreDeUsuario
UsesLocationProperties=UtilizaUbicación
UsesLocationVisibleProperties=UsarUbicaciónVisible
ValueStoredEvents=ValorGuardado
VersionCodeProperties=CódigoDeVersión
VersionNameProperties=NombreDeVersión
VerticalArrangementHelpStringComponentPallette=<p>Un elemento de formato en el que se pueden colocar otros elementos que deben aparecer uno debajo de otro (el primero estará arriba, el siguiente debajo, etc). Si deseas colocar elementos en horizontal, use el elemento <code>DisposiciónHorizontal</code> en su lugar.</p>
VibrateMethods=Vibrar
VideoPlayerHelpStringComponentPallette=Es un componente multimedia que puede reproducir vídeos. Cuando se ejecuta la aplicación se abre el ReproductorDeVídeo en un rectángulo de la pantalla. Si el usuario toca el rectángulo se mostrarán dentro del vídeo los controles para manejar la reproducción. También se puede controlar la reproducción del vídeo mediante los métodos <code>Iniciar</code>, <code>Pausar</code>, y <code>BuscarA</code>.<p>Los archivos de vídeo deben estar en formato Windows Media Video (.wmv), 3GPP (.3gpp), o MPEG-4 (.mp4). Para obtener más detalles sobre los formatos legales, consultar <a href="http://developer.android.com/guide/appendix/media-formats.html" target="_blank">Supported Media Formats</a>.</p><p>App Inventor permite utilizar vídeos de hasta 1 MB de tamaño, y el tamaño máximo de una aplicación está limitado a 5 MB, no estando disponibles los 5 MB completos para archivos de vídeo, audio y sonido. Si los archivos son muy grandes pueden producirse errores al empaquetar o al instalar la aplicación, en cuyo caso es necesario reducir los tamaños de los archivos. La mayoría de los programas de edición de vídeo, como Window Movie Maker y Apple iMovie,  permiten reducir el tamaño de los vídeos recortándolos o recodificándolos en un formato más compacto.</p><p>También se puede especificar que el recurso haga referencia a una URL que contenga una fuente de vídeo streaming, pero en ese caso la URL debe apuntar al propio archivo de vídeo, no a un programa que ejecute el vídeo.
VisibilityHiddenProperties=oculto
VisibilityShowingProperties=visible
VisibleProperties=Visible
VolumeProperties=Volúmen
VotingHelpStringComponentPallette=El componente Votación se comunica con un servicio web para recuperar una votacióny enviar los votos de los usuarios. <p>La aplicación debe llamar al método <code>SolicitudVotación</code>, generalmente en el controlador de eventos <code>Inicializar</code>, para obtener la pregunta de la votación y las opciones del servicio web (especificado por la propiedad <code>ServiceURL</code>). Dependiendo de la respuesta del servicio web, el sistema generará uno de los siguientes tres eventos: <ol> <li> <code>VotaciónObtenida</code>, indicando que se recuperaron la pregunta y las opciones de la votación y las propiedades <code>VotaciónPregunta</code> y <code>VotaciónOpciones</code> han sido establecidas.</li> <li> <code>NoAbrirEncuesta</code>, lo que indica que no hay ninguna pregunta de votación disponible.</li> <li> <code>WebServiceError</code>, indicando que el servicio no proporcionó una respuesta legal y proporcionando un mensaje de error.</li> </ol></p> <p>Después de recibir la votación, la aplicación debería permitir al usuario para hacer una elección entre <code>VotaciónOpciones</code> y establecer la propiedad <code>ElecciónUsuario</code> para esa elección. La aplicación también debe configurar <code>IdUsuario</code> para especificar qué usuario está votando.</p> <p>Una vez que la aplicación haya configurado <code>ElecciónUsuario</code> y <code>IdUsuario</code>, la aplicación puede llamar a <code>EnviarVotación</code> para enviar esta información al servicio web. Si el servicio recibe la votación con éxito, se generará el evento <code>ConfirmaciónVotaciónObtenida</code>. De lo contrario, se generará el evento <code>WebServiceError</code> con el mensaje de error apropiado.</p>
WalkStepEvents=Paso
WebHelpStringComponentPallette=Es un componente no visible que permite gestionar solicitudes HTTP como GET, POST, PUT y DELETE.
WebServiceErrorEvents=ErrorEnServicioWeb
WebViewStringProperties=CadenaDeWebView
WebViewerHelpStringComponentPallette=Es un componente para ver páginas Web. Se puede especificar la página de inicio desde el Diseñador, o en el Editor de Bloques. Se puede definir el visor para seguir los enlaces al tocar en ellos, y para que los usuarios puedan rellenar formularios. Atención: No es un navegador con funcionalidad completa. Por ejemplo, al pulsar la tecla Atrás del teléfono se saldrá de la aplicación, es decir, no nos llevará a la página anterior.<p>Se puede utilizar la propiedad <code>VisorWeb.CadenaDeWebView</code> para tener comunicación entre nuestra aplicación y el código Javascript de la página que está abierta en el VisorWeb. Desde la aplicación se puede gestionar el contenido de CadenaDeWebView. Dentro del VisorWeb se puede incluir código Javascript que haga referencia al objeto window.AppInventor, utilizando los métodos <em>getWebViewString</em> y <em>setWebViewString</em>. <p>Por ejemplo, si se abre desde el VisorWeb una página que contenga el comando Javascript <br><em>document.write(”La respuesta es”+window.AppInventor.getWebViewString());</em> </br> y ponemos en VisorWeb.CadenaDeWebView el valor “hola”, la página web mostrará <br><em>La respuesta es hola</em></br>. Y si la página web contiene código Javascript que ejecuta el comando  <br><em>window.AppInventor.setWebViewString("hola desde Javascript")</em></br>, entonces el valor de la propiedad CadenaDeWebView será <br><em>hola desde Javascript</em></br>.
WeekdayMethods=DíaDeLaSemana
WeekdayNameMethods=NombreDíaDeLaSemana
WheelDiameterProperties=DiámetroDeRueda
WidthProperties=Ancho
WithinRangeEventEnabledProperties=EventoHabilitadoEnRango
WithinRangeEvents=EnRango
WriteTypeProperties=TipoDeEscritura
XAccelProperties=XAccel
XProperties=X
YAccelProperties=YAccel
YProperties=Y
YandexTranslateHelpStringComponentPallette=Utilice este componente para traducir palabras y oraciones entre diferentes idiomas. Este componente necesita acceso a Internet, ya que solicitará traducciones al servicio Yandex.Translate. Especifique el idioma de origen y de destino en el formato origen-destino utilizando códigos de idioma de dos letras. Entonces "en-es" se traducirá del inglés al español, mientras que "es-ru" se traducirá del español al ruso. Si omite el idioma de origen, el servicio intentará detectar el idioma de origen. Por lo tanto, al proporcionar solo "es" se intentará detectar el idioma de origen y traducirlo al español.<p /> Este componente funciona con el servicio de traducción de Yandex. Consulte http://api.yandex.com/translate/ para obtener más información, incluida la lista de idiomas disponibles y los significados de los códigos de idioma y de estado. <p />Nota: La traducción se realiza de forma asincrónica en segundo plano. Cuando se completa la traducción, se activa el evento "ObtenidaTraducción".
YearMethods=Año
YearProperties=Año
ZAccelProperties=ZAccel
ZProperties=Z
aboutMenuItem=Acerca de
accelerometerSensorComponentPallette=Acelerómetro
activityStarterComponentPallette=IniciadorActividad
addButton=Subir archivo...
addFormButton=Añadir ventana ...
addFormError=Error del servidor: no se puede añadir el formulario. ¡Por favor, inténtalo de nuevo más tarde!
addScreenButton=Añadir
addressParams=dirección
adminTabName=Administrar
altitudeParams=altitud
angleParams=ángulo
animTypeParams=tipoDeAnimación
anyComponentLabel=Cualquier componente
argumentsParams=argumentos
assetListBoxCaption=Medios
automaticCaption=Automático
azimuthParams=acimut
backButton=Anterior
badAlignmentPropertyEditorForArrangement=Error del sistema: editor de propiedades de alineación incorrecto para disposición horizontal o vertical.
reservedNameError=Los nombres en la siguiente lista no se puede utilizar como nombres para Componentes: CsvUtil, Double, Float, Integer, JavaCollection, JavaIterator, KawaEnvironment, Long, Short, SimpleForm, String, Pattern, YailDictionary, YailList, YailNumberToString, YailRuntimeError, abstract, continue, for, new, switch, assert, default, goto, package, synchronized, boolean, do, if, private, this, break, double, implements, protected, throw, byte, else, import, public, throws, case, enum, instanceof, return, transient, catch, extends, int, short, try, char, final, interface, static, void, class, finally, long, strictfp, volatile, const, float, native, super, while, begin, def, foreach, forrange, JavaStringUtils, quote
badValueForHorizontalAlignment=Error de Sistema: Valor incorrecto - {0} - para Alineamiento Horizontal.
badValueForVerticalAlignment=Error de Sistema: Valor incorrecto - {0} - para Alineamiento Vertical.
ballComponentPallette=Pelota
barcodeScannerComponentPallette=LectorCódigoDeBarras
barcodeTitle=Enlace de código para {0}
barcodeWarning=Nota: Este código será válido las dos próximas horas. Consultar {0} el FAQ {1} para obtener información sobre cómo compartir su aplicación con otras personas.
bashWarningDialogButtonContinue=Continuar con varias sesiones
bashWarningDialogButtonNo=No utilizar varias sesiones
bashWarningDialogMessage=<p><font color=red>ATENCIÓN:</font> Se ha abierto otra sesión de  App Inventor para esta cuenta. Decidee si quieres continuar con ambas sesiones, pero trabajar en App Inventor con más  una sesión al mismo tiempo puede causar la pérdida de bloques de forma que no puedan recuperarse más tarde del servidor de App Inventor.</p><p>Se recomienda no abrir varias sesiones al mismo tiempo para la misma cuenta. Pero si realmente necesitas trabajar así, puedes  exportar cada poco tiempo tu proyecto a un ordenador local, de modo que tengas de una copia de seguridad independiente del servidor de App InventorPulsa "Exportar" en el menú de proyectos para exportarlo.</p>
bashWarningDialogText=¿Seguro que quieres continuar con varias sesiones?
blackColor=Negro
blockSelectorBoxCaption=Bloques
blocksEditorIsOpenButton=El editor de bloques está abierto
blocksEditorTabName={0} bloques
blocksNotSaved=El área de bloques no se ha cargado correctamente. Los cambios realizados en los bloques de la pantalla {0} no se guardarán.
blocksTruncatedDialogButtonHTML=Por favor, espera %1 segundos...
blocksTruncatedDialogButtonNoSave=Restaurar la versión previa.
blocksTruncatedDialogButtonSave=Guardar la pantalla vacía ahora.
blocksTruncatedDialogMessage=<p>Parece ser que se han borrado todos los bloques de <b>%1</b> Si no has borrado todos los bloques a propósito, puede que se trate de una anomalía en el sistema.</p><p><ul><li>Pulsa "De acuerdo, guardar la pantalla vacía" para guardar la pantalla en blanco</li><li>Pulsa "No, no guardar" para recuperar una versión guardada previamente</li></ul></p>
blocksTruncatedDialogText=El Editor de Bloques está Vacío
blueColor=Azul
bluetoothClientComponentPallette=ClienteBluetooth
bluetoothServerComponentPallette=ServidorBluetooth
buildError=Error del servidor: no se ha podido realizar la compilación. ¡Por favor, inténtalo de nuevo más tarde!
buildFailedError=¡Ha fallado la compilación!
buildServerBusyError=El servidor de compilación está ocupado. Por favor, inténtalo pasados unos minutos.
buildServerDifferentVersion=El servidor de compilación no es compatible con esta versión de App Inventor.
buildTabName=Generar
builtinBlocksLabel=Integrados
builtinColorsLabel=Colores
builtinControlLabel=Control
builtinListsLabel=Listas
builtinLogicLabel=Lógica
builtinMathLabel=Matemáticas
builtinProceduresLabel=Procedimientos
builtinTextLabel=Texto
builtinVariablesLabel=Variables
button1TextParams=textoBoton1
button2TextParams=textoBotón2
buttonComponentPallette=Botón
buttonTextParams=textoEnBotón
camcorderComponentPallette=Grabador
cameraComponentPallette=Cámara
cancelBlocksEditorButton=Abriendo el editor de bloques... (haz clic para cancelar)
cancelButton=Cancelar
cancelScreenButton=No añadir
cancelableParams=cancelable
canvasComponentPallette=Lienzo
centerTextAlignment=centro
checkBoxComponentPallette=CasillaDeVerificación
checkpointButton=Punto de control ...
checkpointMenuItem=Punto de control
checkpointNameLabel=Nombre del punto de control:
checkpointTitle=Punto de control - {0}
choiceParams=elección
chooseProject=Por favor selecciona un proyecto existente o crea uno nuevo.
clearButton=Limpiar
clipParams=clip
clockComponentPallette=Reloj
cmMinimize=Comprimir
cmResize=Cambiar tamaño…
cmRestore=Expandir
colorParams=color
commandParams=comando
componentParams=componente
confirmDeleteKeystore=¿Seguro que quieres borrar tu archivo de keystore? Si lo haces, tu archivo de keystore existente se eliminará completamente del servidor de App Inventor. Se creará automáticamente un nuevo, pero diferente, archivo de keystore la próxima vez que empaquetes un proyecto para el teléfono. Si ya has publicado aplicaciones en Google Play Store con el archivo que vas a eliminar, perderás la capacidad para actualizarlas. Cualquier proyecto que empaquetes a partir de ahora se firmará utilizando el nuevo keystore. Cambiar el keystore afecta a la capacidad para reinstalar aplicaciones instaladas previamente. SI no estás seguro de que esto es lo que quieres, por favor, consulta la documentación sobre keystores haciendo clic en ”Aprender”, luego ”Solución de problemas”, y después en ”Keystores y firmado de aplicaciones”No se puede deshacer la eliminación del archivo de almacén de claves.
confirmDeleteManyProjects=¿Estás seguro de que quieres borrar estos proyectos: {0}?
confirmDeleteSingleProject=¿Estás seguro de que quieres borrar este proyecto? {0}
confirmOverwrite=Solicitud para guardar {1}\n\nYa existe un archivo con nombre {0} en este proyecto.\n¿Quieres borrar ese archivo más antiguo?\nTambién se eliminará  cualquier otro archivo cuyo nombre entre en conflicto con {1}.
confirmOverwriteKeystore=¿Quieres sobreescribir tu archivo de keystore? Si lo haces, tu archivo de keystore se eliminará definitivamente del servidor de App Inventor. \n\n Si ya has publicado aplicaciones en Google Play Store utilizando el keystore que vas a eliminar, ten en cuenta que ya no podrás actualizarlas. \n\n Cualquier proyecto que se empaquete a partir de ese momento se firmará con tu nuevo keystore. Cambiar de keystore también afecta a la capacidad para reinstalar aplicaciones instaladas anteriormente. Si no estás seguro de querer hacer estos, lee por favor la documentación sobre keystores haciendo clic en ”Aprender”, luego en ”Solución de problemas”, y después en Keystores y Firmado de aplicaciones”\nn Una vez sobreescrito tu archivo de keystore no se podrá volver atrás.
connectButton=Conectar
connectButton=Conectar
connectTabName=Conectar
connectivityComponentPallette=Conectividad
contactPickerComponentPallette=SelectorDeContacto
contentsParams=contenidos
copyProjectError=Error del servidor: no se ha podido copiar el proyecto. ¡Por favor, inténtalo de nuevo más tarde!
copyingRpcMessage=Copiando…
corruptionDialogMessage=<p><b>Se han encontrado errores al leer el proyecto</b></p><p>Para evitar daños se ha cerrado esta sesión. Puedes cerrar esta ventana.</p>
corruptionDialogText=Error  al leer el proyecto
countParams=contar
createNoProjectsDialogMessage1=<p>Aún no tienes ningún proyecto en App Inventor 2. Para aprender a utilizar App Inventor haz clic en el enlace Guía que puedes ver en la parte superior derecha de la ventana, o crea tu primer proyecto, haciendo clic en el botón “Nuevo” de la parte superior izquierda de la ventana.
createNoProjectsDialogText=¡Bienvenido a App Inventor 2!
createNoprojectsDialogMessage2=¡Feliz creación!
createProjectError=Error del servidor: no se ha podido crear el proyecto. ¡Por favor, inténtalo más tarde!
createWelcomeDialogButton=Continuar
createWelcomeDialogText=¡Bienvenido a App Inventor!
currentXParams=XActual
currentYParams=YActual
cyanColor=Turquesa
darkGrayColor=Gris oscuro
datePickerComponentPallette=SelectorDeFecha
daysParams=días
defaultButtonShape=por defecto
defaultCheckpointProjectName={0}_punto de control{1}
defaultColor=Por defecto
defaultFontTypeface=por defecto
defaultRpcMessage=Cargando…
defaultSaveAsProjectName={0}_copiar
defaultScreenAnimation=Por defecto
defaultText=Por defecto
deleteButton=Borrar
deleteFileCommand=Borrando…
deleteFileError=Error del servidor: no se ha podido borrar el archivo. ¡Por favor, inténtalo de nuevo más tarde!
deleteKeystoreError=Error del servidor: no se ha podido eliminar tu archivo de keystore.
deleteKeystoreMenuItem=Borrar keystore
deleteProjectButton=Mover a Papelera
deleteProjectError=Error del servidor: no se ha podido eliminar el proyecto. ¡Por favor, inténtalo de nuevo más tarde!
trashProjectMenuItem=Borrar proyecto
deletingRpcMessage=Eliminando…
destinationParams=destino
dismissButton=Descartar
distanceParams=distancia
doFaultMethods=EjecutarFallo
done=Hecho
downloadAllAlert=La descargar de tus proyectos puede tomar un tiempo. Por favor, ten paciencia...
downloadFileCommand=Descargar a mi ordenador
downloadKeystoreError=Error del servidor: no se ha podido descargar tu archivo de keystore.
downloadKeystoreMenuItem=Exportar keystore
downloadToComputerMenuItem=App (guardar archivo .apk en mi ordenador)
downloadUserSourceDialogTitle=Descargar
downloadUserSourceMenuItem=Descargar
downloadingRpcMessage=Descargando al dispositivo…
dpsCaption=DP
dpsSummary={0} DPs
draggedSpriteParams=SpriteArrastrado
drawingAndAnimationComponentPallette=Dibujo y animación
duplicateComponentNameError=¡Nombre de componente duplicado!
duplicateFormNameError=¡Nombre de pantalla duplicado!
duplicateProjectNameError={0} ya existe. No se puede crear otro proyecto con el mismo nombre.
durationMsParams=duraciónMs
edgeParams=borde
emailAddressParams=direcciónDeCorreo
emailPickerComponentPallette=SelectorDeEmail
emulatorMenuItem=Emulador
encodingParams=codificación
endParams=fin
errorGeneratingYail=No se ha podido generar el código para {0}.
errorNumberParams=númeroDeError
experimentalComponentPallette=Experimental
exportAllProjectsMenuItem=Exportar todos los proyectos
exportProjectMenuItem=Exportar a mi ordenador el proyecto (.aia) seleccionado
fadeScreenAnimation=Fundido
feedbackMenuItem=Informar de un problema
feedbackTabName=Informar de un problema
fileComponentPallette=Archivo
fileNameParams=nombreDeArchivo
fileParams=archivo
fileTooLargeError=Error: no se ha podido subir el archivo porque es demasiado grande
fileUploadError=Error del servidor: no se ha podido subir el archivo. ¡Por favor, inténtalo más tarde!
fileUploadWizardCaption=Subir archivo…
fileUploadingMessage=Subiendo el archivo {0} al servidor de App Inventor
filenameBadSize=Los nombres de archivo deben contener uno y cien caracteres.
fillParentCaption=Ajustar al contenedor
finalDialogMessage=<p><b>La sesión se ha cerrado, puedes cerrar esta ventana</b></p>
finalDialogText=La sesión se ha cerrado
flungSpriteParams=SpriteLanzado
followers2Params=seguidores2
formCountErrorLabel=AVISO: El número de pantallas para esta aplicación podría exceder los límites de App Inventor. Haz clic en <a target="_blank" href="/reference/other/manyscreens.html">here</a> para obtener información sobre la creación de aplicaciones con mucha  pantallas.<p>¿Realmente quieres añadir otra pantalla?</p>
formNameLabel=Nombre de la pantalla:
forumsMenuItem=Foros
frequencyHzParams=frequenciaHz
fromParams=de
functionNameParams=nombreDeFunción
fusiontablesControlComponentPallette=Fusiontables
galleryTabName=Galería
gameClientComponentPallette=ClienteDeJuego
generateYailMenuItem=Generar YAIL
getMotdFailed=Error al contactar con el servidor para obtener el MOTD.
getStartedMenuItem=Cómo empezar
GetVersionNameMethods=ObtenerNombreDeVersión
gitBuildId=Built: {0} Versión: {1}
grayColor=Gris
greenColor=Verde
guideTabName=Guía
hardResetConnectionsMenuItem=Reiniciar completamente
hdrClose=Cerrar
hdrMinimize=Comprimir
hdrRestore=Expandir
hdrSettings=Configuración
headingParams=dirección
heightPropertyCaption=Alto
helpTabName=Ayuda
hideWarnings=Ocultar avisos
hintPropertyValue=Pista para {0}
horizontalAlignmentChoiceCenter=Centro
horizontalAlignmentChoiceLeft=Izquierda
horizontalAlignmentChoiceRight=Derecha
horizontalArrangementComponentPallette=DisposiciónHorizontal
hoursParams=horas
htmlTextParams=textoHtml
imageComponentPallette=Imagen
imageParams=imagen
imagePickerComponentPallette=SelectorDeImagen
imageSpriteComponentPallette=SpriteImagen
importProjectMenuItem=Importar proyecto (.aia) desde mi ordenador…
importTemplateButton=Importar proyecto (.aia) desde un repositorio ...
inputNewUrlCaption=Indica una URL...
installURLMethods=instalarURL
instanceIdParams=identificadorDeInstancia
instantParams=instante
internalError=Se ha producido un error interno.
internalErrorClickOkDebuggingView=Se ha producido un error interno. Pulsa ”ok” para obtener más información.
internalErrorReportBug=Se ha producido un error interno. ¿Quieres informar de una anomalía?
internalErrorSeeDebuggingView=Se ha producido un error interno. Revisa la ventana de depuración.
internalUseComponentPallette=Sólo para uso interno
invalidSessionDialogButtonContinue=Continuar con ambas sesiones
invalidSessionDialogButtonCurrent=Hacer que esta sea la sesión activa
invalidSessionDialogButtonEnd=Cerrar Esta Sesión
invalidSessionDialogMessage=<p><font color=red>Warning:</font> La sesión ha caducado.</p><p>Esta cuenta de App Inventor se ha abierto desde otra ubicación. Utilizar una cuenta desde dos ubicaciones diferentes al mismo tiempo puede estropear tus proyectos.</p><p>Utiliza uno de los botones de abajo para:<ul><li>Finalizar esta sesión.</li><li>Hacer que esta sea la sesión activa, y que las otras caduquen.</li><li>Continuar con ambas sesiones.</li></ul></p>
invalidSessionDialogText=La sesión ha caducado
invalidUserIdOrProjectIdError=Por favor, indica una dirección de correo electrónico del usuario o un identificador, y también el nombre o identificador del proyecto que se va a descargar. Los identificadores son numéricos, y puede provenir de los archivos de registro del sistema, o de navegar por el Datastore. Si utilizas una dirección de correo, esta debe coincidir exactamente con la dirección almacenada en el Datastore. Igualmente, los nombres de proyectos deben coincidir exactamente. En ambos casos deben respetarse las mayúsculas y minúsculas.
isBuildingButton=Empaquetando…
isConnectedMethods=EstáConectado
isDirectMethods=esDirecto
jsonTextParams=textoJson
keystoreUploadError=Error del servidor: no se ha podido subir el keystore. Por favor, inténtalo más tarde!
keystoreUploadWizardCaption=Subir keystore…
labelComponentPallette=Etiqueta
landscapeScreenOrientation=Horizontal
languageToTranslateToParams=lenguajeAlQueTraducir
latitudeParams=latitud
layoutComponentPallette=Disposición
leftTextAlignment=izquierda
legoMindstormsComponentPallette=LEGO® MINDSTORMS®
libraryMenuItem=Biblioteca
lightGrayColor=Gris claro
listParams=lista
listPickerComponentPallette=SelectorDeLista
listViewComponentPallette=VisorDeLista
loadError=Error del servidor: no se puede cargar el archivo. ¡Por favor, inténtalo de nuevo más tarde!
locationNameParams=nombreDeUbicación
locationSensorComponentPallette=SensorDeUbicación
longToastLength=Largo
longitudeParams=longitud
magentaColor=Violeta
mailboxParams=buzón
makePublicParams=hacerPúblico
malformedComponentNameError=Los nombres de los componentes sólo pueden contener letras, números, y símbolos de subrayado, y deben comenzar con una letra
malformedFormNameError=Los nombres de las pantallas solo pueden contener letras, números, símbolos de subrayado, y deben comenzar con una letra
malformedInputError=¡Entrada mal formada!
malformedProjectNameError=Los nombres de proyecto deben comenzar con una letra y contener únicamente letras,  números, y símbolos de subrayado
mediaComponentPallette=Medios
mentionsParams=menciones
messageParams=mensaje
messageTextParams=textoDeMensaje
messagesOutputBoxCaption=Mensajes
messagesParams=mensajes
millisParams=milisegundos
millisecondsParams=milisegundos
millisecsParams=milisegundos
minutesParams=minutos
modeParams=modo
moderateAccelerometerSensitivity=moderada
monospaceFontTypeface=monoespacio
monthsParams=meses
moreActionsButton=Más acciones
moreInformation=Más información
motdBoxCaption=¡Bienvenido a App Inventor!
motorPortLetterParams=letraDelMotor
msParams=ms
myProjectsTabName=Mis proyectos
nameParams=nombre
nearFieldComponentPallette=CampoCercano
newFormTitle=Nueva pantalla
newNameLabel=Nuevo nombre:
newProjectMenuItem=Comenzar un proyecto nuevo
newUrlLabel=Plantillas Url: 
newYoungAndroidProjectWizardCaption=Crear un nuevo proyecto de App Inventor
newerVersionComponentException=No se puede cargar el proyecto con {0} versión {1} (el número máximo para la versión es {2}.
newerVersionProject=Este proyecto se guardó con una versión más reciente del sistema App Inventor. Se intentará cargar el proyecto, pero es posible que existan  problemas de compatibilidad.
nextButton=Siguiente
noAssetSelected=¡Es necesario seleccionar un recurso!
noComponentSelected=¡Es necesario seleccionar un componente!
noFileSelected=Por favor, selecciona el archivo que quieres subir.
noKeystoreToDownload=No existe un archivo de keystore para descargar.
noProjectSelectedForDelete=Por favor, selecciona el proyecto que quieres borrar
noUpgradeStrategyException=No existe estrategia para actualizar {0} de la versión {1} a la {2}.
nonVisibleComponentsHeader=Componentes no visibles
noneCaption=Ninguno
noneColor=Ninguno
noneScreenAnimation=Ninguno
nonnumericInputError=El valor debe ser un número entero mayor o igual que 0
noprojectDialogTitle=No se ha seleccionado un proyecto
noprojectDuringConnect=¡Antes de conectarte debes crear o seleccionar un proyecto!
notAFloat={0} no es un número válido
notAnInteger={0} no es un entero válido
notKeystoreError=¡El archivo seleccionado no es un keystore!
notProjectArchiveError=El proyecto seleccionado no es un archivo fuente de proyecto!\nLos archivos fuente de proyecto son archivos aia.
noticeParams=aviso
notifierComponentPallette=Notificador
numberOfBytesParams=númeroDeBytes
numberParams=número
nxtColorSensorComponentPallette=Nxt SensorDeColor
nxtDirectCommandsComponentPallette=NxtComandosDirectos
nxtDriveComponentPallette=NxtMotor
nxtLightSensorComponentPallette=Nxt SensorDeLuz
nxtSoundSensorComponentPallette=Nxt SensorDeSonido
nxtTouchSensorComponentPallette=NxtSensorDePresión
nxtUltrasonicSensorComponentPallette=NxtSensorDeUltrasonido
odeLogBoxCaption=Mensajes del desarrollador
okButton=Aceptar
oldNameLabel=Nombre anterior:
openBlocksEditorButton=Abrir el Editor de Bloques
orangeColor=Naranja
orientationSensorComponentPallette=SensorDeOrientación
otherParams=otro
otherScreenNameParams=nombreDeOtraPantalla
ovalButtonShape=oval
packagingRpcMessage=Empaquetando…
paletteBoxCaption=Paleta
passwordTextBoxComponentPallette=CampoDeContraseña
pathParams=camino
phoneCallComponentPallette=LlamadaDeTfno
phoneNotConnected=El teléfono no está conectado.
phoneNumberPickerComponentPallette=SelectorNúmeroTfno
pinkColor=Rosa
pitchParams=tono
playerComponentPallette=Reproductor
playerEmailParams=emailDelJugador
playerIdParams=identificadorDeJugador
portraitScreenOrientation=Vertical
powerParams=potencia
prevXParams=XPrevio
prevYParams=YPrevio
previewPhoneSize=Tamaño del teléfono
previewTabletSize=Tamaño de la tablet
previousCheckpointsLabel=Puntos de control anteriores:
privacyLink=Privacidad
privacyTermsLink=Política de privacidad y condiciones de uso
programNameParams=nombreDePrograma
projectDateCreatedHeader=Fecha de creación
projectDateModifiedHeader=Fecha modificación
projectIdLabel=Identificador o nombre del proyecto:
projectInformationRetrievalError=Error del servidor: no se ha podido recuperar la información del proyecto. ¡Por favor, inténtalo de nuevo más tarde!
projectListBoxCaption=Proyectos
projectLoadError=Error del servidor: no se ha podido cargar el proyecto. ¡Por favor, inténtalo de nuevo más tarde!
projectMenuItem=Mis proyectos
projectNameHeader=Nombre
projectNameLabel=Nombre del proyecto:
projectUploadError=Error del servidor: no se ha podido subir el proyecto. ¡Por favor, inténtalo de nuevo más tarde!
projectUploadWizardCaption=Importar proyecto...
projectWasUpgraded=Este proyecto se creó con una versión anterior del sistema de App Inventor, y se actualizó a la nueva versión. {0}
projectsTabName=Proyectos
propertiesBoxCaption=Propiedades
providerParams=proveedor
queryParams=consulta
rParams=r
reallyDeleteComponent=Borrando este componente se borrarán todos los bloques asociados a él en el editor de bloques. ¿Estás seguro de que deseas borrarlo?
reallyDeleteFile=¿Deseas realmente borrar este archivo? Se eliminará del servidor de App Inventor. Es posible, además, que algún componente de la aplicación siga haciendo referencia al archivo borrado, y sea necesario modificarlo.
reallyDeleteForm=Borrar esta pantalla la eliminará por completo de tu proyecto. También se borrarán todos los componentes y bloques asociados a ella.\n Una vez aceptado el borrado no podrás volver atrás.\n ¿Estás seguro de que quieres hacerlo {0}?
recipientsParams=recipientes
rectButtonShape=rectangular
redColor=Rojo
regulationModeParams=modoDeRegulación
relativeParams=relativo
removeFormButton=Eliminar ventana
renameButton=Cambiar nombre
renameTitle=Renombrar componente
resetConnectionsMenuItem=Reiniciar conexión
responseCodeParams=códigoDeRespuesta
responseContentParams=contenidoDeRespuesta
responseParams=respuesta
responseTypeParams=tipoDeRespuesta
resultParams=Resultado
rightTextAlignment=derecha
rollParams=lanzar
roundedButtonShape=redondeado
runStateParams=estadoDeEjecución
rxDataLengthParams=tamañoDeDatosrx
sameAsComponentTypeNameError=El nombre del componente no puede ser el mismo que el de un tipo de componente
sansSerifFontTypeface=sans serif
saveAsButton=Exportar a Archivo ...
saveAsMenuItem=Guardar proyecto como…
saveAsTitle=Guardar como - {0}
saveButton=Guardar
saveError=Error del servidor: no se puede guardar el archivo. ¡Por favor, inténtalo de nuevo más tarde!
saveErrorMultipleFiles=Error del servidor: no ha sido posible guardar uno o más archivos. ¡Por favor, inténtalo de nuevo más tarde!
saveMenuItem=Guardar proyecto
savedProject=Proyecto guardado en {0}
savingRpcMessage=Guardando…
screensButton=Pantallas …
searchResultsParams=resultadosDeBúsqueda
secondsParams=segundos
secureParams=seguro
seedParams=semilla
selectionParams=selección
senderParams=remitente
sensorModeParams=modoDeSensor
sensorPortLetterParams=letraDelSensor
sensorScreenOrientation=Sensor
sensorTypeParams=tipoDeSensor
sensorsComponentPallette=Sensores
serifFontTypeface=serif
serverUnavailable=El servidor se encuentra inaccesible temporalmente. ¡Inténtalo de nuevo más tarde!
serviceNameParams=nombreDeServicio
setAssetsLoadedMethods=DefinirRecursosCargados
setHmacSeedReturnCodeMethods=DefinirCódigoRetornoSemillaHmac
settingsLoadError=Error del servidor: no se ha podido cargar la configuración. ¡Por favor, inténtalo más tarde!
settingsSaveError=Error del servidor: no se ha podido guardar la configuración. ¡Por favor, inténtalo de nuevo más tarde!
sharingComponentPallette=Compartir
shortToastLength=Corto
showBarcodeMenuItem=App (generar código QR para el archivo .apk)
showHiddenComponentsCheckbox=Mostrar en el Visor los componentes ocultos
showSurveySplashButtonLater=Abrirlo más tarde
showSurveySplashButtonNever=No rellenar el cuestionario
showSurveySplashButtonNow=Acceder al cuestionario
showSurveySplashMessage=<h2>Por favor, rellena un breve cuestionario para que podamos conocer un poco más de los usuarios y mejorar MIT App Inventor.</h2>
showWarnings=Mostrar avisos
shutdownMethods=Apagar
signOutLink=Salir de la sesión
simpleStepsParams=pasosSimples
slideHorizontalScreenAnimation=Desplazamiento horizontal
slideVerticalScreenAnimation=Desplazamiento vertical
sliderComponentPallette=Deslizador
socialComponentPallette=Social
soundComponentPallette=Sonido
soundParams=sonido
soundRecorderComponentPallette=GrabadorDeSonidos
sourceParams=fuente
sourceStructureBoxCaption=Componentes
speechRecognizerComponentPallette=ReconocimientoDeVoz
speedParams=velocidad
spinnerComponentPallette=Desplegable
startHTTPDMethods=IniciarHTTPD
startParams=comienzo
startXParams=XInicial
startYParams=YInicial
statusParams=estado
storageComponentPallette=Almacenamiento
strongAccelerometerSensitivity=robusta
switchLanguageButton=Idioma
switchToBlocksEditorButton=Bloques
switchToDebugMenuItem=Cambiar al panel de depuración
switchToFormEditorButton=Diseñador
tabNameDebugging=Depuración
tabNameDesign=Diseñar
tableArrangementComponentPallette=DisposiciónTabular
tachoLimitParams=límiteDeVelocímetro
tagFromWebDBParams=etiquetaDeWebDB
tagParams=etiqueta
targetParams=objetivo
templateUploadNewUrlCaption=Añadir la dirección URL de una nueva librería de plantilla
templateUploadWizardCaption=Crear un proyecto a partir de una plantilla
termsLink=Condiciones
textAnyComponentLabel=Cualquier 
textBoxComponentPallette=CampoDeTexto
textParams=texto
textPropertyValue=Texto para {0}
textReceivingChoiceAlways=Siempre
textReceivingChoiceForeground=Primer plano
textReceivingChoiceOff=Desactivado
textToSpeechComponentPallette=TextoAVoz
textToTranslateParams=TextoATraducir
textingComponentPallette=EnviarTexto
thumbPositionParams=posiciónDelPulgar
timePickerComponentPallette=SelectorDeHora
timelineParams=cronología
tinyDBComponentPallette=TinyBD
tinyWebDBComponentPallette=MiniWebDB
titleParams=título
titleYoungAndroid=MIT App Inventor 2
touchedSpriteParams=SpriteTocado
translationParams=traducción
troubleshootingMenuItem=Solución de problemas
turnRatioParams=ratioDeGiro
tutorialsMenuItem=Tutoriales
twitterComponentPallette=Twitter
typeParams=tipo
unableToCompile=App Inventor no ha podido compilar el proyecto. <br /> El error de compilación es <br /> {0}.
unexpectedProblem=Ha ocurrido un problema al cargar este proyecto. {0}
uninitializedComponentPallette=NoInicializado
unspecifiedScreenOrientation=Sin especificar
upgradeDetailLoggerReplacedWithNotifier=El componente Logger con nombre {0} se cambió a componente Notificador.
uploadKeystoreError=Error del servidor: no se ha podido cargar tu archivo de keystore.
uploadKeystoreMenuItem=Importar keystore
urlParams=url
usbMenuItem=USB
userIdLabel=Identificador de usuario o dirección de correo (respetar mayúsculas/minúsculas):
userParams=usuario
userScreenOrientation=Usuario
uuidParams=uuid
valueFromWebDBParams=valorDeWebDB
valueIfTagNotThereParams=valorSiEtiquetaNoExiste
valueToStoreParams=valorAGuardar
verticalAlignmentChoiceBottom=Abajo
verticalAlignmentChoiceCenter=Centro
verticalAlignmentChoiceTop=Arriba
verticalArrangementComponentPallette=DisposiciónVertical
veryOldProject=Este proyecto se guardó con una pre-versión del sistema App Inventor. Se intentará cargar el proyecto, pero es posible que existan problemas de compatibilidad.
videoPlayerComponentPallette=ReproductorDeVídeo
viewerBoxCaption=Visor
votingComponentPallette=Votación
walkStepsParams=pasos
weakAccelerometerSensitivity=débil
webComponentPallette=Web
webViewerComponentPallette=VisorWeb
weeksParams=semanas
whiteColor=Blanco
widthPropertyCaption=Ancho
wildcardParams=comodín
wrongNumberProjectsSelected=Debe seleccionar un proyecto
x1Params=x1
x2Params=x2
xAccelParams=xAccel
xParams=x
xvelParams=velocidadx
y1Params=y1
y2Params=y2
yAccelParams=yAccel
yParams=y
yailGenerationError=Ha ocurrido un error al generar Yail para la pantalla {0}:{1}. Por favor, arréglalo e intenta empaquetar de nuevo.
yandexTranslateComponentPallette=TraductorYandex
yearsParams=años
yellowColor=Amarillo
yvelParams=velocidady
zAccelParams=zAccel
zoomScreenAnimation=Zoom
# Description: 
AbsoluteStrengthPropertyDescriptions=Indica la fuerza absoluta del campo
# Description: 
AccelerationChangedEventDescriptions=Indica que la aceleración cambió en la dimensión X, Y y/o Z.
# Description: 
AbsoluteStrengthProperties=FuerzaAbsoluta
# Description: 
AccelerometerSensor__AvailablePropertyDescriptions=Devuelve un valor que indica si el acelerómetro está disponible en el dispositivo.
# Description: 
AccelerometerSensor__EnabledPropertyDescriptions=Si es verdadero, el sensor generará eventos. Si no, no se generarán eventos incluso si el dispositivo es acelerado o sacudido.
# Description: 
AccelerometerSensor__LegacyModePropertyDescriptions=Anterior a la versión que agregó esta propiedad, el componente SensorAcelerómetro pasaba valores del sensor directamente de como los recibía del sistema Android. Sin embargo, estos valores no compensan para tablets que por defecto usan el modo Paisaje, requiriendo que el programador de MIT App Inventor lo compense. Sin embargo, compensar resultaría en valores incorrectos en dispositivos en modo Retrato como teléfonos. Ahora se detecta el modo Paisaje en tablets y se realiza la compensación. Sin embargo, si tu proyecto ya está compensando el cambio, ahora obtendrás valores erróneos. Aunque nuestra solución preferida es que actualices tu proyecto, también puedes ajustar esta propiedad a "verdadero" y nuestro código de compensación se desactivará. Nota: Recomendamos que actualices tu proyecto ya que podríamos quitar esta propiedad en una versión futura.
# Description: 
AccelerometerSensor__MinimumIntervalPropertyDescriptions=El intervalo mínimo, en milisegundos, entre sacudidad del teléfono
# Description: 
AccuracyPropertyDescriptions=La medida más reciente de exactitud, en metros. Si no hay un valor disponible, devuelve 0.
# Description: 
ActionBarProperties=BarraDeAcción
# Description: 
ActionBarPropertyDescriptions=Propiedad de la BarraDeAcción
# Description: 
ActionPropertyDescriptions=Devuelve la acción que será utilizada para iniciar la actividad.
# Description: 
ActivityCanceledEventDescriptions=Evento generado si este InciadorDeActividad finaliza debido a que la actividad fue cancelada.
# Description: 
ActivityCanceledEvents=ActividadCancelada
# Description: 
ActivityClassPropertyDescriptions=Devuelve la clase del componente específico que será iniciado.
# Description: 
ActivityPackagePropertyDescriptions=Devuelve el paquete del componente específico que será iniciado.
# Description: 
AccentColorPropertyDescriptions=Este es el color de acentuado utilizado para enfatizar y otros acentos en la interfaz de usuario.
# Description: 
AccentColorProperties=ColorDeAcento
# Description: 
AcceptConnectionMethodDescriptions=Aceptar una conexión entrante con el Perfil de Puerto Serial (Serial Port Profile (SPP))
# Description: 
AcceptConnectionWithUUIDMethodDescriptions=Aceptar una conexión entrante con un UUID específico.
# Description: 
ActivityErrorEventDescriptions=El evento ErrorDeActividad ya no se usa. Utilice el evento Pantalla.SeProdujoUnError en su lugar.
# Description: 
ActivityStarter__ResultPropertyDescriptions=Devuelve el resultado desde la actividad.
# Description: 
AddDaysMethodDescriptions=Devuelve un instante en el tiempo algunos días después del instante dado.
# Description: 
AddMinutesMethodDescriptions=Devuelve un instante en el tiempo algunos minutos después del instante dado.
# Description: 
AddYearsMethodDescriptions=Devuelve un instante en el tiempo algunos años después del instante dado.
# Description: 
AboutScreenPropertyDescriptions=Información sobre la pantalla. Aparece cuando se selecciona "Acerca de esta aplicación" desde el menú del sistema. Úsalo para informar a gente de tu aplicación. En aplicaciones de últiples pantallas, cada pantalla tiene su propia pantalla de "Acerca de la aplicación".
# Description: 
AddDurationMethodDescriptions=Devuelve un instante en el tiempo cierto tiempo después del argumento
# Description: 
AddDurationMethods=AñadirDuración
# Description: 
AddHoursMethodDescriptions=Devuelve un instante en el tiempo algunas horas más tarde del instante dado.
# Description: 
AddMonthsMethodDescriptions=Devuelve un instante en el tiempo algunos meses después del instante dado.
# Description: 
AddSecondsMethodDescriptions=Devuelve un instante en el tiempo algunos segundos después del instante dado.
# Description: 
AddWeeksMethodDescriptions=Devuelve un instante en el tiempo algunas semanas después del instante dado.
# Description: 
AddressesAndNamesPropertyDescriptions=Las direcciones y los nombres de los dispositivos Bluetooth emparejados
# Description: 
AfterActivityEventDescriptions=Evento lanzado después de que este EmpezarActividad devuelva algún valor.
# Description: 
AfterChoosingEventDescriptions=Evento comenzado después de que el usuario haya seleccionado MostrarDiálogoElección.
# Description: 
AfterDateSetEventDescriptions=Evento que comienza después de que el usuario elija una fecha en el diálogo.
# Description: 
AfterRecordingEventDescriptions=Indica que un video se ha grabado con la cámara y provee la ruta al video almacenado.
# Description: 
AirPressureChangedEventDescriptions=Invocado cuando se detecta un cambio en la presión del aire (proporcionada en hPa).
# Description: 
AfterFileSavedEventDescriptions=Evento que indica que el contenido de un archivo ha sido escrito.
# Description: 
AfterFileSavedEvents=DespuésGuardarArchivo
# Description: 
AfterGettingTextEventDescriptions=Evento simple que se dispara cuando el Reconocedor de Habla ha recocido palabras válidas.
# Description: 
AfterPictureEventDescriptions=Invocado después de que se ha tomado la fotografía. El argumento de texto 'imagen' es la ruta que se utiliza para indicar la ubicación de la imagen en el teléfono.
# Description: 
AfterScanEventDescriptions=Indica que el escaner ha leido un resultado de texto y devuelve dicho resultado.
# Description: 
AfterSelectingEventDescriptions=Evento invocado después de que el usuario selecciona un elemento de una lista de selección.
# Description: 
AfterSoundRecordedEventDescriptions=Devuelve la ubicación del sonido recien generado.
# Description: 
AfterTextInputEventDescriptions=Evento a disparar cuando el usuario ha respondido a un MostrarCuadroDeTexto.
# Description: 
AfterTimeSetEventDescriptions=Este evento se ejecuta cuando el usuario ha fijado el tiempo en el diálogo de mostrar cuado emergente.
# Description: 
AirPressureChangedEvents=CambioPresionDelAire
# Description: 
AirPressureProperties=PresionDeAire
# Description: 
AirPressurePropertyDescriptions=La presión del aire en hPa(millibares), si el sensor está disponible y activado.
# Description: 
AlternateTextProperties=TextoAlterno
# Description: 
AlternateTextPropertyDescriptions=Una descripción escrita del contenido de la imagen.
# Description: 
AltitudePropertyDescriptions=El valor de altitud más reciente , indicado en metros. Si no hay ningún valor disponible, se devuelve 0.
# Description: 
AnchorHorizontalProperties=AnclaHorizontal
# Description: 
AfterSpeakingEventDescriptions=Evento a disparar después de que el mensaje ha sido leido en voz alta. El resultado será <em>Verdadero</em> si el mensaje fue leido de manera exitosa, de otra manera el resultado será <em>Falso</em>.
# Description: 
AllowCookiesPropertyDescriptions=Indica si las cookies de una respuesta deben de ser almacenadas in utilizadas en solicitudes subsecuentes. Las cookies sólo son soportadas por Android 2.3 o superiores.
# Description: 
PublicInstancesPropertyDescriptions=El conjunto de instancias de juego que se han marcado como públicas. Para garantizar que se devuelvan los valores actuales, primero invoque
# Description: 
ProximitySensor__MaximumRangePropertyDescriptions=Informa el alcance máximo del sensor de proximidad del dispositivo
# Description: 
ProximitySensor__EnabledPropertyDescriptions=Si es verdadero, el sensor generará eventos. De lo contrario, no se genera ningún evento.
# Description: 
ProximitySensor__DistancePropertyDescriptions=Devuelve la distancia del objeto al dispositivo
# Description: 
ProximitySensor__AvailablePropertyDescriptions=Informa si el dispositivo tiene o no sensor de proximidad.
# Description: 
ProximitySensorHelpStringComponentPallette=<p>Componente no visible que puede medir la proximidad de un objeto en cm en relación con la pantalla de visualización de un dispositivo. Este sensor se utiliza normalmente para determinar si un teléfono se acerca al oído de una persona; es decir, le permite determinar qué tan lejos está un objeto de un dispositivo. Muchos dispositivos devuelven la distancia absoluta, en cm, pero algunos solo devuelven valores cercanos y lejanos. En este caso, el sensor normalmente informa su valor de alcance máximo en el estado lejano y un valor menor en el estado cercano.</p>
# Description: 
ProximityChangedPropertiesProperties=PropiedadesProximidadCambiada
# Description: 
ProximityChangedMethods=ProximidadCambiada
# Description: 
ProximityChangedEvents=ProximidadCambiada
# Description: 
ProximityChangedEventDescriptions=Se activa cuando cambia la distancia (en cm) del objeto al dispositivo.
# Description: 
ProviderPropertyDescriptions=Establecer el nombre del proveedor a utilizar. Consulte https://appinv.us/chatbot para obtener la lista actual de proveedores admitidos.
# Description: 
ProviderProperties=Proveedor
# Description: 
ProviderNamePropertyDescriptions=Indica la fuente de la información de ubicación. Si no hay ningún proveedor, se devuelve la cadena "NO PROVIDER". Esto es útil principalmente para depurar.
# Description: 
ProviderLockedPropertyDescriptions=El dispositivo no cambiará de proveedor de servicios. Es posible que un dispositivo cambie de proveedor de servicios cuando el proveedor actual no puede proporcionar información de ubicación adecuada. `ProveedorBloqueado` es un valor booleano: verdadero/falso. Establecer en "verdadero"
# Description: 
PromptforPermissionPropertyDescriptions=Si es Verdadero, solicite al usuario de VisorWeb que dé permiso para acceder a la API de geolocalización. Si es falso, se supone que se ha concedido el permiso.
# Description: 
PromptPropertyDescriptions=Texto con el título actual de la ventana Desplegable
# Description: 
ProjectIDPropertyDescriptions=Obtiene el ProyectoID para este proyecto CloudDB.
# Description: 
ProjectIDProperties=ProyectoID
# Description: 
ProjectBucketPropertyDescriptions=Establece el ContenedorDeProyecto para esta FirebaseDB.
# Description: 
ProjectBucketProperties=ContenedorDeProyecto
# Description: 
ProgressBarFor=Barra de Progreso
# Description: 
PrintSerialMethods=ImprimirSerie
# Description: 
PrintSerialMethodDescriptions=Escribe los datos dados en serie y agrega una nueva línea al final.
# Description: 
PrimaryColorPropertyDescriptions=Este es el color principal utilizado para los elementos de Material UI, como BarraDeAcción.
# Description: 
PrimaryColorProperties=ColorPrincipal
# Description: 
PrimaryColorDarkPropertyDescriptions=Este es el color principal utilizado para los elementos más oscuros en Material UI.
# Description: 
PrimaryColorDarkProperties=ColorPrincipalOscuro
# Description: 
PostTextWithEncodingMethodDescriptions=Realiza una solicitud HTTP POST usando la propiedad Url y el texto especificado. Los caracteres del texto se codifican usando la codificación dada. Si la propiedad GuardarRespuesta es verdadera, la respuesta se guardará en un archivo y se activará el evento FicheroObtenido. La propiedad NombreFicheroRespuesta se puede utilizar para especificar el nombre del archivo. Si la propiedad GuardarRespuesta es falsa, se activará el evento TextoObtenido.
# Description: 
PostTextMethodDescriptions=Realiza una solicitud HTTP POST usando la propiedad Url y el texto especificado. Los caracteres del texto están codificados usando codificación UTF-8. Si la propiedad GuardarRespuesta es verdadera, la respuesta se guardará en un archivo y se activará el evento FicheroObtenido. La propiedad NombreFicheroRespuesta se puede utilizar para especificar el nombre del archivo. Si la propiedad GuardarRespuesta es falsa, se activará el evento TextoObtenido.
# Description: 
PostMediaMethods=PublicarMultimedia
# Description: 
PostMediaMethodDescriptions=Solicita al servicio Web que almacene el archivo multimedia proporcionado.
# Description: 
PostFileMethodDescriptions=Realiza una solicitud HTTP POST utilizando la propiedad Url y los datos del archivo especificado. Si la propiedad GuardarRespuesta es verdadera, la respuesta se guardará en un archivo y se activará el evento FicheroObtenido. La propiedad NombreFicheroRespuesta se puede utilizar para especificar el nombre del archivo. Si la propiedad GuardarRespuesta es falsa, se activará el evento TextoObtenido.
# Description: 
PositionChangedEventDescriptions=Indica que la posición del pulgar del control deslizante ha cambiado.
# Description: 
Polygon__VisiblePropertyDescriptions=Especifica si el Polígono debe estar visible en la pantalla. El valor es verdadero si el componente se muestra y falso si está oculto.
# Description: 
Polygon__TypePropertyDescriptions=Devuelve el tipo de característica. Para polígonos, esto devuelve MapFeature.Polygon ("Polígono").
# Description: 
Polygon__TitlePropertyDescriptions=El título que se muestra en la ventana de información que aparece cuando el usuario hace clic en el Polígono.
# Description: 
Polygon__StrokeWidthPropertyDescriptions=El ancho del trazo utilizado para delinear el Polígono.
# Description: 
Polygon__StrokeColorPropertyDescriptions=El color utilizado para delinear el polígono.
# Description: 
Polygon__ShowInfoboxMethodDescriptions=Muestra el cuadro de información del polígono. Esto mostrará el cuadro de información incluso si CuadroInfoHabilitado está configurado en falso.
# Description: 
Polygon__PointsPropertyDescriptions=Especifica los puntos utilizados para dibujar el `Polígono`. Los puntos se especifican como una lista de listas que contienen valores de latitud y longitud, como `[[lat1, long1], [lat2, long2], ...]`.
# Description: 
Polygon__PointsFromStringPropertyDescriptions=Construye un polígono a partir de la lista de coordenadas dada.
# Description: 
Polygon__LongClickEventDescriptions=El usuario presionó prolongadamente el Polígono. Este evento solo se activará si Arrastrable es falso.
# Description: 
Polygon__FillColorPropertyDescriptions=El color utilizado para rellenar el Polígono.
# Description: 
Polygon__EnableInfoboxPropertyDescriptions=Habilita o deshabilita la visualización de la ventana del cuadro de información cuando el usuario toca el polígono.
# Description: 
Polygon__DraggablePropertyDescriptions=La propiedad Arrastrable se utiliza para establecer si el usuario puede arrastrar el polígono manteniendo presionado y luego arrastrando el polígono a una nueva ubicación.
# Description: 
Polygon__DragEventDescriptions=El usuario arrastró el polígono.
# Description: 
Polygon__DistanceToPointMethodDescriptions=Calcula la distancia, en metros, entre un polígono y un punto de latitud y longitud.
# Description: 
Polygon__DescriptionPropertyDescriptions=La descripción que se muestra en la ventana de información que aparece cuando el usuario hace clic en el Polígono.
# Description: 
Polygon__ClickEventDescriptions=El usuario hizo clic en el Polígono.
# Description: 
PolygonHelpStringComponentPallette=Polígono encierra un área bidimensional arbitraria en un mapa. Los polígonos se pueden utilizar para dibujar un perímetro, como un campus, una ciudad o un país. Los polígonos comienzan como triángulos básicos. Se pueden crear nuevos vértices arrastrando el punto medio de un polígono lejos del borde. Al hacer clic en un vértice se eliminará el vértice, pero deben existir un mínimo de 3 vértices en todo momento.
# Description: 
PollingRatePropertyDescriptions=La tasa de sondeo en milisegundos cuando el Cliente Bluetooth se utiliza como Fuente de Datos en un componente de Datos del Gráfico. El valor mínimo es 1.
# Description: 
PollingRateProperties=TasaSondeo
# Description: 
PointsProperties=Puntos
# Description: 
PointsFromStringProperties=PuntosDesdeCadena
# Description: 
PointShapePropertyDescriptions=Cambia la Forma del Punto de la Serie de Datos, siempre que el componente de Datos esté adjunto a un Gráfico que tenga el tipo establecido en Gráfico de Dispersión. Los tipos válidos incluyen círculo, cuadrado, triángulo, cruz, x.
# Description: 
PointShapeProperties=FormaDelPunto
# Description: 
PlayersPropertyDescriptions=El conjunto actual de jugadores para esta instancia de juego. Cada jugador está designado por una dirección de correo electrónico, que es una cadena. La lista de jugadores se actualiza cada vez que se realiza una comunicación exitosa con el servidor del juego.
# Description: 
Player__VolumePropertyDescriptions=Establece el volumen en un número entre 0 y 100
# Description: 
Player__VibrateMethodDescriptions=Vibra durante un número específico de milisegundos.
# Description: 
Player__StopMethodDescriptions=Deja de reproducir y busca el comienzo de la canción.
# Description: 
Player__StartMethodDescriptions=Reproduce los medios. Si anteriormente estaba en pausa, se reanuda la reproducción. Si previamente estuvo parado, se empieza desde el principio.
# Description: 
Player__SourcePropertyDescriptions=Devuelve la ruta a la fuente de audio
# Description: 
Player__PauseMethodDescriptions=Suspende la reproducción si se está reproduciendo.
# Description: 
Player__CompletedEventDescriptions=Indica que los medios han llegado al final
# Description: 
PlayerLeftEventDescriptions=Indica que un jugador ha abandonado esta instancia del juego.
# Description: 
PlayerJoinedEventDescriptions=Indica que un nuevo jugador se ha unido a esta instancia del juego.
# Description: 
PlayerErrorEventDescriptions=El evento ErrorReproducción ya no se utiliza. Utilice el evento Pantalla.ErrorGenerado en su lugar.
# Description: 
PlayToneMethodDescriptions=Hacer que el robot reproduzca un tono.
# Description: 
PlaySoundFileMethodDescriptions=Reproducir un archivo de sonido en el robot.
# Description: 
PlayOnlyInForegroundPropertyDescriptions=Si es verdadero, el reproductor pausará la reproducción al salir de la pantalla actual; si es falso (opción predeterminada), el reproductor continúa jugando siempre que se muestre o no la pantalla actual.
# Description: 
PlayMethodDescriptions=Reproduce el sonido especificado por la propiedad Fuente.
# Description: 
PlatformVersionPropertyDescriptions=El número de versión con puntos de la plataforma, como 4.2.2 o 10.0. Esto es específico de la plataforma y no hay garantía de que tenga un formato particular.
# Description: 
PlatformVersionProperties=VersiónPlataforma
# Description: 
PlatformPropertyDescriptions=La plataforma en la que se ejecuta la aplicación, por ejemplo "Android" o "iOS".
# Description: 
PlatformProperties=Plataforma
# Description: 
PieRadiusPropertyDescriptions=Establece el Radio Circular de un Gráfico Circular de 0% a 100%, donde el porcentaje indica el porcentaje de relleno del agujero. 100% significa que se dibuja un Gráfico Circular completo, mientras que los valores más cercanos al 0% corresponden a Gráficos Circulares huecos.
# Description: 
PieRadiusProperties=RadioCircular
# Description: 
PhoneNumberPicker__WidthPropertyDescriptions=Especifica el ancho horizontal del SelectorContactos, medido en píxeles.
# Description: 
PhoneNumberPicker__WidthPercentPropertyDescriptions=Especifica el ancho horizontal del SelectorContactos como porcentaje del ancho de la pantalla.
# Description: 
PhoneNumberPicker__VisiblePropertyDescriptions=Especifica si SelectorContactos debe estar visible en la pantalla. El valor es verdadero si se muestra y falso si está oculto.
# Description: 
PhoneNumberPicker__TouchUpEventDescriptions=Indica que el SelectorContactos ha sido liberado.
# Description: 
PhoneNumberPicker__TouchDownEventDescriptions=Indica que se presionó el SelectorContactos.
# Description: 
PhoneNumberPicker__TextPropertyDescriptions=Texto para mostrar en SelectorContactos.
# Description: 
PhoneNumberPicker__TextColorPropertyDescriptions=Color del texto del botón.
# Description: 
PhoneNumberPicker__TextAlignmentPropertyDescriptions=Izquierda, centro, o derecha.
# Description: 
PhoneNumberPicker__ShowFeedbackPropertyDescriptions=Especifica si se debe mostrar una respuesta visual para un SelectorContactos que tiene una imagen como fondo.
# Description: 
PhoneNumberPicker__ShapePropertyDescriptions=Devuelve el estilo del `SelectorContactos`.
# Description: 
PhoneNumberPicker__PicturePropertyDescriptions=Devuelve un URI de imagen para el contacto seleccionado, que se puede utilizar para recuperar la foto del contacto y otros campos.
# Description: 
PhoneNumberPicker__PhoneNumberPropertyDescriptions=Devuelve el número de teléfono principal asociado con el contacto seleccionado, o la cadena vacía si no hay ningún número de teléfono asociado con el contacto.
# Description: 
PhoneNumberPicker__OpenMethodDescriptions=Abre el SelectorContactos, como si el usuario hubiera hecho clic en él.
# Description: 
MoveToPointMethods=MoverAlPunto
# Description: 
PhoneNumberPicker__LostFocusEventDescriptions=Indica que el cursor se alejó del SelectorContactos, por lo que ahora ya no es posible hacer clic en él.
# Description: 
PhoneNumberPicker__ImagePropertyDescriptions=Imagen para mostrar sobre el botón.
# Description: 
PhoneNumberPicker__HeightPropertyDescriptions=Especifica la altura vertical del SelectorContactos, medida en píxeles.
# Description: 
PhoneNumberPicker__HeightPercentPropertyDescriptions=Especifica la altura vertical del SelectorContactos como porcentaje de la altura de la pantalla.
# Description: 
PhoneNumberPicker__GotFocusEventDescriptions=Indica que el cursor se movió sobre SelectorContactos, por lo que ahora es posible hacer clic en él.
# Description: 
PhoneNumberPicker__FontTypefacePropertyDescriptions=Familia de fuentes para texto de Selectorcontactos.
# Description: 
PhoneNumberPicker__FontSizePropertyDescriptions=Tamaño en puntos para el texto de SelectorContactos.
# Description: 
PhoneNumberPicker__FontItalicPropertyDescriptions=Si activado, el texto de SelectorContactos se muestra en cursiva.
# Description: 
PhoneNumberPicker__FontBoldPropertyDescriptions=Si activado, el texto de SelectorContactos se muestra en negrita.
# Description: 
PhoneNumberPicker__EnabledPropertyDescriptions=Si activado, el usuario puede tocar SelectorContactos para provocar una acción.
# Description: 
PhoneNumberPicker__BeforePickingEventDescriptions=Evento que se genera cuando se hace clic en `SelctorContactos` o se muestra el selector usando el
# Description: 
PhoneNumberPicker__BackgroundColorPropertyDescriptions=Devuelve el color de fondo del botón
# Description: 
PhoneNumberPicker__AfterPickingEventDescriptions=El evento se generará después de que la actividad `SelectorContactos` devuelva su resultado y se hayan completado las propiedades.
# Description: 
PhoneNumberListPropertyDescriptions=Devuelve una lista de números de teléfono asociados con el contacto seleccionado.
# Description: 
PhoneCall__PhoneNumberPropertyDescriptions=Método de obtención de la propiedad NúmeroTeléfono.
# Description: 
PhoneCallStartedEvents=LlamadaIniciada
# Description: 
PhoneCallStartedEventDescriptions=Evento que indica que se ha iniciado una llamada telefónica. Si el estado es 1, suena la llamada entrante; si el estado es 2, se marca la llamada saliente. númeroTeléfono es el número de teléfono entrante/saliente.
# Description: 
PhoneCallEndedEvents=LlamadaTerminada
# Description: 
PhoneCallEndedEventDescriptions=Evento que indica que una llamada telefónica ha finalizado. Si el estado es 1, la llamada entrante se pierde o se rechaza; si el estado es 2, la llamada entrante se responde antes de colgar; si el estado es 3, se cuelga la llamada saliente. phoneNumber es el número de teléfono de la llamada finalizada.
# Description: 
PersistPropertyDescriptions=Si es verdadero, las variables conservarán sus valores cuando esté fuera de línea y la aplicación salga. Los valores se cargarán en Firebase la próxima vez que se ejecute la aplicación mientras esté conectada a la red. Esto es útil para aplicaciones que recopilarán datos mientras no estén conectados a la red. Nota: AgregarValor y EliminaPrimero no funcionarán correctamente cuando estén fuera de línea, requieren una conexión de red.<br/><br/> <i>Nota</i>: Si configura Persistir en cualquier componente de Firebase, en cualquier pantalla, hace que todos los componentes de Firebase en todas las pantallas sean persistentes. Esta es una limitación de la biblioteca Firebase de bajo nivel. También tenga en cuenta que si desea establecer persistir en verdadero, debe hacerlo antes de conectar Companion para un desarrollo incremental.
# Description: 
PersistProperties=Persistir
# Description: The name of the event handler for when the app is granted a dangerous permission by the user.
PermissionGrantedEvents=PermisoConcedido
# Description: 
PermissionGrantedEventDescriptions=Evento que se controlará cuando el usuario de la aplicación haya otorgado el permiso necesario. Este evento solo se ejecuta cuando se concede permiso en respuesta al método SolicitarPermiso.
# Description: The name of the event handler for when the app is denied a dangerous permission by the user.
PermissionDeniedEvents=PermisoDenegado
# Description: 
PermissionDeniedEventDescriptions=Evento que se controlará cuando el usuario de la aplicación haya denegado un permiso necesario.
# Description: 
Pedometer__StopMethodDescriptions=Parar de contar pasos
# Description: 
Pedometer__StartMethodDescriptions=Empezar a contar pasos
# Description: 
Pedometer__SaveMethodDescriptions=Guarda el estado del podómetro en el teléfono. Permite la acumulación de pasos y distancia entre invocaciones de una App que utiliza el podómetro. Diferentes aplicaciones tendrán su propio estado guardado.
# Description: 
Pedometer__ResumeMethodDescriptions=Reanuda el conteo, sinónimo de Inicio.
# Description: 
Pedometer__PauseMethodDescriptions=Pausar el conteo de pasos y distancia.
# Description: 
Pedometer__DistancePropertyDescriptions=La distancia aproximada recorrida en metros.
# Description: 
PatchTextWithEncodingMethods=TextoPatchConCodificación
# Description: 
PatchTextMethodDescriptions=Realiza una solicitud HTTP PATCH usando la propiedad Url y el texto especificado.<br>Los caracteres del texto están codificados usando codificación UTF-8.<br>Si la propiedad GuardarRespuesta es verdadera, la respuesta se guardará en un archivo y el se activará el evento FicheroObtenido. La propiedad NombreFicheroRespuesta se puede utilizar para especificar el nombre del archivo.<br>Si la propiedad GuardarRespuesta es falsa, se activará el evento TextoObtenido.
# Description: 
PatchTextWithEncodingMethodDescriptions=Realiza una solicitud HTTP PATCH usando la propiedad Url y el texto especificado.<br>Los caracteres del texto se codifican usando la codificación dada.<br>Si la propiedad GuardarRespuesta es verdadera, la respuesta se guardará en un archivo y el FicheroObtenido se activará el evento. La propiedad NombreFicheroRespuesta se puede utilizar para especificar el nombre del archivo.<br>Si la propiedad GuardarRespuesta es falsa, se activará el evento TextoObtenido.
# Description: 
PatchTextMethods=TextoPatch
# Description: 
PatchFileMethods=ArchivoPatch
# Description: 
PatchFileMethodDescriptions=Realiza una solicitud HTTP PATCH utilizando la propiedad Url y los datos del archivo especificado.<br>Si la propiedad GuardarRespuesta es verdadera, la respuesta se guardará en un archivo y se activará el evento FicheroObtenido. La propiedad NombreFicheroRespuesta se puede utilizar para especificar el nombre del archivo.<br>Si la propiedad guardarRespuesta es falsa, se activará el evento TextoObtenido.
# Description: 
PasswordVisiblePropertyDescriptions=Visibilidad de la contraseña.
# Description: 
PasswordVisibleProperties=ContraseñaVisible
# Description: 
PasswordTextBox__WidthPropertyDescriptions=Especifica el ancho horizontal de CuadroDeTextoContraseña, medido en píxeles.
# Description: 
PasswordTextBox__WidthPercentPropertyDescriptions=Especifica el ancho horizontal de CuadroDeTextoContraseña como porcentaje del ancho de la pantalla.
# Description: 
PasswordTextBox__VisiblePropertyDescriptions=Especifica si CuadroDeTextoContraseña debe estar visible en la pantalla. El valor es verdadero si se muestra y falso si está oculto.
# Description: 
PasswordTextBox__TextPropertyDescriptions=Devuelve el contenido del cuadro de texto.
# Description: 
PasswordTextBox__TextColorPropertyDescriptions=El color del texto. Puedes elegir un color por nombre en el Diseñador o en el Editor de bloques. El color de texto predeterminado es negro.
# Description: 
PasswordTextBox__TextAlignmentPropertyDescriptions=Si el texto debe estar justificado a la izquierda, centrado o justificado a la derecha. De forma predeterminada, el texto está justificado a la izquierda.
# Description: 
PasswordTextBox__RequestFocusMethodDescriptions=Establece el CuadroDeTextoContraseña como activo.
# Description: 
PasswordTextBox__NumbersOnlyPropertyDescriptions=Si es verdadero, entonces este cuadro de texto de contraseña acepta solo números como entrada de teclado. Los números pueden incluir un punto decimal y un signo menos inicial opcional. Esto se aplica únicamente a la entrada del teclado. Incluso si SoloNúmeros es verdadero, puedes usar [establecer texto en] para ingresar cualquier texto.
# Description: 
PasswordTextBox__LostFocusEventDescriptions=Evento que se genera cuando CuadroDeTextoContraseña ya no está seleccionado para la entrada, por ejemplo, si el usuario toca un cuadro de texto diferente.
# Description: 
PasswordTextBox__HintPropertyDescriptions=Texto que debería aparecer débilmente en CuadroDeTextoContraseña para proporcionar una pista sobre lo que el usuario debe ingresar. Esto sólo se puede ver si la propiedad Texto está vacía.
# Description: 
PasswordTextBox__HeightPropertyDescriptions=Especifica la altura vertical de CuadroDeTextoContraseña, medida en píxeles.
# Description: 
PasswordTextBox__HeightPercentPropertyDescriptions=Especifica la altura vertical de CuadroDeTextoContraseña como porcentaje de la altura de la pantalla.
# Description: 
PasswordTextBox__GotFocusEventDescriptions=Evento que se genera cuando se selecciona CuadroDeTextoContraseña para la entrada, por ejemplo, cuando el usuario lo toca.
# Description: 
PasswordTextBox__FontTypefacePropertyDescriptions=La fuente del texto. El valor se puede cambiar en el Diseñador.
# Description: 
PasswordTextBox__FontSizePropertyDescriptions=El tamaño de fuente del texto. Por defecto, es 14,0 puntos.
# Description: 
PasswordTextBox__FontItalicPropertyDescriptions=Si la fuente del texto debe estar en cursiva. Por defecto, no lo es.
# Description: 
PasswordTextBox__FontBoldPropertyDescriptions=Si la fuente del texto debe estar en negrita. Por defecto, no lo es.
# Description: 
PasswordTextBox__EnabledPropertyDescriptions=Si el usuario puede ingresar texto en CuadroDeTextoContraseña. Por defecto, esto es cierto.
# Description: 
PasswordTextBox__BackgroundColorPropertyDescriptions=El color de fondo del cuadro de entrada. Puedes elegir un color por nombre en el Diseñador o en el Editor de bloques. El color de fondo predeterminado es "predeterminado" (apariencia tridimensional sombreada).
# Description: 
PanToMethods=DesplazarA
# Description: 
PanToMethodDescriptions=Desplaza el centro del mapa a la latitud y longitud dadas y ajusta el nivel de zoom al zoom especificado.
# Description: 
PageLoadedEvents=PáginaCargada
# Description: 
PageLoadedEventDescriptions=Cuando una página termina de cargarse, se ejecuta este evento.
# Description: Text for the Package non-SDK 26 Warning Dialog Box (HTML)
PackageNotice=Utilice esta opción para crear aplicaciones que funcionarán en la versión 2.1 de Android (Eclair),<br/>pero que no se podrán publicar en Google Play Store.
# Description: Text for the Package SDK 26 Warning Dialog Box (HTML)
Package26Notice=Utilice esta opción para crear aplicaciones que puedan enviarse a Google Play Store.<br/>Estas aplicaciones no se ejecutarán en versiones de Android anteriores a 4.0.
# Description: 
OtherScreenClosedEventDescriptions=Evento generado cuando otra pantalla se cerró y el control volvió a esta pantalla.
# Description: 
OtherPlayerStartedEvents=IniciadoOtroJugador
# Description: 
OtherPlayerStartedEventDescriptions=Este evento se señala cuando otro jugador ha comenzado (y el jugador actual está jugando o en pausa, pero no detenido).
# Description: 
OriginAtCenterPropertyDescriptions=Si las coordenadas x e y deben representar el centro de la Pelota (verdadero) o sus bordes izquierdo y superior (falso).
# Description: 
OriginAtCenterProperties=OrigenEnCentro
# Description: 
OrientationSensor__PitchPropertyDescriptions=Devuelve el ángulo de paso del dispositivo. Para devolver valores significativos, el sensor debe estar habilitado.
# Description: 
OrientationSensor__EnabledPropertyDescriptions=Especifica si el sensor de orientación está habilitado.
# Description: 
OrientationSensor__AvailablePropertyDescriptions=Indica si el sensor de orientación está presente en el dispositivo.
# Description: 
OrientationPropertyDescriptions=Devuelve el estilo del botón.
# Description: 
OrientationProperties=Orientación
# Description: 
OrientationChangedEventDescriptions=Se llama cuando la orientación ha cambiado.
# Description: 
OpenSerialMethods=AbrirConexiónSerie
# Description: 
OpenSerialMethodDescriptions=Abre la conexión serie. Devuelve verdadero cuando se abre.
# Description: 
OpenScreenAnimationPropertyDescriptions=La animación para cambiar a otra pantalla. Las opciones válidas son predeterminadas, atenuar, acercar, deslizar horizontalmente, deslizar verticalmente y ninguna
# Description: 
OnSettingsEvents=EnConfiguración
# Description: 
OnSettingsEventDescriptions=Este evento se activa cuando se selecciona el elemento del menú "configuración" (solo disponible en la aplicación complementaria, definida en ReplForm.java).
# Description: 
OnPropertyDescriptions=Devuelve verdadero si el `Interruptor` está activado.
# Description: 
OnProperties=Encendido
# Description: 
NxtUltrasonicSensor__WithinRangeEventEnabledPropertyDescriptions=Si el evento DentroDeRango debe activarse cuando la distancia varía entre LimiteInfRango y TopeDeRango.
# Description: 
NxtUltrasonicSensor__WithinRangeEventDescriptions=La distancia ha entrado dentro del rango.
# Description: 
NxtUltrasonicSensor__BelowRangeEventEnabledPropertyDescriptions=Si el evento DebajoDeRango debe activarse cuando la distancia desciende por debajo de LimiteInfRango.
# Description: 
NxtUltrasonicSensor__BelowRangeEventDescriptions=La distancia ha bajado del rango.
# Description: 
NxtUltrasonicSensor__AboveRangeEventEnabledPropertyDescriptions=Si el evento EncimaDeRango debe activarse cuando la distancia supera TopeDeRango.
# Description: 
NxtUltrasonicSensor__AboveRangeEventDescriptions=La distancia ha superado el rango.
# Description: 
NxtTouchSensor__ReleasedEventDescriptions=Se ha liberado el sensor táctil.
# Description: 
NxtTouchSensor__PressedEventEnabledPropertyDescriptions=Si el evento Presionado debe activarse cuando se presiona el sensor táctil.
# Description: 
NxtTouchSensor__PressedEventDescriptions=Se ha presionado el sensor táctil.
# Description: 
NxtSoundSensor__WithinRangeEventEnabledPropertyDescriptions=Si el evento DentroDeRango debe activarse cuando el nivel de sonido oscila entre LimiteInfRango y TopeDeRango.
# Description: 
NxtSoundSensor__WithinRangeEventDescriptions=El nivel de sonido ha entrado dentro del rango.
# Description: 
NxtSoundSensor__BelowRangeEventEnabledPropertyDescriptions=Si el evento DebajoDeRango debe activarse cuando el nivel de sonido desciende por debajo de LimiteInfRango.
# Description: 
NxtSoundSensor__BelowRangeEventDescriptions=El nivel de sonido ha bajado por debajo del rango.
# Description: 
NxtSoundSensor__AboveRangeEventEnabledPropertyDescriptions=Si el evento EncimaDeRango debe activarse cuando el nivel de sonido supera el TopeDeRango.
# Description: 
NxtSoundSensor__AboveRangeEventDescriptions=El nivel de sonido ha superado el rango.
# Description: 
NxtLightSensor__WithinRangeEventEnabledPropertyDescriptions=Si el evento DentroDeRango debe activarse cuando el nivel de luz oscila entre LimiteInfRango y TopeDeRango.
# Description: 
NxtLightSensor__WithinRangeEventDescriptions=El nivel de luz ha entrado dentro del rango.
# Description: 
NxtLightSensor__GetLightLevelMethodDescriptions=Devuelve el nivel de luz actual como un valor entre 0 y 1023, o -1 si no se puede leer el nivel de luz.
# Description: 
NxtLightSensor__BelowRangeEventEnabledPropertyDescriptions=Si el evento DebajoDeRango debe activarse cuando el nivel de luz desciende por debajo de LimiteInfRango.
# Description: 
NxtLightSensor__BelowRangeEventDescriptions=El nivel de luz ha bajado por debajo del rango.
# Description: 
NxtLightSensor__AboveRangeEventEnabledPropertyDescriptions=Si el evento EncimaDeRangodebe activarse cuando el nivel de luz supera TopeDeRango.
# Description: 
NxtLightSensor__AboveRangeEventDescriptions=El nivel de luz ha superado el rango.
# Description: 
NxtDrive__WheelDiameterPropertyDescriptions=El diámetro de las ruedas utilizadas para la conducción.
# Description: 
NxtDrive__StopMethodDescriptions=Detener los motores de accionamiento del robot.
# Description: 
NxtDrive__StopBeforeDisconnectPropertyDescriptions=Si se deben detener los motores de accionamiento antes de desconectarlos.
# Description: 
NxtDirectCommands__KeepAliveMethodDescriptions=Mantener vivo. Devuelve el límite de tiempo de suspensión actual en milisegundos.
# Description: 
ListPicker__FontBoldPropertyDescriptions=Si activado, el texto del SelectorLista se mustra en negrita.
# Description: 
ListPicker__EnabledPropertyDescriptions=Si activado, el usuario puede tocar el SelectorLista para provocar una acción.
# Description: 
ListPicker__ElementsPropertyDescriptions=Especifica la lista de opciones para mostrar.
# Description: 
ListPicker__ElementsFromStringPropertyDescriptions=Establece la lista de opciones a partir de una cadena de valores separados por comas.
# Description: 
ListPicker__BeforePickingEventDescriptions=Evento que se genera cuando se hace clic en `SelectorLista` o se muestra el selector usando el
# Description: 
ListPicker__BackgroundColorPropertyDescriptions=Devuelve el color de fondo del botón
# Description: 
ListPicker__AfterPickingEventDescriptions=Evento que se generará después de que la actividad `SelectorLista` devuelva su resultado y se hayan completado las propiedades.
# Description: 
ListFilesMethodDescriptions=Devuelve una lista que contiene los nombres de los archivos coincidentes encontrados en el robot.
# Description: 
ListDirectoryMethods=DirectorioLista
# Description: 
ListDirectoryMethodDescriptions=Obtener una lista de archivos y directorios en el directorio indicado.
# Description: 
ListDataPropertyDescriptions=Devuelve los datos que se mostrarán en VistaDeLista como un JsonString. Propiedad exclusiva de diseñador.
# Description: 
ListDataProperties=ListaDatos
# Description: 
LineWidthPropertyDescriptions=El ancho de las líneas dibujadas en el lienzo.
# Description: 
LineTypePropertyDescriptions=Cambia el Tipo de Línea de la Serie de Datos, siempre que el componente de datos esté adjunto a un Gráfico que tenga el tipo establecido en un Gráfico basado en líneas (se aplica a los tipos de Gráfico de área y de líneas). Los tipos válidos incluyen lineal, curvo o escalonado.
# Description: 
LineTypeProperties=TipoLínea
# Description: 
LineString__VisiblePropertyDescriptions=Especifica si CadenaLíneas debe estar visible en la pantalla. El valor es verdadero si el componente se muestra y falso si está oculto.
# Description: 
LineString__TypePropertyDescriptions=Devuelve el tipo de característica del mapa. Para CadenaLíneas, esto devuelve MapFeature.LineString ("CadenaLíneas").
# Description: 
LineString__TitlePropertyDescriptions=El título que se muestra en la ventana de información que aparece cuando el usuario hace clic en CadenaLíneas.
# Description: 
LineString__StrokeWidthPropertyDescriptions=Establece u obtiene el ancho del trazo utilizado para delinear el `CadenaLíneas`.
# Description: 
LineString__StrokeColorPropertyDescriptions=El color utilizado para delinear CadenaLíneas.
# Description: 
LineString__ShowInfoboxMethodDescriptions=Muestra el cuadro de información de CadenaLíneas. Esto mostrará el cuadro de información incluso si HabilitaCuadroInfo está configurado en falso.
# Description: 
LineString__PointsPropertyDescriptions=La lista de puntos, como pares de latitudes y longitudes, en `CadenaLíneas`.
# Description: 
LineString__PointsFromStringPropertyDescriptions=Establezca los puntos de CadenaLíneas a partir de una cadena de caracteres especialmente codificada del formato: [[latitud1, longitud1], [latitud2, longitud2], ...]
# Description: 
LineString__LongClickEventDescriptions=El usuario presionó prolongadamente CadenaLíneas. Este evento solo se activará si Arrastrable es falso.
# Description: 
LineString__EnableInfoboxPropertyDescriptions=Habilita o deshabilita la visualización de la ventana del cuadro de información cuando el usuario toca CadenaLíneas.
# Description: 
LineString__DraggablePropertyDescriptions=La propiedad Arrastrable se usa para establecer si el usuario puede arrastrar CadenaLíneas presionando prolongadamente y luego arrastrando CadenaLíneas a una nueva ubicación.
# Description: 
LineString__DragEventDescriptions=El usuario arrastró la CadenaLíneas.
# Description: 
LineString__DistanceToPointMethodDescriptions=Calcule la distancia, en metros, entre un CadenaLíneas y un punto de latitud y longitud.
# Description: 
LineString__DescriptionPropertyDescriptions=La descripción que se muestra en la ventana de información que aparece cuando el usuario hace clic en CadenaLíneas.
# Description: 
LineString__ClickEventDescriptions=El usuario hizo clic en el CadenaLíneas.
# Description: 
LineStringHelpStringComponentPallette=CadenaLíneas es un componente para dibujar una secuencia abierta y continua de líneas en un mapa. Para agregar nuevos puntos a LineString en el diseñador, arrastre el punto medio de cualquier segmento lejos de la línea para introducir un nuevo vértice. Mueva un vértice haciendo clic y arrastrándolo a una nueva ubicación. Al hacer clic en un vértice se eliminará el vértice, a menos que solo queden dos.
# Description: 
LightSensor__EnabledPropertyDescriptions=Si eactivado, el dispositivo escuchará los cambios.
# Description: 
LightSensor__AvailablePropertyDescriptions=Especifica si el dispositivo tiene o no el hardware para admitir el componente SensorLuz.
# Description: 
LightSensorHelpStringComponentPallette=Un componente sensor que puede medir el nivel de luz.
# Description: 
LightChangedEvents=LuzCambiada
# Description: 
LightChangedEventDescriptions=Se llama cuando se detecta un cambio en el nivel de luz.
# Description: 
LegendEnabledPropertyDescriptions=Devuelve un valor booleano que indica si la leyenda está habilitada en el Gráfico.
# Description: 
LegendEnabledProperties=LeyendaActivada
# Description: 
LegacyModeProperties=ModoTradicional
# Description: 
LeaveInstanceMethodDescriptions=Sale de la instancia actual.
# Description: 
LeaderPropertyDescriptions=El líder del juego. En cualquier momento, cada instancia del juego tiene un solo líder, pero el líder puede cambiar con el tiempo. Inicialmente, el líder es el creador de la instancia del juego. Los redactores de aplicaciones determinan las propiedades especiales del líder. El valor del líder se actualiza cada vez que se realiza una comunicación exitosa con el servidor.
# Description: 
LaunchPickerMethods=SelectorLanzamiento
# Description: 
LatitudeFromAddressMethodDescriptions=Deriva la latitud de la dirección dada
# Description: 
LastMessagePropertyDescriptions=Devuelve el contenido de la etiqueta recibida más recientemente.
# Description: 
LabelsPropertyDescriptions=Devuelve una Lista de Etiquetas establecidas en el Eje X.
# Description: 
LabelsProperties=Etiquetas
# Description: 
LabelsFromStringPropertyDescriptions=Especifica las etiquetas que se establecerán en el eje X del Gráfico, siempre que la vista actual sea un Gráfico con un eje X. Las etiquetas se especifican como una única Cadena de valores separados por comas (lo que significa que cada valor está separado por una coma). Ver
# Description: 
LabelsFromStringProperties=EtiquetasDesdeCadena
# Description: 
Label__WidthPropertyDescriptions=Especifica el ancho horizontal de la Etiqueta, medido en píxeles.
# Description: 
Label__WidthPercentPropertyDescriptions=Especifica el ancho horizontal de la Etiqueta como porcentaje del ancho de la Pantalla.
# Description: 
Label__VisiblePropertyDescriptions=Especifica si la Etiqueta debe estar visible en la pantalla. El valor es verdadero si la Etiqueta se muestra y falso si está oculta.
# Description: 
Label__TextPropertyDescriptions=Devuelve el texto mostrado por la etiqueta.
# Description: 
Label__TextColorPropertyDescriptions=Devuelve el color del texto de la etiqueta como un número entero alfa-rojo-verde-azul.
# Description: 
Label__TextAlignmentPropertyDescriptions=Devuelve la alineación del texto de la etiqueta: centro, normal (por ejemplo, justificado a la izquierda si el texto se escribe de izquierda a derecha) u opuesto (por ejemplo, justificado a la derecha si el texto se escribe de izquierda a derecha).
# Description: 
Label__HeightPropertyDescriptions=Especifica la altura vertical de la Etiqueta, medida en píxeles.
# Description: 
Label__HeightPercentPropertyDescriptions=Especifica la altura vertical de la Etiqueta como porcentaje de la altura de la Pantalla.
# Description: 
Label__FontTypefacePropertyDescriptions=Devuelve la fuente del texto de la etiqueta como predeterminada, serif, sans serif o monoespacio.
# Description: 
Label__FontSizePropertyDescriptions=Devuelve el tamaño de fuente del texto de la etiqueta, medido en sp (píxeles independientes de la escala).
# Description: 
Label__FontItalicPropertyDescriptions=Devuelve verdadero si el texto de la etiqueta debe estar en cursiva. Si se ha solicitado cursiva, esta propiedad devolverá verdadero, incluso si la fuente no admite cursiva.
# Description: 
Label__FontBoldPropertyDescriptions=Devuelve verdadero si el texto de la etiqueta debe estar en negrita. Si se solicitó negrita, esta propiedad devolverá verdadero, incluso si la fuente no admite negrita.
# Description: 
Label__BackgroundColorPropertyDescriptions=Devuelve el color de fondo de la etiqueta como un número entero alfa-rojo-verde-azul.
# Description: 
LabelPropertyDescriptions=Devuelve el texto de la etiqueta de la serie de datos.
# Description: 
LabelProperties=Etiqueta
# Description: 
KeyFilePropertyDescriptions=Especifica la ruta del archivo de clave privada. Este archivo de clave se utiliza para obtener acceso a la API de FusionTables.
# Description: 
KeyFileProperties=ArchivoClave
# Description: 
KeepRunningWhenOnPausePropertyDescriptions=Devuelve el valor de SeguirFuncionandoCuandoEnPausa.
# Description: 
KeepRunningWhenOnPauseProperties=SeguirFuncionandoCuandoEnPausa
# Description: 
JsonTextDecodeWithDictionariesMethods=DecodificaciónTextoJsonConDiccionarios
# Description: 
JsonTextDecodeWithDictionariesMethodDescriptions=Decodifica el valor codificado JSON dado para producir un valor de App Inventor correspondiente. Una lista JSON [x, y, z] se decodifica en una lista (x y z). Un objeto JSON con nombre A y valor B, indicado como {a: b}, se decodifica en un diccionario con la clave a y el valor b.
# Description: 
JsonTextDecodeMethodDescriptions=Decodifica el valor codificado JSON dado para producir un valor de AppInventor correspondiente. Una lista JSON `[x, y, z]` se decodifica en una lista `(x y z)`, un objeto JSON con clave A y valor B, (denotado como `{A:B}`) se decodifica en una lista `(( A B))`, es decir, una lista que contiene la lista de dos elementos `(A B)`. Utilice el método DecodificaciónTextoJsonConDiccionarios si prefiere recuperar objetos de diccionario en lugar de listas de listas en el resultado.
# Description: 
JsonObjectEncodeMethods=CodificaciónObjetoJson
# Description: 
JsonObjectEncodeMethodDescriptions=Devuelve el valor de un tipo integrado (es decir, booleano, número, texto, lista, diccionario) en su representación de notación de objetos JavaScript. Si el valor no se puede representar como JSON, se ejecutará el evento ErrorGenerado de la pantalla, si lo hay, y el componente web devolverá la cadena vacía.
# Description: 
JoinedInstancesPropertyDescriptions=El conjunto de instancias de juego en las que participa este jugador. Para garantizar que se devuelvan los valores actuales, primero invoque ObtenerListasInstancias.
# Description: 
ItemTextColorPropertyDescriptions=El color del texto de los elementos del SelectorLista.
# Description: 
ItemTextColorProperties=ColorTextoElemento
# Description: 
ItemBackgroundColorPropertyDescriptions=El color de fondo de los elementos del SelectorLista.
# Description: 
ItemBackgroundColorProperties=ColorFondoElemento
# Description: 
IsPressedMethodDescriptions=Devuelve verdadero si se presiona el sensor táctil.
# Description: 
IsPlayingPropertyDescriptions=Informa si los medios se están reproduciendo
# Description: 
IsOpenPropertyDescriptions=Devuelve verdadero cuando la conexión Serie está abierta.
# Description: 
IsOpenProperties=estáAbierto
# Description: 
IsInitializedPropertyDescriptions=Devuelve verdadero cuando se ha inicializado la comunicación Serie.
# Description: 
IsInitializedProperties=estáInicializado
# Description: 
IsDirectoryMethods=EsDirectorio
# Description: 
IsDirectoryMethodDescriptions=Comprueba si la ruta nombrada en el ámbito dado es un directorio.
# Description: 
IsDevicePairedMethodDescriptions=Comprueba si el dispositivo Bluetooth con la dirección especificada está emparejado.
# Description: 
IsConnectedPropertyDescriptions=En dispositivos con nivel de API 14 (LEVEL_ICE_CREAM_SANDWICH) o superior, esta propiedad devuelta es precisa. Pero en dispositivos antiguos con un nivel de API inferior a 14, es posible que no devuelva el estado actual de la conexión (por ejemplo, es posible que esté desconectado, pero es posible que no lo sepas hasta que intentes leer/escribir el socket).
# Description: 
IsAuthorizedEventDescriptions=Este evento se genera después de que el programa llama a <code>Autorizar</code> si la autorización fue exitosa. También se llama después de una llamada a <code>CompruebaAutorizado</code> si ya tenemos un token de acceso válido. Una vez que se haya generado este evento, se puede llamar a cualquier otro método para este componente.
# Description: 
IsAcceptingPropertyDescriptions=Devuelve verdadero si este componente ServidorBluetooth acepta una conexión entrante.
# Description: 
InvitedInstancesPropertyDescriptions=El conjunto de instancias de juego a las que este jugador ha sido invitado pero aún no se ha unido. Para garantizar que se devuelvan los valores actuales, primero invoque ObtenerListasInstancias.
# Description: 
InvitedEventDescriptions=Indica que un usuario ha sido invitado a esta instancia de juego.
# Description: 
InviteMethodDescriptions=Invita a un jugador a esta instancia del juego.
# Description: 
InvertMaskPropertyDescriptions=Especifica si la máscara utilizada para la edición debe tener su canal alfa invertido.
# Description: 
InvertMaskProperties=MáscaraInvertida
# Description: 
InvalidPointEvents=PuntoInválido
# Description: 
InvalidPointEventDescriptions=Se proporcionó una coordenada no válida durante una operación de mapas. El parámetro de mensaje tendrá más detalles sobre el problema.
# Description: 
InstantMethods=Instante
# Description: 
InstanceIdPropertyDescriptions=La identificación de la instancia del juego. En conjunto, el ID del juego y el ID de la instancia identifican de forma única el juego.
# Description: 
InstanceIdChangedEventDescriptions=Indica que la propiedad IdInstancia ha cambiado como resultado de llamar a CrearNuevaInstancia o EstablecerInstancia.
# Description: 
InstallationIdMethods=IdInstalación
# Description: 
InstallationIdMethodDescriptions=Devolver el ID de instalación de ACRA
# Description: 
InsertRowMethods=InsertarFila
# Description: 
InsertRowMethodDescriptions=Inserta una fila en la tabla de fusión especificada. El campo idTabla es el id de la tabla de fusión. Las columnas son una lista separada por comas de las columnas en las que insertar valores. El campo de valores especifica qué valores insertar en cada columna.
# Description: 
InitializeSerialMethods=InicializarConexiónSerie
# Description: 
InitializeSerialMethodDescriptions=Inicializa la conexión serie.
# Description: 
InitializeEventDescriptions=El evento Inicializar se ejecuta cuando se inicia la pantalla y solo se ejecuta una vez por pantalla.
# Description: 
InfoEventDescriptions=Indica que ha ocurrido algo que el jugador debería saber.
# Description: 
IncomingCallAnsweredEvents=LlamadaEntranteRespondida
# Description: 
IncomingCallAnsweredEventDescriptions=Evento que indica que se responde una llamada telefónica entrante. númeroTeléfono es el número de teléfono de la llamada entrante.
# Description: 
ImportFromWebMethods=ImportarDesdeWeb
# Description: 
ImportFromWebMethodDescriptions=Importa datos del componente web especificado, dados los nombres de las columnas de valores X e Y. Las columnas vacías se rellenan con valores predeterminados (1, 2, 3,... para la Entrada 1, 2,...). Para que la importación de datos sea exitosa, cargue los datos y luego este bloque debe usarse en ese componente Web. El uso del evento obtenidoValor en el componente Web no es necesario.
# Description: 
ImportFromTinyDBMethods=ImportarDesdeTinyDB
# Description: 
ImportFromTinyDBMethodDescriptions=Importa datos del componente TinyDB especificado tomando el valor identificado por el valor de etiqueta especificado. El valor esperado de TinyDB es una lista formateada de la misma manera que se describe en
# Description: 
ImportFromSpreadsheetMethods=ImportarDesdeHojaCálculo
# Description: 
ImportFromSpreadsheetMethodDescriptions=Importa datos del componente de hoja de cálculo especificado tomando la columna x especificada para los valores x y la columna y especificada para los valores y. Antes de llamar a esta función, se debe llamar al método LeerHoja del componente Hoja de cálculo para cargar los datos. El uso del evento ObtenidoHoja en el componente Hoja de cálculo no es necesario. Las columnas vacías se rellenan con valores predeterminados (1, 2, 3,... para la Entrada 1, 2, 3,...).
# Description: 
ImportFromListMethods=ImportarDesdeLista
# Description: 
ImportFromListMethodDescriptions=Importa los datos del parámetro de lista especificado a la serie de datos. Se espera que la lista contenga elementos que también sean listas. Se espera que cada elemento de la lista tenga 2 valores, el primero es el valor x y el segundo es el valor y. Las entradas de la lista no válidas simplemente se omiten. Los datos existentes no se borran.
# Description: 
ImportFromDataFileMethods=ImportarDesdeFicheroDatos
# Description: 
ImportFromDataFileMethodDescriptions=Importa datos del componente FicheroDatos especificado tomando la columna x especificada para los valores x y la columna y especificada para los valores y. Se espera que el archivo fuente del FicheroDatos sea un archivo CSV o JSON. Pasar una prueba vacía para cualquiera de los parámetros de la columna dará como resultado el uso de valores predeterminados que son los índices de las entradas. Para la primera entrada, el valor predeterminado sería 1, para la segunda sería 2, y así sucesivamente.
# Description: 
ImportFromCloudDBMethods=ImportarDesdeCloudDB
# Description: 
ImportFromCloudDBMethodDescriptions=Importa datos del componente CloudDB especificado tomando el valor identificado por el valor de etiqueta especificado. El valor esperado de CloudDB es una lista formateada de la misma manera que se describe en
# Description: 
Image__WidthPropertyDescriptions=Especifica el ancho horizontal de la Imagen, medido en píxeles.
# Description: 
Image__WidthPercentPropertyDescriptions=Especifica el ancho horizontal de la Imagen como porcentaje del ancho de la pantalla.
# Description: 
Image__VisiblePropertyDescriptions=Especifica si la Imagen debe ser visible en la pantalla. El valor es verdadero si se muestra y falso si está oculta.
# Description: 
Image__PicturePropertyDescriptions=Devuelve la ruta del dibujo de la imagen.
# Description: 
Image__HeightPropertyDescriptions=Especifica la altura vertical de la imagen, medida en píxeles.
# Description: 
Image__HeightPercentPropertyDescriptions=Especifica la altura vertical de la imagen como porcentaje de la altura de la pantalla.
# Description: 
Image__ClickEventDescriptions=Un evento que ocurre cuando se hace clic en una imagen.
# Description: 
ImageWidthPropertyDescriptions=El ancho de la imagen de la vistaDelista.
# Description: 
ImageWidthProperties=AnchoImagen
# Description: 
ImageSprite__ZPropertyDescriptions=Cómo se debe superponer el `ImagenSprite` en relación con otros
# Description: 
ImageSprite__YPropertyDescriptions=La coordenada vertical del borde superior del ImagenSprite, que aumenta a medida que el ImagenSprite se mueve hacia abajo.
# Description: 
ImageSprite__XPropertyDescriptions=La coordenada horizontal del borde izquierdo del ImagenSprite, que aumenta a medida que el ImagenSprite se mueve hacia la derecha.
# Description: 
ImageSprite__WidthPropertyDescriptions=Anchura del ImagenSprite en píxeles.
# Description: 
ImageSprite__VisiblePropertyDescriptions=Si el ImagenSprite es visible.
# Description: 
ImageSprite__TouchedEventDescriptions=El controlador de evento se llama cuando el usuario toca un ImagenSprite habilitado y luego levanta inmediatamente el dedo. Las coordenadas x e y proporcionadas son relativas a la parte superior izquierda del lienzo.
# Description: 
ImageSprite__TouchUpEventDescriptions=El controlador de evento se llama cuando el usuario deja de tocar un ImagenSprite habilitado (levantando el dedo después de un evento Presionado). Esto proporciona las coordenadas x e y del toque, en relación con la parte superior izquierda del lienzo.
# Description: 
ImageSprite__TouchDownEventDescriptions=El controlador de evento se llama cuando el usuario comienza a tocar un ImagenSprite habilitado (colocando su dedo en un ImagenSprite y dejándolo allí). Esto proporciona las coordenadas x e y del toque, en relación con la parte superior izquierda del lienzo.
# Description: 
ImageSprite__SpeedPropertyDescriptions=La cantidad de píxeles que ImagenSprite debe mover en cada intervalo, si está habilitado.
# Description: 
ImageSprite__PointTowardsMethodDescriptions=Gira el ImagenSprite para que apunte hacia un objeto objetivo designado (Pelotao ImagenSprite). El nuevo rumbo será paralelo a la línea que une los puntos centrales de los dos sprites.
# Description: 
ImageSprite__PointInDirectionMethodDescriptions=Establece el rumbo del ImagenSprite hacia el punto con las coordenadas (x, y).
# Description: 
ImageSprite__PicturePropertyDescriptions=La imagen que determina la apariencia del ImagenSprite.
# Description: 
ImageSprite__MoveToPointMethodDescriptions=Mueve el origen de ImagenSprite a la posición de las coordenadas dadas por la lista formateada como [coordenada x, coordenada y].
# Description: 
ImageSprite__MoveToMethodDescriptions=Mueve el ImagenSprite para que su esquina superior izquierda esté en las coordenadas x e y especificadas.
# Description: 
ImageSprite__MoveIntoBoundsMethodDescriptions=Mueve el ImagenSprite nuevamente dentro de los límites si parte de él se extiende fuera de los límites, sin tener ningún efecto en caso contrario. Si el ImagenSprite es demasiado ancho para caber en el lienzo, esto alinea el lado izquierdo del ImagenSprite con el lado izquierdo del lienzo. Si el ImagenSprite es demasiado alto para caber en el lienzo, esto alinea el lado superior del ImagenSprite con el lado superior del lienzo.
# Description: 
ImageSprite__IntervalPropertyDescriptions=El intervalo en milisegundos en el que se actualiza la posición del ImagenSprite. Por ejemplo, si el intervalo es 50 y la velocidad es 10, entonces cada 50 milisegundos el objeto se moverá 10 píxeles en la dirección del rumbo.
# Description: 
ImageSprite__HeightPropertyDescriptions=La altura del ImagenSprite en píxeles.
# Description: 
ImageSprite__HeadingPropertyDescriptions=Devuelve el rumbo del ImagenSprite en grados por encima del eje x positivo. Cero grados está hacia la derecha de la pantalla; 90 grados está hacia la parte superior de la pantalla.
# Description: 
ImageSprite__FlungEventDescriptions=Se llama al controlador de evento cuando se realiza un gesto de lanzamiento (deslizamiento rápido) en un ImagenSprite habilitado. Esto proporciona las coordenadas x e y del inicio del lanzamiento (en relación con la parte superior izquierda del lienzo), la velocidad (píxeles por milisegundo), el rumbo (-180 a 180 grados) y los componentes de velocidad x e y de el vector del lanzamiento.
# Description: 
ImageSprite__EnabledPropertyDescriptions=Controla si el ImagenSprite se mueve y se puede interactuar con él mediante colisiones, arrastre, toque y lanzamiento.
# Description: 
ImageSprite__EdgeReachedEventDescriptions=Controlador de evento llamado cuando ImagenSprite llega a un borde de la pantalla. Si luego se llama a Rebotar con ese borde, el ImagenSprite parecerá rebotar en el borde que alcanzó. El borde aquí se representa como un número entero que indica una de ocho direcciones norte (1), noreste (2), este (3), sureste (4), sur (-1), suroeste (-2), oeste (-3). , y noroeste (-4).
# Description: 
ImageSprite__DraggedEventDescriptions=Controlador de evento llamado cuando se arrastra un ImagenSprite. En todas las llamadas, las coordenadas iniciales son donde se tocó la pantalla por primera vez y las coordenadas "actuales" describen el punto final del segmento de línea actual. En la primera llamada dentro de un arrastre determinado, las coordenadas "anteriores" son las mismas que las coordenadas iniciales; posteriormente son las coordenadas "actuales" de la convocatoria anterior. Tenga en cuenta que ImagenSprite en realidad no se moverá a ninguna parte en respuesta al evento Arrastrado a menos que se llame explícitamente a MoverA. Para un movimiento suave, cada una de sus coordenadas debe establecerse en la suma de su valor inicial y la diferencia entre sus valores actuales y anteriores.
# Description: 
ImageSprite__CollidingWithMethodDescriptions=Indica si se ha registrado una colisión entre este ImagenSprite y el sprite pasado (Pelota o ImagenSprite).
# Description: 
ImageSprite__BounceMethodDescriptions=Hace que ImagenSprite rebote, como si estuviera en una pared. Para un rebote normal, el argumento de borde debe ser el que devuelve BordeAlcanzado.
# Description: 
ImagePicker__WidthPropertyDescriptions=Especifica el ancho horizontal del SelectorImagen, medido en píxeles.
# Description: 
ImagePicker__WidthPercentPropertyDescriptions=Especifica el ancho horizontal de SelectorImagen como porcentaje del ancho de la pantalla.
# Description: 
ImagePicker__VisiblePropertyDescriptions=Especifica si el SelectorImagen debe estar visible en la pantalla. El valor es verdadero si se muestra y falso si está oculto.
# Description: 
ImagePicker__TouchUpEventDescriptions=Indica si el SelectorImagen ha sido liberado.
# Description: 
ImagePicker__TouchDownEventDescriptions=Indica si el SelectorImagen fue presionado.
# Description: 
ImagePicker__TextPropertyDescriptions=Texto a mostrar en el SelctorImagen.
# Description: 
ImagePicker__TextColorPropertyDescriptions=Color del texto del botón.
# Description: 
ImagePicker__TextAlignmentPropertyDescriptions=Izquierda, centro, or derecha.
# Description: 
ImagePicker__ShowFeedbackPropertyDescriptions=Especifica si se debe mostrar una respuesta visual para un SelectorImagen que tiene una imagen como fondo.
# Description: 
ImagePicker__ShapePropertyDescriptions=Devuelve el estilo del `SelectorImagen`.
# Description: 
ImagePicker__SelectionPropertyDescriptions=Ruta al archivo que contiene la imagen seleccionada.
# Description: 
ImagePicker__OpenMethodDescriptions=Abre el SelectorImagen, como si el usuario hubiera hecho clic en él.
# Description: 
ImagePicker__LostFocusEventDescriptions=Indica que el cursor se alejó del SelectorImagen, por lo que ahora ya no es posible hacer clic en él.
# Description: 
ImagePicker__ImagePropertyDescriptions=Imagen para mostrar sobre el botón.
# Description: 
ImagePicker__HeightPropertyDescriptions=Especifica la altura vertical del SelectorImagen, medida en píxeles.
# Description: 
ImagePicker__HeightPercentPropertyDescriptions=Especifica la altura vertical del SelectorImagen como porcentaje de la altura de la pantalla.
# Description: 
ImagePicker__GotFocusEventDescriptions=Indica que el cursor se movió sobre SelectorImagen por lo que ahora es posible hacer clic en él.
# Description: 
ImagePicker__FontTypefacePropertyDescriptions=Familia de fuentes para el texto de SelectorImagen.
# Description: 
ImagePicker__FontSizePropertyDescriptions=Tamaño en puntos para el texto de SelectorImagen.
# Description: 
ImagePicker__FontItalicPropertyDescriptions=Si activado, el texto del SelectorImagen se muestra en cursiva.
# Description: 
ImagePicker__FontBoldPropertyDescriptions=Si activado, el texto del SelectorImagen se muestra en negrita.
# Description: 
ImagePicker__EnabledPropertyDescriptions=Si activado, el usuario puede tocar SelectorImagen para realizar una acción.
# Description: 
ImagePicker__BeforePickingEventDescriptions=Evento que se genera cuando se hace clic en `SelectorImagen` o se muestra el selector usando el
# Description: 
ImagePicker__BackgroundColorPropertyDescriptions=Devuelve el color de fondo del botón
# Description: 
ImagePicker__AfterPickingEventDescriptions=El evento se generará después de que la actividad `SelectorImagen` devuelva su resultado y se hayan completado las propiedades.
# Description: 
ImageHeightPropertyDescriptions=La altura de la imagen de los elementos de cadena de la imagen de la vistalista.
# Description: 
ImageHeightProperties=AlturaImagen
# Description: 
ImageEditedEvents=ImagenEditada
# Description: 
ImageEditedEventDescriptions=El evento ImagenCreada se ejecutará cuando ImageBot edite una imagen con éxito.
# Description: 
ImageCreatedEvents=ImagenCreada
# Description: 
ImageCreatedEventDescriptions=El evento ImagenCreada se ejecutará cuando ImageBot cree exitosamente una imagen.
# Description: 
ImageBot__TokenPropertyDescriptions=El token de acceso MIT que se utilizará. MIT App Inventor completará automáticamente este valor. No debería ser necesario cambiarlo.
# Description: 
RequestBallotMethodDescriptions=Enviar una solicitud de votación al servicio web especificado por la propiedad <code>URLServicio</code>. Cuando se complete, se generará uno de los siguientes eventos: <code>VotaciónObtenida</code>, <code>NoEncuestaAbierta</code> o <code>ErrorServicioWeb</code>.
# Description: 
RemoveRowMethods=EliminarFila
# Description: 
RemoveRowMethodDescriptions=Elimina la fila con el número de fila dado de la tabla. Esto no borra la fila, pero la elimina por completo.
# Description: 
RemoveItemAtIndexMethods=EliminarElementoConÍndice
# Description: 
RemoveItemAtIndexMethodDescriptions=Elimina el elemento de la lista en un índice determinado
# Description: 
RemoveFirstMethods=EliminarPrimero
# Description: 
RemoveFirstMethodDescriptions=Devuelve el primer elemento de una lista y elimínalo atómicamente. Si dos dispositivos usan esta función simultáneamente, uno obtendrá el primer elemento y el otro obtendrá el segundo elemento, o error si no hay ningún elemento disponible. Cuando el elemento esté disponible, se activará el evento "EliminadoPrimero".
# Description: 
RemoveFirstFromListMethods=EliminarPrimeroDeLista
# Description: 
RemoveFirstFromListMethodDescriptions=Devuelve el primer elemento de una lista y elimínalo atómicamente. Si dos dispositivos usan esta función simultáneamente, uno obtendrá el primer elemento y el otro obtendrá el segundo elemento, o error si no hay ningún elemento disponible. Cuando el elemento esté disponible, se activará el evento "EliminadoPrimero".
# Description: 
RemoveEntryMethods=EliminarEntrada
# Description: 
RemoveEntryMethodDescriptions=Elimina una entrada con el valor x e y especificado, siempre que exista. Ver
# Description: 
RemoveDirectoryMethods=EliminarDirectorio
# Description: 
RemoveDirectoryMethodDescriptions=Eliminar un directorio del sistema de archivos. Si recursivo es verdadero, entonces se elimina todo. Si recursivo es falso, sólo se elimina el directorio y sólo si está vacío.
# Description: 
RemoveDataSourceMethods=EliminarFuenteDatos
# Description: 
RemoveDataSourceMethodDescriptions=Desvincula el componente de fuente de datos actualmente asociado del gráfico.
# Description: 
RemoveColumnMethods=EliminarColumna
# Description: 
RemoveColumnMethodDescriptions=Elimina la columna con el número de columna dado de la tabla. Esto no borra la columna, pero la elimina por completo.
# Description: 
ReloadMethods=Recargar
# Description: 
ReloadMethodDescriptions=Recargar la página actual.
# Description: 
ReleasedEventEnabledPropertyDescriptions=Si el evento Liberado debe activarse cuando se libera el sensor táctil.
# Description: 
RegressionHelpStringComponentPallette=Un componente que contiene modelos de regresión
# Description: 
RefreshTimePropertyDescriptions=El tiempo mínimo solicitado en milisegundos entre los cambios en las lecturas que se informan. No se garantiza que Android cumpla con la solicitud. Establecer esta propiedad no tiene ningún efecto en los dispositivos anteriores a Gingerbread.
# Description: 
RefreshTimeProperties=ActualizarTiempo
# Description: 
RefreshMethods=Actualizar
# Description: 
RefreshMethodDescriptions=Vuelva a cargar VistaDeLista para reflejar cualquier cambio en los datos.
# Description: 
RedisServerPropertyDescriptions=El Servidor Redis que se utilizará para almacenar datos. Una configuración de "DEFAULT" significa que se utilizará el servidor MIT.
# Description: 
RedisServerProperties=ServidorRedis
# Description: 
RedisPortPropertyDescriptions=El puerto del servidor Redis que se utilizará. El valor predeterminado es 6381
# Description: 
RedisPortProperties=PuertoRedis
# Description: 
Rectangle__VisiblePropertyDescriptions=Especifica si el Rectángulo debe estar visible en la pantalla. El valor es verdadero si el componente se muestra y falso si está oculto.
# Description: 
Rectangle__TypePropertyDescriptions=Devuelve el tipo de característica. Para rectángulos, esto devuelve MapFeature.Rectangle ("Rectángulo").
# Description: 
Rectangle__TitlePropertyDescriptions=El título que se muestra en la ventana de información que aparece cuando el usuario hace clic en el Rectángulo.
# Description: 
Rectangle__StrokeWidthPropertyDescriptions=El ancho del trazo utilizado para delinear el Rectángulo.
# Description: 
Rectangle__StrokeColorPropertyDescriptions=El color utilizado para delinear el Rectángulo.
# Description: 
Rectangle__ShowInfoboxMethodDescriptions=Muestra el cuadro de información del Rectángulo. Esto mostrará el cuadro de información incluso si CuadroInfoHabilitado está configurado en falso.
# Description: 
Rectangle__LongClickEventDescriptions=El usuario presionó prolongadamente el Rectángulo. Este evento solo se activará si Arrastrable es falso.
# Description: 
Rectangle__FillColorPropertyDescriptions=El color utilizado para rellenar el Rectángulo.
# Description: 
Rectangle__EnableInfoboxPropertyDescriptions=Habilitar o deshabilitar la visualización de la ventana del cuadro de información cuando el usuario toca el Rectángulo.
# Description: 
Rectangle__DraggablePropertyDescriptions=La propiedad Arrastrable se utiliza para establecer si el usuario puede arrastrar el Rectángulo manteniendo presionado y luego arrastrando el Rectángulo a una nueva ubicación.
# Description: 
Rectangle__DragEventDescriptions=El usuario arrastró el Rectángulo.
# Description: 
Rectangle__DistanceToPointMethodDescriptions=Calcular la distancia, en metros, entre un rectángulo y un punto de latitud y longitud.
# Description: 
Rectangle__DescriptionPropertyDescriptions=La descripción que se muestra en la ventana de información que aparece cuando el usuario hace clic en el Rectángulo.
# Description: 
Rectangle__ClickEventDescriptions=El usuario hizo clic en el Rectángulo.
# Description: 
RectangleHelpStringComponentPallette=Los Rectángulos son polígonos con latitudes y longitudes fijas para los límites norte, sur, este y oeste. Mover un vértice del Rectángulo actualiza los bordes apropiados en consecuencia.
# Description: 
RecordVideoMethodDescriptions=Graba un vídeo y luego levanta el
# Description: 
ReceivingEnabledPropertyDescriptions=Si se establece en 1 (OFF), no se recibirán mensajes. Si se establece en 2 (PRIMER PLANO) o 3 (SIEMPRE), el componente responderá a los mensajes si se está ejecutando. Si la aplicación no se está ejecutando, el mensaje se descartará si se establece en 2 (SEGUNDO PLANO). Si se establece en 3 (SIEMPRE) y la aplicación no se está ejecutando, el teléfono mostrará una notificación. Al seleccionar la notificación, aparecerá la aplicación y señalará el evento MensajeRecibido. Los mensajes recibidos cuando la aplicación está inactiva se pondrán en cola y, por lo tanto, es posible que aparezcan varios eventos MensajeRecibido cuando la aplicación se active. Como desarrollador de aplicaciones, sería una buena idea darles a sus usuarios control sobre esta propiedad, para que puedan hacer que sus teléfonos ignoren los mensajes de texto cuando su aplicación esté instalada.
# Description: 
ReceiveUnsignedBytesMethodDescriptions=Recibir múltiples valores de bytes sin signo desde el dispositivo Bluetooth conectado. Si númeroDeBytes es menor que 0, lea hasta que se reciba un valor de byte delimitador.
# Description: 
ReceiveUnsigned4ByteNumberMethodDescriptions=Recibir un número de 4-byte sin signo desde el dispositivo Bluetooth conectado.
# Description: 
ReceiveUnsigned2ByteNumberMethodDescriptions=Recibir un número de 2-byte sin signo desde el dispositivo Bluetooth conectado.
# Description: 
ReceiveUnsigned1ByteNumberMethodDescriptions=Recibir un número de 1 byte sin signo desde el dispositivo Bluetooth conectado.
# Description: 
ReceiveTextMethodDescriptions=Recibir mensajes de texto desde el dispositivo Bluetooth conectado. Si númeroDeBytes es menor que 0, lea hasta que se reciba un valor de byte delimitador.
# Description: 
ReceiveSignedBytesMethodDescriptions=Recibir múltiples valores de bytes con signo desde el dispositivo Bluetooth conectado. Si númeroDeBytes es menor que 0, lea hasta que se reciba un valor de byte delimitador.
# Description: 
ReceiveSigned4ByteNumberMethodDescriptions=Recibir un número con signo de 4-byte desde el dispositivo Bluetooth conectado.
# Description: 
ReceiveSigned2ByteNumberMethodDescriptions=Recibir un número con signo de 2-byte desde el dispositivo Bluetooth conectado.
# Description: 
ReceiveSigned1ByteNumberMethodDescriptions=Recibir un número con signo de 1 byte desde el dispositivo Bluetooth conectado.
# Description: 
ReadyEvents=Listo
# Description: 
ReadyEventDescriptions=El mapa se ha inicializado y está listo para la interacción del usuario.
# Description: 
ReadWithPartialFilterMethods=LeerConFiltroParcial
# Description: 
ReadWithPartialFilterMethodDescriptions=Filtra una hoja de Google para filas donde el número de columna dado contiene la cadena de valor proporcionada.
# Description: 
ReadWithExactFilterMethods=LeerConFiltroExacto
# Description: 
ReadWithExactFilterMethodDescriptions=Filtra una hoja de Google para filas donde el número de columna dado coincide con el valor proporcionado.
# Description: 
ReadSheetMethods=LeerHoja
# Description: 
ReadSheetMethodDescriptions=Lee el documento *completo* de Google Sheet y activa el evento de respuesta DatosHojaObtenido.
# Description: 
ReadSerialMethods=LeerSerie
# Description: 
ReadSerialMethodDescriptions=Lee datos de serie.
# Description: 
ReadRowMethods=LeerFila
# Description: 
ReadRowMethodDescriptions=En la página con el nombre de hoja proporcionado, este método leerá la fila en el númeroFila dado y activará el evento de respuesta DatosFilaObtenido.
# Description: 
ReadRangeMethods=LeerRango
# Description: 
ReadRangeMethodDescriptions=En la página con el nombreHoja proporcionado, lee las celdas en el rango dado. Activa obtenerRefernciaRango una vez completado.
# Description: 
ReadPermissionPropertyDescriptions=Una propiedad exclusiva del diseñador que se puede utilizar para habilitar el acceso de lectura al almacenamiento de archivos fuera de los directorios específicos de la aplicación.
# Description: 
ReadPermissionProperties=PermisoDeLectura
# Description: 
ReadOnlyPropertyDescriptions=Si el CuadroDeTexto es de solo lectura. Por defecto, esto es falso.
# Description: 
ReadOnlyProperties=SoloLectura
# Description: 
ReadModePropertyDescriptions=Devuelve verdadero si está en modo de lectura, falso si está en modo de escritura.
# Description: 
ReadFromMethodDescriptions=Lee texto de un archivo almacenado. Prefije el nombre del archivo con / para leer desde un archivo específico en la tarjeta SD. por ejemplo /myFile.txt leerá el archivo /sdcard/myFile.txt. Para leer recursos empaquetados con una aplicación (también funciona para Companion), comience el nombre del archivo con // (dos barras). Si un nombre de archivo no comienza con una barra diagonal, se leerá desde el almacenamiento privado de la aplicación (para aplicaciones empaquetadas) y desde /sdcard/AppInventor/data para Companion.
# Description: 
ReadFileMethods=LeerFichero
# Description: 
ReadFileMethodDescriptions=Indica el archivo fuente desde el que cargar datos. El formato esperado del contenido del archivo es CSV o JSON. Prefije el nombre del archivo con / para leer desde un archivo específico en la tarjeta SD. por ejemplo /myFile.txt leerá el archivo /sdcard/myFile.txt. Para leer recursos empaquetados con una aplicación (también funciona para Companion), comience el nombre del archivo con // (dos barras). Si un nombre de archivo no comienza con una barra diagonal, se leerá desde el almacenamiento privado de la aplicación (para aplicaciones empaquetadas) y desde /sdcard/AppInventor/data para Companion. Los resultados de la lectura se almacenan en las propiedades del componente Filas, Columnas y NombresColumna.
# Description: 
ReadColumnMethods=LeerColumna
# Description: 
ReadColumnMethodDescriptions=En la página con el nombre de hoja proporcionado, lee la columna en el índice dado y activa el evento de devolución de llamada DatosColumnaObtenido.
# Description: 
ReadCellMethods=LeerCelda
# Description: 
ReadCellMethodDescriptions=En la página con el nombre de hoja proporcionado, lee la celda en la referencia de celda dada y activa el evento de devolución de llamada DatosCeldaObtenido.
# Description: 
QueryPropertyDescriptions=La consulta que se enviará a la API de Fusion Tables. <p>Para ver ejemplos y formatos de consultas legales, consulte el <a href="https://developers.google.com/fusiontables/docs/v2/getting_started" target="_blank">manual de referencia de Fusion Tables API v2.0</a>.</p> <p>Tenga en cuenta que no necesita preocuparse por la codificación UTF de la consulta. Pero sí debe asegurarse de que siga la sintaxis descrita en el manual de referencia, lo que significa que aspectos como el uso de mayúsculas en los nombres de las columnas son importantes y que se deben usar comillas simples alrededor de los nombres de las columnas si hay espacios en ellos.</p >
# Description: 
PutTextWithEncodingMethodDescriptions=Realiza una solicitud HTTP PUT usando la propiedad Url y el texto especificado.<br>Los caracteres del texto se codifican usando la codificación dada.<br>Si la propiedad GuardarRespuesta es verdadera, la respuesta se guardará en un archivo y el FicheroObtenido se activará el evento. La propiedad NombreFicheroRespuesta se puede utilizar para especificar el nombre del archivo.<br>Si la propiedad GuardarRespuesta es falsa, se activará el evento TextoObtenido.
# Description: 
PutTextMethodDescriptions=Realiza una solicitud HTTP PUT usando la propiedad Url y el texto especificado.<br>Los caracteres del texto se codifican usando codificación UTF-8.<br>Si la propiedad GuardarRespuesta es verdadera, la respuesta se guardará en un archivo y el Se activará el evento FicheroObtenido. La propiedad NombreFicheroRespuesta se puede utilizar para especificar el nombre del archivo.<br>Si la propiedad GuardarRespuesta es falsa, se activará el evento TextoObtenido.
# Description: 
PutFileMethodDescriptions=Realiza una solicitud HTTP PUT utilizando la propiedad Url y los datos del archivo especificado.<br>Si la propiedad GuardarRespuesta es verdadera, la respuesta se guardará en un archivo y se activará el evento FicheroObtenido. La propiedad NombreFicheroRespuesta se puede utilizar para especificar el nombre del archivo.<br>Si la propiedad GuardarRespuestae es falsa, se activará el evento TextoObtenido.
# Description: 
ImageBot__ErrorOccurredEventDescriptions=El evento ErrorGenerado se ejecutará cuando se produzca un error durante el procesamiento, como si olvida proporcionar una clave API o si el servidor está sobrecargado.
# Description: 
ImageBot__ApiKeyPropertyDescriptions=Especifica la ClaveApi utilizada para autenticarse con ImageBot.
# Description: 
ImageBotHelpStringComponentPallette=ImageBot es un componente no visible que utiliza DALL-E 2 para crear y editar imágenes. Debe proporcionar su propia clave API de OpenAI para este componente configurando su propiedad ClaveApi en los bloques.
# Description: 
ImageAssetPropertyDescriptions=Especifica la imagen que se muestra para el "Marcador". Si se establece en la cadena vacía "", se utilizará el icono de marcador predeterminado.
# Description: 
ImageAssetProperties=ActivoImagen
# Description: 
IgnoreSslErrorsPropertyDescriptions=Determina si se ignoran o no los errores de SSL. Establezca en verdadero para ignorar los errores. Utilícelo para aceptar certificados autofirmados de sitios web.
# Description: 
IgnoreSslErrorsProperties=IgnorarErroresSsl
# Description: 
IconPropertyDescriptions=La imagen utilizada para el ícono de visualización de su aplicación debe ser una imagen png o jpeg cuadrada con dimensiones de hasta 1024x1024 píxeles. Las imágenes más grandes pueden provocar que falle la compilación o instalación de la aplicación. El servidor de compilación generará imágenes de dimensiones estándar para dispositivos Android.
# Description: 
Hygrometer__EnabledPropertyDescriptions=Si está habilitado, el dispositivo escuchará los cambios.
# Description: 
Hygrometer__AvailablePropertyDescriptions=Especifica si el dispositivo tiene o no el hardware para admitir el componente Higrómetro.
# Description: 
HygrometerHelpStringComponentPallette=Un componente del sensor que puede medir la humedad relativa del aire ambiente. La mayoría de dispositivos Android no cuentan con este sensor.
# Description: 
HumidityPropertyDescriptions=La humedad ambiental relativa como porcentaje, si el sensor está disponible y habilitado.
# Description: 
HumidityProperties=Humedad
# Description: 
HumidityChangedEvents=HumedadCambiada
# Description: 
HumidityChangedEventDescriptions=Se llama cuando se detecta un cambio en la humedad del aire ambiente (expresada como porcentaje).
# Description: 
FriendTimelinePropertyDescriptions=Esta propiedad contiene los 20 mensajes más recientes de los usuarios a los que se sigue. Inicialmente, la lista está vacía. Para configurarlo, el programa debe: <ol> <li> Llamar al método <code>Autorizar</code>.</li> <li> Esperar el evento <code>estáAutorizado</code>.</li> <li> Especifique los usuarios a seguir con una o más llamadas al método <code>Seguir</code>.</li> <li> Llame al método <code>SolicitarCronologíaAmigo</code>.</li> <li> Espere el evento <code>RecibidoCronologíaAmigo</code>.</li> </ol>El valor de esta propiedad se establecerá en la lista de mensajes (y mantendrá su valor hasta cualquier llamada posterior a <code>SolicitarCronologíaAmigo</code>.
# Description: 
HtmlTextDecodeMethodDescriptions=Decodifica el valor de texto HTML dado. Las entidades de caracteres HTML como `&`, `<`, `>`, `''` y `"` se cambian a &, <, >, '' y ". Entidades como &#xhhhh y &#nnnn se cambian a los caracteres apropiados.
# Description: 
HourPropertyDescriptions=La hora de la última vez configurada usando el selector de hora. La hora está en formato de 24 horas. Si la última hora establecida fue las 11:53 p. m., esta propiedad devolverá 23.
# Description: 
HourMethodDescriptions=Devuelve la hora del día (0-23) del instante.
# Description: 
HorizontalScrollArrangement__WidthPropertyDescriptions=Especifica el ancho horizontal de DisposiciónDesplazamientoHorizontal, medido en píxeles.
# Description: 
HorizontalScrollArrangement__WidthPercentPropertyDescriptions=Especifica el ancho horizontal de DisposiciónDesplazamientoHorizontal como porcentaje del ancho de la pantalla.
# Description: 
HorizontalScrollArrangement__VisiblePropertyDescriptions=Especifica si DisposiciónDesplazamientoHorizontal debe estar visible en la pantalla. El valor es verdadero si se muestra y falso si está oculto.
# Description: 
HorizontalScrollArrangement__ImagePropertyDescriptions=Devuelve la ruta de la imagen de fondo de `DisposiciónDesplazamientoHorizontal`.
# Description: 
HorizontalScrollArrangement__HeightPropertyDescriptions=Especifica la altura vertical de DisposiciónDesplazamientoHorizontal, medida en píxeles.
# Description: 
HorizontalScrollArrangement__HeightPercentPropertyDescriptions=Especifica la altura vertical de DisposiciónDesplazamientoHorizontal como porcentaje de la altura de la pantalla.
# Description: 
HorizontalScrollArrangement__BackgroundColorPropertyDescriptions=Devuelve el color de fond de la DisposiciónDesplazamientoHorizontal
# Description: 
HorizontalScrollArrangement__AlignVerticalPropertyDescriptions=Número que codifica cómo se alinean verticalmente los contenidos de DisposiciónDesplazamientoHorizontal. Las opciones son: 1 = alineado en la parte superior, 2 = centrado verticalmente, 3 = alineado en la parte inferior. La alineación no tiene ningún efecto si la altura es automática.
# Description: 
HorizontalScrollArrangement__AlignHorizontalPropertyDescriptions=Número que codifica cómo se alinean horizontalmente los contenidos de DisposiciónDesplazamientoHorizontal. Las opciones son: 1 = alineado a la izquierda, 2 = alineado a la derecha, 3 = centrado horizontalmente. La alineación no tiene ningún efecto si el ancho es automático.
# Description: 
HorizontalScrollArrangementHelpStringComponentPallette=<p>Un elemento de formato en el que colocar los componentes que deben mostrarse de izquierda a derecha. Si desea que los componentes se muestren uno sobre otro, utilice <code>DisposiciónVertical</code> en su lugar.</p><p>Esta versión es desplazable.
# Description: 
HorizontalArrangement__WidthPropertyDescriptions=Especifica el ancho horizontal de DisposiciónHorizontal, medido en píxeles.
# Description: 
HorizontalArrangement__WidthPercentPropertyDescriptions=Especifica el ancho horizontal de DisposiciónHorizontal como porcentaje del ancho de la pantalla.
# Description: 
HorizontalArrangement__VisiblePropertyDescriptions=Especifica si la DisposiciónHorizontal debe estar visible en la pantalla. El valor es verdadero si se muestra y falso si está oculto.
# Description: 
HorizontalArrangement__ImagePropertyDescriptions=Devuelve la ruta de la imagen de fondo de `DisposiciónHorizontal`.
# Description: 
HorizontalArrangement__HeightPropertyDescriptions=Especifica la altura vertical de DisposiciónHorizontal, medida en píxeles.
# Description: 
HorizontalArrangement__HeightPercentPropertyDescriptions=Especifica la altura vertical de la DisposiciónHorizontal como porcentaje de la altura de la pantalla.
# Description: 
HorizontalArrangement__BackgroundColorPropertyDescriptions=Devuelve el color de fondo de la DisposiciónHorizontal
# Description: 
HorizontalArrangement__AlignVerticalPropertyDescriptions=Número que codifica cómo se alinean verticalmente los contenidos de DisposiciónHorizontal. Las opciones son: 1 = alineado en la parte superior, 2 = centrado verticalmente, 3 = alineado en la parte inferior. La alineación no tiene ningún efecto si la altura es automática.
# Description: 
HideInfoboxMethodDescriptions=Ocultar el cuadro de información si se muestra. Si el cuadro de información no está visible, esta función no tiene ningún efecto.
# Description: 
HeightPercentProperties=PorcentajeAltura
# Description: 
HasMarginsPropertyDescriptions=Informa si la etiqueta aparece o no con márgenes. Los cuatro márgenes (izquierdo, derecho, superior, inferior) son iguales. Esta propiedad no tiene ningún efecto en el diseñador, donde las etiquetas siempre se muestran con márgenes.
# Description: 
HasMarginsProperties=TieneMárgenes
# Description: 
HasLongitudeLatitudePropertyDescriptions=Si `verdadero
# Description: Error given if project contains extensions
HasExtensionError=Los proyectos con extensiones no se pueden publicar en la galería.
# Description: 
HasAltitudePropertyDescriptions=Si `verdadero
# Description: 
HasAccuracyPropertyDescriptions=Si `verdadero
# Description: 
HTMLFormatPropertyDescriptions=Si es verdadero, entonces esta etiqueta mostrará texto html; de lo contrario, mostrará texto sin formato. Nota: No todo el HTML es compatible.
# Description: 
HTMLFormatProperties=FormatoHTML
# Description: 
HTMLContentPropertyDescriptions=Devuelve el contenido de la Etiqueta como HTML. Esto sólo es útil si la propiedad FormatoHTML es verdadera.
# Description: 
HTMLContentProperties=ContenidoHTML
# Description: 
GyroscopeSensor__EnabledPropertyDescriptions=Método de obtención de propiedades habilitado.
# Description: 
GyroscopeSensor__AvailablePropertyDescriptions=Indica si está disponible el sensor giroscopio.
# Description: 
GyroscopeSensorHelpStringComponentPallette=<p>Componente no visible que puede medir la velocidad angular en tres dimensiones en unidades de grados por segundo.</p><p>Para funcionar, el componente debe tener su propiedad <code>Habilitado</code> establecida en Verdadero, y el dispositivo debe tener un sensor giroscópico.</p>
# Description: 
GyroscopeChangedEvents=GiroscopioCambiado
# Description: 
GyroscopeChangedEventDescriptions=Indica que los datos del sensor giroscopio han cambiado. El parámetro de marca de tiempo es el tiempo en nanosegundos en el que ocurrió el evento.
# Description: 
GridEnabledPropertyDescriptions=Devuelve un valor booleano que indica si la cuadrícula está habilitada en el Gráfico.
# Description: 
GridEnabledProperties=HabilitadaCuadrícula
# Description: 
GotSheetDataEvents=ObtenidoDatosHoja
# Description: 
GotSheetDataEventDescriptions=El evento de rspuesta para el bloque LeerHoja. Donde `datosHoja` es una lista de filas.
# Description: 
GotRowDataEvents=ObtenidoDatosFila
# Description: 
GotRowDataEventDescriptions=El evento de respuesta para el bloque LeerFila. `listaDatosFila` es una lista de valores de celda en orden creciente de número de columna.
# Description: 
GotResultEventDescriptions=Indica que la consulta de Fusion Tables ha terminado de procesarse, con un resultado. El resultado de la consulta generalmente se devolverá en formato CSV y se puede convertir a formato de lista utilizando los bloques "lista de tabla csv" o "lista de fila csv".
# Description: 
GotResponseEvents=ObtenidoRespuesta
# Description: 
GotResponseEventDescriptions=Evento que se activa cuando el Chat Bot responde una pregunta.
# Description: 
GotRangeDataEvents=ObtenidoDatosRango
# Description: 
GotRangeDataEventDescriptions=El evento de respuesta para el bloque LeerRango. `datosRango` es una lista de filas con las dimensiones solicitadas.
# Description: 
GotMessageEventDescriptions=Indica que un nuevo mensaje ha sido recibido.
# Description: 
GotFilterResultEventDescriptions=El evento de respuesta para el bloque LeerConConsultaExacta o LeerConConsultaParcial. La "respuesta" es una lista de números de filas y una lista de filas que contienen datos de celda.
# Description: 
GotFileEventDescriptions=Evento que indica que una solicitud ha finalizado.
# Description: 
GotFeaturesEvents=ObtenidoCaracterísticas
# Description: 
GotFeaturesEventDescriptions=Se leyó correctamente un documento GeoJSON desde la URL. Las características especificadas en el documento se proporcionan como una lista de características.
# Description: 
GotDirectionsEvents=ObtenidoDirecciones
# Description: 
GotDirectionsEventDescriptions=Evento desencadenado cuando el servicio Openroute devuelve las direcciones.
# Description: 
GotColumnDataEvents=ObtenidoDatosColumna
# Description: 
GotColumnDataEventDescriptions=Después de llamar al método LeerColumna, los datos en la columna serán almacenados como una lista de valores de texto en `datosColumna`.
# Description: 
GotCellDataEvents=ObtenidoDatosCelda
# Description: 
GotCellDataEventDescriptions=El evento de respuesta para el bloque LeerCelda. `datosCelda` es el valor de texto en la celda (y no la fórmula subyacente).
# Description: 
GotBallotEventDescriptions=Evento que indica que se recuperó una votación del servicio web y que se han configurado las propiedades <code>PreguntaVotación</code> y <code>OpcionesVotación</code>. Esto siempre va precedido de una llamada al método <code>SolicitarVotación</code>.
# Description: 
GotBallotConfirmationEventDescriptions=Evento que confirma que el servicio de Votación recibió la votación.
# Description: 
GoogleVoiceEnabledPropertyDescriptions=Si es verdadero, EnviarMensaje intentará enviar mensajes a través de Wifi usando Google Voice. Esto requiere que la aplicación Google Voice esté instalada y configurada en el teléfono o tableta, con una cuenta de Google Voice. Si GoogleVoiceActivado es falso, el dispositivo debe tener teléfono y servicio de mensajes de texto para poder enviar o recibir mensajes con este componente.
# Description: 
GoToUrlMethodDescriptions=Carga la página en la URL proporcionada.
# Description: 
GoHomeMethodDescriptions=Carga la página URL de inicio. Esto sucede automáticamente cuando se cambia la URL de inicio.
# Description: 
GoForwardMethodDescriptions=Avanza a la página siguiente en la lista del historial. No hace nada si no hay una página siguiente.
# Description: 
GoBackMethodDescriptions=Regrese a la página anterior en la lista del historial. No hace nada si no hay una página anterior.
# Description: 
GetWifiIpAddressMethodDescriptions=Devuelve la dirección IP del teléfono en forma de cadena
# Description: 
GetVersionNameMethodDescriptions=Devuelve nuestra propiedad NombreVersión
# Description: 
GetTextMethodDescriptions=Pide al usuario que hable y convierte el discurso en texto. Señala el
# Description: 
GetTagsMethodDescriptions=Devuelve una lista de todas las etiquetas en el almacén de datos.
# Description: 
GetTagListMethods=ObtenerListaEtiquetas
# Description: 
GetTagListMethodDescriptions=Obtener la lista de etiquetas para esta aplicación. Cuando se complete, se activará un evento "ListaEtiquetas" con la lista de etiquetas conocidas.
# Description: 
GetTachoCountMethods=ObtenerRecuentoTacómetro
# Description: 
GetTachoCountMethodDescriptions=Obtener el recuento de tacómetro actual.
# Description: 
GetSoundLevelMethodDescriptions=Devuelve el nivel de sonido actual como un valor entre 0 y 1023, o -1 si no se puede leer el nivel de sonido.
# Description: 
GetSensorValueMethods=ObtenerValorSensor
# Description: 
GetSensorValueMethodDescriptions=Devuelve el ángulo actual o la velocidad de rotación según el modo actual, o -1 si el valor no se puede leer desde el sensor.
# Description: 
GetRowsWithConditionsMethods=ObtenerFilasConCondiciones
# Description: 
GetRowsWithConditionsMethodDescriptions=Obtiene todas las filas de una tabla de fusión que cumplen determinadas condiciones. El campo IdTabla es la identificación de la tabla de fusión requerida. El campo de columnas es una lista separada por comas de las columnas que se van a recuperar. El campo de condiciones especifica qué filas recuperar de la tabla, por ejemplo, las filas en las que un valor de columna particular no es nulo.
# Description: 
GetRowsMethods=ObtenerFilas
# Description: 
GetRowsMethodDescriptions=Obtiene todas las filas de una tabla de fusión especificada. El campo IdTabla es la identificación de la tabla de fusión requerida. El campo de columnas es una lista separada por comas de las columnas que se recuperarán.
# Description: 
GetRangeReferenceMethods=ObtenerReferenciaRango
# Description: 
GetRangeReferenceMethodDescriptions=Convierte la representación entera de filas y columnas para las esquinas del rango a la notación A1 utilizada en Google Sheets.
# Description: 
GetPixelColorMethodDescriptions=Obtiene el color del punto especificado.
# Description: 
GetOutputStateMethodDescriptions=Lee el estado de salida de un motor en el robot.
# Description: 
GetOSVersionMethods=ObtenerVersiónSO
# Description: 
GetOSVersionMethodDescriptions=Obtenga la versión del SO en EV3.
# Description: 
GetOSBuildMethods=ObtenerSOCompilación
# Description: 
GetOSBuildMethodDescriptions=Obtener la compilación del sistema operativo en EV3.
# Description: 
GetMillisMethodDescriptions=Devuelve el instante en el tiempo medido en milisegundos desde 1970.
# Description: 
GetMethodDescriptions=Realiza una solicitud HTTP GET utilizando la propiedad Url y recupera la respuesta. Si la propiedad GuardarRespuesta es verdadera, la respuesta se guardará en un archivo y se activará el evento ObtenidoFichero. La propiedad NombreFicheroRespuesta se puede utilizar para especificar el nombre del archivo. Si la propiedad GuardarRespuesta es falsa, se activará el evento ObtenidoTexto.
# Description: 
GetMessagesMethodDescriptions=Recupera mensajes del tipo especificado.
# Description: 
GetMainTextMethods=ObtenerTextoPrincipal
# Description: 
GetMainTextMethodDescriptions=Obtener el Texto Prinipal de un elemento de una VistaLista.
# Description: 
GetInstanceListsMethodDescriptions=Actualiza las listas InstanciasUnidas e InstanciasInvitadas. Este procedimiento se puede llamar antes de configurar IdInstancia.
# Description: 
GetInstallerMethods=ObtenerInstalador
# Description: 
GetInstallerMethodDescriptions=Devolver la aplicación que nos instaló
# Description: 
GetInputValuesMethodDescriptions=Lee los valores de un sensor de entrada en el robot. Se supone que el tipo de sensor se ha configurado mediante EstablecerModoEntrada.
# Description: 
GetImageNameMethods=ObtenerNombreImagen
# Description: 
GetImageNameMethodDescriptions=Obtener el nombre de archivo de la imagen de un elemento VistaLista que se ha subido a Media.
# Description: 
GetHardwareVersionMethods=ObtenerVersiónHardware
# Description: 
GetHardwareVersionMethodDescriptions=Obtenga la versión de hardware de EV3.
# Description: 
GetFirmwareBuildMethods=ObtenerCompilaciónFirmware
# Description: 
GetFirmwareBuildMethodDescriptions=Obtener la compilación del firmware en EV3.
# Description: 
GetEntriesWithYValueMethodDescriptions=Devuelve una Lista de entradas con valores de y que coinciden con el valor de y especificado. Una sola entrada se representa como una Lista de valores de la entrada.
# Description: 
GetEntriesWithYValueMethods=ObtenerEntradaConValorY
# Description: 
GetEntriesWithXValueMethods=ObtenerEntradaConValorX
# Description: 
GetEntriesWithXValueMethodDescriptions=Devuelve una Lista de entradas con valores de x que coinciden con el valor de x especificado. Una sola entrada se representa como una Lista de valores de la entrada.
# Description: 
GetEntriesMethods=ObtenerEntradas
# Description: 
GetEntriesMethodDescriptions=Recupera todas las entradas de datos de TinyDB en forma de diccionarios
# Description: 
GetDurationMethodDescriptions=Devuelve la duración del video en milisegundos.
# Description: 
GetDistanceMethodDescriptions=Devuelve la distancia actual en centímetros como un valor entre 0 y 254, o -1 si no se puede leer la distancia.
# Description: 
GetDetailTextMethods=ObtenerTextoDetalle
# Description: 
GetDetailTextMethodDescriptions=Obtener el texto Detalle de un elemento VistaLista.
# Description: 
GetCurrentProgramNameMethodDescriptions=Obtener el nombre del programa que se está ejecutando actualmente en el robot.
# Description: 
GetColorNameMethods=ObtenerNombreColor
# Description: 
GetColorNameMethodDescriptions=Devuelve el nombre del color en uno de "Sin color", "Negro", "Azul", "Verde", "Amarillo", "Rojo", "Blanco", "Marrón".
# Description: 
GetColorMethodDescriptions=Devuelve el color detectado actualmente o el color Ninguno si el color no se puede leer o si la propiedad DetectarColor está establecida en Falso.
# Description: 
GetColorCodeMethods=ObtenerCódigoColor
# Description: 
GetColorCodeMethodDescriptions=Devuelve el código de color del 0 al 7 correspondiente a ningún color, negro, azul, verde, amarillo, rojo, blanco y marrón.
# Description: 
GetCellReferenceMethods=ObtenerReferenciaCelda
# Description: 
GetCellReferenceMethodDescriptions=Convierte la representación entera de filas y columnas a la notación A1 utilizada en Google Sheets para una sola celda.
# Description: 
GetBrickNameMethodDescriptions=Obtenerel nombre de la pieza del robot.
# Description: 
GetBatteryVoltageMethods=ObtenerVoltajeBatería
# Description: 
GetBatteryVoltageMethodDescriptions=Obtener el voltaje de la batería.
# Description: 
GetBatteryLevelMethodDescriptions=Obtener el nivel de batería del robot. Devuelve el voltaje en milivoltios.
# Description: 
GetBatteryCurrentMethods=ObtenerBateríaActual
# Description: 
GetBatteryCurrentMethodDescriptions=Obtener la batería actual.
# Description: 
GetBackgroundPixelColorMethodDescriptions=Obtiene el color del punto especificado. Esto incluye el fondo y cualquier punto, línea o círculo dibujado, pero no los sprites.
# Description: 
GetAllEntriesMethods=ObtenerTodasEntradas
# Description: 
GetAllEntriesMethodDescriptions=Devuelve todas las entradas de la Serie de Datos. Una sola entrada se representa como una Lista de valores de la entrada.
# Description: 
GenerateLightPropertyDescriptions=Si el sensor de luz debe generar luz.
# Description: 
GenerateColorPropertyDescriptions=El color que debería generar el sensor. Sólo Ninguno, Rojo, Verde o Azul son valores válidos. El sensor no generará color cuando la propiedad DetectarColor esté establecida en Verdadero.
# Description: 
GameIdPropertyDescriptions=El nombre del juego para esta aplicación. El mismo ID de juego puede tener una o más instancias de juego.
# Description: 
GameClient__WebServiceErrorEventDescriptions=Indica que ocurrió un error al comunicarse con el servidor web.
# Description: 
GameClient__UserEmailAddressPropertyDescriptions=La dirección de correo electrónico que se utiliza como identificación de jugador para este cliente de juego. Actualmente, los usuarios deben configurar esto manualmente para poder unirse a un juego. Pero esta propiedad cambiará en el futuro para que se establezca automáticamente y los usuarios no podrán cambiarla.
# Description: 
GameClient__ServiceURLPropertyDescriptions=Establece la URL del servidor de juegos.
# Description: 
GameClient__SendMessageMethodDescriptions=Envía un mensaje clave a todos los destinatarios de la lista de destinatarios. El mensaje constará de la lista de contenidos.
# Description: Error given when sending fails
GallerySendingError=Error al enviar el proyecto a la Galería
# Description: Error given if login fails for some reason
GalleryLoginError=Error al iniciar sesión en la Galería
# Description: 
GPSLostEventDescriptions=Este evento está obsoleto.
# Description: 
GPSAvailableEventDescriptions=Este evento está obsoleto.
# Description: 
FusiontablesControl__ApiKeyPropertyDescriptions=Colocador de la clave API del desarrollador de la aplicación.
# Description: 
FusiontablesControlHelpStringComponentPallette=<p>Un componente no visible que se comunica con Google Fusion Tables. Fusion Tables le permite almacenar, compartir, consultar y visualizar tablas de datos; este componente le permite consultar, crear y modificar estas tablas.</p> <p><font color=red><b>NOTA:</b>&nbsp;Google cerró el servicio Fusion Tables el 3 de diciembre de 2019. Este El componente ya no funciona.</font></p> <p>Este componente utiliza <a href="https://developers.google.com/fusiontables/docs/v2/getting_started" target="_blank">Fusion. API de tablas V2.0</a>. <p>Las aplicaciones que utilizan Fusion Tables deben autenticarse en los servidores de Google. Hay dos maneras de hacer esto. La primera forma utiliza una clave API que usted, el desarrollador, obtiene (ver más abajo). Con este enfoque, los usuarios finales también deben iniciar sesión para acceder a Fusion Table. El segundo enfoque es utilizar una cuenta de servicio. Con este enfoque, usted crea credenciales y una "Dirección de correo electrónico de cuenta de servicio" especial que obtiene de la <a href="https://code.google.com/apis/console/" target="_blank">Consola de API de Google< /a>. Luego, le indica a Fusion Table Control el nombre de la dirección de correo electrónico de la cuenta de servicio, carga la clave secreta como un activo en su aplicación y configura la propiedad KeyFile para que apunte a este archivo. Finalmente, marca la casilla de verificación "UseServiceAuthentication" en el diseñador. Cuando usan una cuenta de servicio, los usuarios finales no necesitan iniciar sesión para usar Fusion Tables; su cuenta de servicio autentica todos los accesos.</p> <p>Para obtener una clave API, siga estas instrucciones.</p> <ol> <li>Ve a tu <a href="https://code.google.com/apis/console/" target="_blank">Consola de API de Google</a> e inicie sesión si es necesario.</li><li>Seleccione <i> Servicios</i> del menú de la izquierda.</li><li>Elija el servicio <i>Fusiontables</i> de la lista proporcionada y actívelo.</li><li>Volver a en el menú principal y seleccione el elemento <i>Acceso API</i>. </li></ol><p>Su clave API estará cerca de la parte inferior de ese panel en la sección llamada "Acceso simple a API". Tendrá que proporcionar esa clave como valor para la <i>ApiKey</. i> propiedad en su aplicación Fusiontables.</p><p>Una vez que tenga una clave API, establezca el valor de la propiedad <i>Query</i> en una consulta SQL de Fusiontables válida y llame a <i>SendQuery</. i> para ejecutar la consulta. App Inventor enviará la consulta al servidor Fusion Tables y el bloque <i>GotResult</i> se activará cuando se devuelva un resultado desde el servidor. Los resultados de la consulta se devolverán en formato CSV y se pueden convertir a formato de lista usando los bloques "lista de tabla csv" o "lista de fila csv".</p><p>Tenga en cuenta que no necesita preocuparse por la codificación UTF de la consulta. Pero sí debe asegurarse de que la consulta siga la sintaxis descrita en <a href="https://developers.google.com/fusiontables/docs/v2/getting_started" target="_blank">el manual de referencia</a>. , lo que significa que cosas como el uso de mayúsculas en los nombres de las columnas son importantes y que se deben usar comillas simples alrededor de los nombres de las columnas si hay espacios en ellas.</p>
# Description: 
FusionTablesStandardErrorMessage=Error en la consulta de Fusion Tables
# Description: 
FusionTablesDeprecated=AVISO: Google ha dejado de utilizar el servicio Fusion Tables. Dejará de funcionar el 3 de diciembre de 2019 <a href="https://support.google.com/fusiontables/answer/9185417" target="_blank">Más información</a>
# Description: 
FunctionCompletedEventDescriptions=Indica que se completó una llamada de función.
# Description: 
FullScreenPropertyDescriptions=Devuelve si el vídeo del ReproductorVideo se muestra actualmente en modo de pantalla completa o no.
# Description: 
FriendTimelineReceivedEventDescriptions=Este evento se genera cuando se han recuperado los mensajes solicitados a través de <code>SolicitarCronologíaAmigo</code>. El parámetro <code>cronología</code> y la propiedad <code>Cronología</code> contendrán una lista de listas, donde cada sublista contiene una actualización de estado del formulario (mensaje de nombre de usuario)
# Description: 
FormatTimeMethodDescriptions=Texto que representa el tiempo de un instante
# Description: 
FormatDateTimeMethodDescriptions=Devuelve texto que representa la fecha y hora de un instante en el patrón especificado
# Description: 
FormatDateMethodDescriptions=Texto que representa la fecha de un instante en el patrón especificado
# Description: 
ForgetLoginMethodDescriptions=Olvídese de las credenciales de inicio de sesión de los usuarios finales. No tiene ningún efecto sobre la autenticación del servicio
# Description: 
FontTypefaceDetailPropertyDescriptions=Devuelve la fuente del texto de la etiqueta como predeterminada, serif, sans serif o monoespacio.
# Description: 
FontTypefaceDetailProperties=TipoFuenteDetalle
# Description: 
FontSizeDetailPropertyDescriptions=El tamaño del texto de los elementos de cadena de la vistalista.
# Description: 
FontSizeDetailProperties=TamañoFuenteDetalle
# Description: 
FollowersReceivedEventDescriptions=Este evento se genera cuando se han recuperado todos los seguidores del usuario que inició sesión solicitados a través de <code>SolicitarSeguidores</code>. Luego se puede encontrar una lista de seguidores en el parámetro <code>seguidores</code> o en la propiedad <code>Seguidores</code>.
# Description: 
FollowersPropertyDescriptions=Esta propiedad contiene una lista de los seguidores del usuario que inició sesión. Inicialmente, la lista está vacía. Para configurarlo, el programa debe: <ol> <li> Llamar al método <code>Autorizar</code>.</li> <li> Esperar el evento <code>estáAutorizado</code>.</li> <li> Llame al método <code>SolicitarSeguidores</code>.</li> <li> Espere el evento <code>RecibidoSeguidores</code>.</li></ol>El valor de esta propiedad entonces se establecerá en la lista de seguidores (y mantendrá su valor hasta cualquier llamada posterior a <code>SolicitarSeguidores</code>).
# Description: 
FollowMethodDescriptions=Comienza a seguir a un usuario.
# Description: 
FollowLinksPropertyDescriptions=Determina si se deben seguir los enlaces cuando se tocan en VisorWeb. Si sigue los enlaces, puede utilizar IrAtrás y IrAdelante para navegar por el historial del navegador.
# Description: 
FirstRemovedEvents=EliminadoPrimero
# Description: 
FirebaseURLPropertyDescriptions=Obtiene la URL para este FirebaseDB.
# Description: 
FirebaseURLProperties=URLFirebase
# Description: 
FirebaseTokenPropertyDescriptions=Especifica el token para el Firebase predeterminado.
# Description: 
FirebaseTokenProperties=TokenFirebase
# Description: 
FirebaseErrorEvents=ErrorFirebase
# Description: 
FirebaseErrorEventDescriptions=Indica que la comunicación con Firebase señaló un error.
# Description: 
FirebaseDB__StoreValueMethodDescriptions=Solicita a Firebase que almacene el valor dado bajo la etiqueta dada.
# Description: 
FirebaseDB__GotValueEventDescriptions=Indica que la petición ObtenerValor se realizó correctamente.
# Description: 
FirebaseDB__GetValueMethodDescriptions=ObtenerValor le pide a Firebase que obtenga el valor almacenado bajo la etiqueta dada. Pasará valorSiEtiiquetoNoExiste a ValorObtenido si no hay ningún valor almacenado bajo la etiqueta.
# Description: 
FirebaseDB__FirstRemovedEventDescriptions=Evento desencadenado por la función "EliminaPrimero". El argumento "valor" es el objeto que era el primero en la lista y que ahora se elimina.
# Description: 
FirebaseDB__DataChangedEventDescriptions=Indica que los datos en Firebase han cambiado. Lanza un evento con la etiqueta y el valor que se han actualizado.
# Description: 
FirebaseDB__ClearTagMethodDescriptions=Elimina la etiqueta de Firebase
# Description: 
FirebaseDBHelpStringComponentPallette=Componente no visible que se comunica con Firebase para almacenar y recuperar información.
# Description: 
FinishedWriteRowEvents=TerminadoEscribirFila
# Description: 
FinishedWriteRowEventDescriptions=El evento de respuesta para el bloque EscribirFila, llamado una vez que se han actualizado los valores de la tabla
# Description: 
FinishedWriteRangeEvents=TerminadoEscribirRango
# Description: 
FinishedWriteRangeEventDescriptions=El evento de respuesta para el bloque EscribirRango.
# Description: 
FinishedWriteColumnEvents=TerminadoEscribirColumna
# Description: 
FinishedWriteColumnEventDescriptions=El evento de respuesta para el bloque EscribirColumna, llamado una vez que se han actualizado los valores de la tabla.
# Description: 
FinishedWriteCellEvents=TerminadoEscribirCelda
# Description: 
FinishedWriteCellEventDescriptions=El evento de respuesta para el bloque EscribirCelda.
# Description: 
FinishedRemoveRowEvents=TerminadoBorrarFila
# Description: 
FinishedRemoveRowEventDescriptions=El evento de respuesta para el bloque BorrarFila, llamado una vez que se han actualizado los valores de la tabla.
# Description: 
FinishedRemoveColumnEvents=TerminadoBorrarColumna
# Description: 
FinishedRemoveColumnEventDescriptions=El evento de respuesta para el bloque BorrarColumna, llamado una vez que se han actualizado los valores de la tabla.
# Description: 
FinishedDeleteSheetEvents=TerminadoBorrarHoja
# Description: 
FinishedDeleteSheetEventDescriptions=El evento de respuesta para el bloque BorrarHoja, llamado una vez que se han actualizado los valores de la tabla.
# Description: 
FinishedClearRangeEvents=TerminadoBorrarRango
# Description: 
FinishedClearRangeEventDescriptions=El evento de respuesta para el bloque BorrarRango.
# Description: 
FinishedAddSheetEvents=TerminadoAñadirHoja
# Description: 
FinishedAddSheetEventDescriptions=El evento de respuesta para el bloque añadirHoja, llamado una vez que se han actualizado los valores de la tabla.
# Description: 
FinishedAddRowEvents=TerminadoAñadirFila
# Description: 
FinishedAddRowEventDescriptions=El evento de respuesta para el bloque AñadirFila, llamado una vez que se han actualizado los valores de la tabla.
# Description: 
NxtDirectCommands__GetFirmwareVersionMethodDescriptions=Obtener los números de versión de firmware y protocolo para el robot como una lista donde el primer elemento es el número de versión de firmware y el segundo elemento es el número de versión de protocolo.
# Description: 
NxtColorSensor__WithinRangeEventEnabledPropertyDescriptions=Si el evento DentroDeRango debe activarse cuando la propiedad DetectarColor está establecida en Falso y el nivel de luz oscila entre LimiteInfRango y TopeDeRango.
# Description: 
NxtColorSensor__WithinRangeEventDescriptions=El nivel de luz ha entrado dentro del rango. El evento DentroDeRango no se producirá si la propiedad DetectarColor está establecida en Verdadero o si la propiedad EventoDentroDeRangoHabilitado está establecida en Falso.
# Description: 
NxtColorSensor__GetLightLevelMethodDescriptions=Devuelve el nivel de luz actual como un valor entre 0 y 1023, o -1 si el nivel de luz no se puede leer o si la propiedad DetectarColor está establecida en Verdadero.
# Description: 
NxtColorSensor__ColorChangedEventEnabledPropertyDescriptions=Si el evento ColorCambiado debe activarse cuando la propiedad DetectarColor se establece en Verdadero y el color detectado cambia.
# Description: 
NxtColorSensor__ColorChangedEventDescriptions=El color detectado ha cambiado. El evento ColorCambiado no se producirá si la propiedad DetectarColor está establecida en Falso o si la propiedad EventColorCambiadoHabilitado está establecida en Falso.
# Description: 
NxtColorSensor__BelowRangeEventEnabledPropertyDescriptions=Si el evento DebajoDeRango debe activarse cuando la propiedad DetectarColor está establecida en Falso y el nivel de luz desciende por debajo de LimiteInfRango.
# Description: 
NxtColorSensor__BelowRangeEventDescriptions=El nivel de luz ha bajado por debajo del rango. El evento DebajoDeRango no se producirá si la propiedad DetectarColor está establecida en Verdadero o si la propiedad EventoDebajoDeRangoHabilitado está establecida en Falso.
# Description: 
NxtColorSensor__AboveRangeEventEnabledPropertyDescriptions=Si el evento EncimaDeRango debe activarse cuando la propiedad DetectarColor está establecida en Falso y el nivel de luz supera TopeDeRango.
# Description: 
NxtColorSensor__AboveRangeEventDescriptions=El nivel de luz ha superado el rango. El evento EncimaDeRango no se producirá si la propiedad DetectarColor está establecida en Verdadero o si la propiedad EventoEncimaDeRangoHabilitado está establecida en Falso.
# Description: 
NowMethodDescriptions=Devuelve el instante actual leído en el reloj del teléfono.
# Description: 
Notifier__TextColorPropertyDescriptions=Especifica el color del texto para las alertas (no los cuadros de diálogo).
# Description: 
Notifier__BackgroundColorPropertyDescriptions=Especifica el color de fondo de las alertas (no de los cuadros de diálogo).
# Description: 
NotifierLengthPropertyDescriptions=Especifica el período de tiempo que se muestra la alerta, ya sea "corto" o "largo".
# Description: Title for the Warning Dialog Box
NoticeTitle=¡Aviso!
# Description: 
NorthLatitudePropertyDescriptions=El borde norte del rectángulo, en grados decimales al norte del ecuador.
# Description: 
NorthLatitudeProperties=LatitudNorte
# Description: 
NoOpenPollEventDescriptions=Evento que indica que el servicio no tiene encuesta abierta.
# Description: 
NoLongerCollidingWithEventDescriptions=Se llama al controlador de eventos cuando un par de sprites (Pelotas e ImagenSprites) ya no chocan.
# Description: 
NoLocationNeededPropertyDescriptions=En Android 12 y versiones posteriores, indica que Bluetooth no se utiliza para determinar la ubicación del usuario.
# Description: 
NoLocationNeededProperties=UbicaciónNoNecesitada
# Description: 
NewLeaderEventDescriptions=Indica que este juego tiene un nuevo líder según lo especificado a través de EstablecerLíder
# Description: 
NewInstanceMadeEventDescriptions=Indica que se creó correctamente una nueva instancia después de llamar a HacerNuevaInstancia.
# Description: 
Navigation__ServiceURLPropertyDescriptions=Reservado para uso futuro en caso de que algún día decidamos ejecutar nuestro propio servicio.
# Description: 
Navigation__LanguagePropertyDescriptions=El idioma que se utilizará para las instrucciones textuales.
# Description: 
Navigation__ApiKeyPropertyDescriptions=Clave API para el servicio Open Route.
# Description: 
NavigationHelpStringComponentPallette=Navegación
# Description: 
NamespaceProperties=Espacio de nombres
# Description: 
NamespacePropertyDescriptions=Espacio de nombres para almacenar datos.
# Description: 
MultiLinePropertyDescriptions=Si es verdadero, entonces este cuadro de texto acepta múltiples líneas de entrada, que se ingresan usando la tecla de retorno. Para los cuadros de texto de una sola línea hay una tecla Listo en lugar de una tecla de retorno, y al presionar Listo se oculta el teclado. La aplicación debe llamar al método OcultarTeclado para ocultar el teclado de un cuadro de texto de varias líneas.
# Description: 
MovingPropertyDescriptions=Esta propiedad está obsoleta.
# Description: 
MoveForwardMethodDescriptions=Mover el robot hacia adelante la distancia indicada, con el porcentaje especificado de potencia máxima, impulsando ambos motores de accionamiento hacia adelante.
# Description: 
MoveForwardIndefinitelyMethodDescriptions=Mover el robot hacia adelante indefinidamente, con el porcentaje especificado de potencia máxima, impulsando ambos motores de accionamiento hacia adelante.
# Description: 
MoveFileMethods=MoverFichero
# Description: 
MoveFileMethodDescriptions=Mover un archivo de una ubicación a otra.
# Description: 
MoveBackwardMethodDescriptions=Mover el robot hacia atrás la distancia dada, con el porcentaje especificado de potencia máxima, accionando ambos motores de accionamiento hacia atrás.
# Description: 
MoveBackwardIndefinitelyMethodDescriptions=Mover el robot hacia atrás indefinidamente, con el porcentaje especificado de potencia máxima, accionando ambos motores de accionamiento hacia atrás.
# Description: 
MotorPortsPropertyDescriptions=Los puertos de motor a los que están conectados los motores. Los puertos se especifican mediante una secuencia de letras de puerto.
# Description: 
MotorPortsProperties=PuertosMotor
# Description: 
MonthPropertyDescriptions=el número del mes que se seleccionó por última vez usando DatePicker. Tenga en cuenta que los meses comienzan en 1 = enero, 12 = diciembre.
# Description: 
MonthNameMethodDescriptions=Devuelve el nombre del mes a partir del instante, por ejemplo, enero, febrero, marzo...
# Description: 
MonthMethodDescriptions=Devuelve el mes del año representado como un número del 1 al 12).
# Description: 
MonthInTextPropertyDescriptions=Devuelve el nombre del mes seleccionado por última vez utilizando SelectorFecha, en formato textual.
# Description: 
ModelPropertyDescriptions=Establecer el nombre del modelo a utilizar. Consulte https://appinv.us/chatbot para obtener la lista actual de modelos compatibles. Si deja este espacio en blanco, se utilizará el modelo predeterminado establecido por el proveedor
# Description: 
ModelProperties=Modelo
# Description: 
ModePropertyDescriptions=Especifica el modo del sensor.
# Description: 
ModeProperties=Modo
# Description: 
MinutePropertyDescriptions=El minuto de la última hora configurada con el selector de hora
# Description: 
MinuteMethodDescriptions=Devuelve el minuto de la hora (0-59) del instante.
# Description: 
MinValuePropertyDescriptions=Establece el valor mínimo del control deslizante. Cambiar el valor mínimo también restablece la posición del pulgar a medio camino entre el (nuevo) mínimo y el máximo. Si el nuevo mínimo es mayor que el máximo actual, tanto el mínimo como el máximo se establecerán en este valor. Configurar ValorMin restablece la posición del pulgar a medio camino entre ValorMin y ValorMax y señala el evento PosiciónCambiada.
# Description: 
MimeTypePropertyDescriptions=Establece el tipo MIME deseado para seleccionar un archivo.
# Description: 
MimeTypeProperties=TipoMime
# Description: 
MessageWriteMethodDescriptions=Escribir un mensaje en un buzón (1-10) del robot.
# Description: 
MessageReceivedEventDescriptions=Evento que se genera cuando el teléfono recibe un mensaje de texto. **El uso de este bloqueo añadirá [permisos peligrosos](//developer.android.com/guide/topics/permissions/overview#dangerous_permissions) que requerirán aprobación adicional si su aplicación se envía a Google Play Store.**
# Description: 
MessageReadMethodDescriptions=Leer un mensaje de un buzón (1-10) en el robot.
# Description: 
MessagePropertyDescriptions=El mensaje que se enviará cuando se llame al método EnviarMensaje.
# Description: 
MentionsReceivedEventDescriptions=Este evento se genera cuando se han recuperado las menciones del usuario que inició sesión solicitadas a través de <code>SolicitarMenciones</code>. Luego se puede encontrar una lista de las menciones en el parámetro <code>menciones</code> o en la propiedad <code>Menciones</code>.
# Description: 
MentionsPropertyDescriptions=Esta propiedad contiene una lista de menciones del usuario que inició sesión. Inicialmente, la lista está vacía. Para configurarlo, el programa debe: <ol> <li> Llamar al método <code>Autorizado</code>.</li> <li> Esperar el evento <code>estáAutorizado</code>.</li> <li> Llame al método <code>SolicitarMenciones</code>.</li> <li> Espere el evento <code>MencionesRecibidas</code>.</li></ol>El valor de esta propiedad entonces se establecerá en la lista de menciones (y mantendrá su valor hasta cualquier llamada posterior a <code>SolicitarMenciones</code>).
# Description: 
MediaStoredEvents=MediaStored
# Description: 
MediaStoredEventDescriptions=Indica que una solicitud del servidor MediaStored se realizó correctamente.
# Description: 
MediaStore__WebServiceErrorEventDescriptions=Indica que la comunicación con el servicio Web señaló un error
# Description: 
ShowScalePropertyDescriptions=Muestra u oculta una superposición de escala en el
# Description: 
ShowScaleProperties=MostrarEscala
# Description: 
MediaStore__ServiceURLPropertyDescriptions=Devuelve la URL del servicio web MediaStore.
# Description: 
MediaStoreHelpStringComponentPallette=Componente no visible que se comunica con un servicio web y almacena archivos multimedia.
# Description: 
MaximumRangeProperties=RangoMáximo
# Description: 
MaximumRangeMethods=MétodosRangoMáximo
# Description: 
MaxValuePropertyDescriptions=Establece el valor máximo del control deslizante. Cambiando el valor máximo también restablece la posición del pulgar a medio camino entre el mínimo y el (nuevo) máximo. Si el nuevo máximo es menor que el mínimo actual, tanto el mínimo como el máximo se establecerán en este valor. Configurar ValorMax restablece la posición del pulgar a medio camino entre ValorMin y ValorMax y señala el evento PosiciónCambiada.
# Description: 
Marker__WidthPropertyDescriptions=Especifica el ancho horizontal del "Marcador", medido en píxeles.
# Description: 
Marker__WidthPercentPropertyDescriptions=Especifica el ancho horizontal del `Marcador` como porcentaje del ``Ancho` de la [`Pantalla`''](userinterface.html#Screen.Width).
# Description: 
Marker__VisiblePropertyDescriptions=Especifica si el Marcador debe estar visible en la pantalla. El valor es verdadero si el componente se muestra y falso si está oculto.
# Description: 
Marker__TypePropertyDescriptions=Devuelve el tipo de característica. Para Marcadores, esto devuelve MapFeature.Marker ("Marcador").
# Description: 
Marker__TitlePropertyDescriptions=El título que se muestra en la ventana de información que aparece cuando el usuario hace clic en el Marcador.
# Description: 
Marker__StrokeWidthPropertyDescriptions=El ancho del trazo utilizado para delinear el Marcador.
# Description: 
Marker__StrokeColorPropertyDescriptions=El color de pintura utilizado para delinear el Marcador.
# Description: 
Marker__ShowInfoboxMethodDescriptions=Muestra el cuadro de información del Marcador. Esto mostrará el cuadro de información incluso si HabilitaCuadroInfo está configurado en falso.
# Description: 
Marker__SetLocationMethodDescriptions=Establece la ubicación del marcador.
# Description: 
Marker__LongitudePropertyDescriptions=Establece u obtiene la longitud del "Marcador", en grados, con valores positivos que representan el este del meridiano principal y valores negativos que representan el oeste del meridiano principal. Para actualizar el
# Description: 
Marker__LongClickEventDescriptions=El usuario presionó prolongadamente el Marcador. Este evento solo se activará si Arrastrable es falso.
# Description: 
Marker__LatitudePropertyDescriptions=Establece u obtiene la latitud del "Marcador", en grados, donde los valores positivos representan el norte del ecuador y los valores negativos representan el sur del ecuador. Para actualizar `Latitud` y
# Description: 
Marker__HeightPropertyDescriptions=Especifica la altura vertical del `Marcador`, medida en píxeles.
# Description: 
Marker__HeightPercentPropertyDescriptions=Especifica la altura vertical del `Marcador` como un porcentaje de la [`Altura` de la Pantalla`](userinterface.html#Screen.Height).
# Description: 
Marker__FillColorPropertyDescriptions=El color utilizado para rellenar el marcador.
# Description: 
Marker__EnableInfoboxPropertyDescriptions=Habilita o deshabilita la visualización de la ventana del cuadro de información cuando el usuario toca el Marcador.
# Description: 
Marker__DraggablePropertyDescriptions=La propiedad Arrastrable se utiliza para establecer si el usuario puede arrastrar el Marcador manteniendo presionado y luego arrastrándolo a una nueva ubicación.
# Description: 
Marker__DragEventDescriptions=El usuario arrastró el Marcador.
# Description: 
Marker__DistanceToPointMethodDescriptions=Calcule la distancia, en metros, entre un Marcador y un punto de latitud y longitud.
# Description: 
Marker__DescriptionPropertyDescriptions=La descripción que se muestra en la ventana de información que aparece cuando el usuario hace clic en el Marcador.
# Description: 
Marker__ClickEventDescriptions=El usuario hizo clic en el Marcador.
# Description: 
MarkerHelpStringComponentPallette=<p>Un icono colocado en un punto para indicar información en un mapa. Los marcadores se pueden utilizar para proporcionar una ventana de información, colores de trazo y relleno personalizados e imágenes personalizadas para transmitir información al usuario.</p>
# Description: 
Map__WidthPropertyDescriptions=Especifica el ancho horizontal del Mapa, medido en píxeles.
# Description: 
Map__WidthPercentPropertyDescriptions=Especifica el ancho horizontal del Mapa como porcentaje del ancho de la Pantalla.
# Description: 
Map__VisiblePropertyDescriptions=Especifica si el Mapa debe estar visible en la pantalla. El valor es verdadero si se muestra y falso si está oculto.
# Description: 
Map__SaveMethodDescriptions=Guarda el contenido del mapa en la ruta especificada.
# Description: 
Map__LongitudePropertyDescriptions=La longitud del centro del mapa.
# Description: 
Map__LatitudePropertyDescriptions=Latitud del centro del mapa.
# Description: 
Map__HeightPropertyDescriptions=Especifica la altura vertical del Mapa, medida en píxeles.
# Description: 
Map__HeightPercentPropertyDescriptions=Especifica la altura vertical del Mapa como porcentaje de la altura de la pantalla.
# Description: 
Map__FeaturesPropertyDescriptions=La lista de características colocadas en este mapa. Esta lista también incluye cualquier función creada mediante llamadas a CaracterísticaDesdeDescripción
# Description: 
MapTypePropertyDescriptions=Establezca el tipo de mosaico de mapa utilizado para la capa de mosaico base. Los valores válidos son: 1. Carreteras 2. Aérea 3. Terreno
# Description: 
MapTypeProperties=TipoMapa
# Description: 
MapHelpStringComponentPallette=<p>Un contenedor bidimensional que representa mosaicos de mapas en segundo plano y permite que múltiples elementos de marcador identifiquen puntos en el mapa. Los mosaicos de mapas son proporcionados por los contribuyentes de OpenStreetMap y el Servicio Geológico de Estados Unidos.</p><p>El componente Mapa proporciona tres utilidades para manipular sus límites dentro de App Inventor. En primer lugar, se proporciona un mecanismo de bloqueo para permitir que el mapa se mueva en relación con otros componentes de la pantalla. En segundo lugar, cuando está desbloqueado, el usuario puede desplazarse por el mapa a cualquier ubicación. En esta nueva ubicación, la opción &quot;Establecer límite inicial&quot; Se puede presionar el botón para guardar las coordenadas actuales del mapa en sus propiedades. Por último, si el mapa se mueve a una ubicación diferente, por ejemplo para agregar marcadores fuera de la pantalla, se activará la opción &quot;Restablecer mapa a los límites iniciales&quot;. El botón se puede utilizar para volver a centrar el mapa en la ubicación inicial.</p>
# Description: 
MakeTimeMethods=HacerHora
# Description: 
MakeTimeMethodDescriptions=Devuelve un instante en el tiempo especificado por hora, minuto y segundo en UTC.
# Description: 
MakePhoneCallMethodDescriptions=Inicia la aplicación de marcador predeterminada configurada para iniciar una llamada telefónica usando el número en la propiedad NúmeroTeléfono.
# Description: 
MakePhoneCallDirectMethods=HacerLlamadaDirectaTeléfono
# Description: 
MakePhoneCallDirectMethodDescriptions=Inicia directamente una llamada telefónica utilizando el número en la propiedad NúmeroTeléfono.
# Description: 
MakeNewInstanceMethodDescriptions=Pide al servidor que cree una nueva instancia de este juego.
# Description: 
MakeInstantMethodDescriptions=Devuelve un instante en el tiempo especificado por MM/dd/AAAA hh:mm:ss o MM/dd/AAAA o hh:mm.
# Description: 
MakeInstantFromPartsMethods=HacerInstanteDesdePartes
# Description: 
MakeInstantFromPartsMethodDescriptions=Devuelve un instante en el tiempo especificado por año, mes, fecha, hora, minuto y segundo en UTC.
# Description: 
MakeInstantFromMillisMethodDescriptions=Devuelve un instante en el tiempo especificado en milisegundos desde 1970 en UTC.
# Description: 
MakeFullPathMethods=HacerRutaAbsoluta
# Description: 
MakeFullPathMethodDescriptions=Convierte el alcance y la ruta en una sola cadena para otros componentes.
# Description: 
MakeDirectoryMethods=HacerDirectorio
# Description: 
MakeDirectoryMethodDescriptions=Cree un nuevo directorio para almacenar archivos. La semántica de este método es tal que devolverá verdadero si el directorio existe al finalizar. Esto puede significar que el directorio ya existía antes de la llamada.
# Description: 
MakeDateMethods=HacerFecha
# Description: 
MakeDateMethodDescriptions=Devuelve un instante en el tiempo especificado por año, mes y fecha en UTC. Los valores válidos para el campo de mes son 1-12 y 1-31 para el campo de día.
# Description: 
MagnitudePropertyDescriptions=Devuelve un número entre 0 y 1 que indica cuánto está inclinado el dispositivo. Da la magnitud de la fuerza que sentiría una bola rodando sobre la superficie del dispositivo. Para el ángulo de inclinación, utilice
# Description: 
MagneticFieldSensor__MaximumRangePropertyDescriptions=Indica el alcance máximo que puede alcanzar el sensor magnético.
# Description: 
MagneticFieldSensor__EnabledPropertyDescriptions=Indica si el sensor de campo magnético está habilitado y funcionando.
# Description: 
MagneticFieldSensor__AvailablePropertyDescriptions=Indica que hay un sensor de campo magnético en el dispositivo y está disponible.
# Description: 
MagneticFieldSensorHelpStringComponentPallette=<p>Componente no visible que mide el campo geomagnético ambiental para los tres ejes físicos (x, y, z) en Tesla https://en.wikipedia.org/wiki/Tesla_(unit).</p>
# Description: 
MagneticChangedEvents=MagnéticoCambiado
# Description: 
MagneticChangedEventDescriptions=Se activa cuando el campo magnético ha cambiado, estableciendo los nuevos valores en los parámetros.
# Description: 
LuxPropertyDescriptions=El nivel de luz más reciente, en lux, si el sensor está disponible y habilitado.
# Description: 
LuxProperties=Lux
# Description: 
LsWriteMethodDescriptions=Escribe datos de baja velocidad en un sensor de entrada en el robot. Se supone que el tipo de sensor se ha configurado mediante EstablecerModoEntrada.
# Description: 
LsReadMethodDescriptions=Lee datos de baja velocidad sin firmar desde un sensor de entrada en el robot. Se supone que el tipo de sensor se ha configurado mediante EstablecerModoEntrada.
# Description: 
LsGetStatusMethodDescriptions=Devuelve el recuento de bytes disponibles para leer.
# Description: 
LoopPropertyDescriptions=Si es verdadero, el reproductor hará un bucle cuando reproduzca. Configurar Bucle mientras el reproductor está reproduciendo afectará la reproducción actual.
# Description: 
LongitudeFromAddressMethodDescriptions=Deriva la longitud de la dirección dada
# Description: 
LongPressAtPointEvents=PresiónProlongadaEnPunto
# Description: 
LongPressAtPointEventDescriptions=El usuario presionó prolongadamente en un punto del mapa.
# Description: 
LoginMethodDescriptions=La API de Twitter ya no admite el inicio de sesión mediante nombre de usuario y contraseña. Utilice la llamada Autorizar en su lugar.
# Description: 
LogWarningMethodDescriptions=Escribe un mensaje de advertencia en el registro de Android. Consulte la documentación de Google Android para saber cómo acceder al registro.
# Description: 
LogInfoMethodDescriptions=Escribe un mensaje de información en el registro de Android.
# Description: 
LogErrorMethodDescriptions=Escribe un mensaje de error en el registro del sistema Android. Consulte la documentación de Google Android para saber cómo acceder al registro.
# Description: 
LocationSensor__LongitudePropertyDescriptions=El valor de longitud disponible más reciente en grados reportado con 5 decimales. Si no hay ningún valor disponible, se devolverá 0. La longitud es un valor entre 180 (este) y -180 (oeste), donde 0 marca el Primer Meridiano (Greenwich).
# Description: 
LocationSensor__LatitudePropertyDescriptions=El valor de latitud disponible más reciente en grados reportado con 5 decimales. Si no hay ningún valor disponible, se devolverá 0. La latitud es un valor entre 90 (norte) y -90 (sur), donde 0 marca el ecuador.
# Description: 
LocationSensor__EnabledPropertyDescriptions=Indica si el usuario ha especificado que el sensor debe escuchar los cambios de ubicación y generar los eventos correspondientes.
# Description: 
LocationSensorPropertyDescriptions=Utiliza el SensorLocalización proporcionado para los datos de ubicación del usuario en lugar del proveedor de ubicación integrado.
# Description: 
LocationSensorProperties=SensorLocalización
# Description: 
LocationChangedEventDescriptions=Indica que se ha detectado una nueva ubicación.
# Description: 
LoadingDialogMessagePropertyDescriptions=Establecedor del mensaje del diálogo de carga.
# Description: 
LoadingDialogMessageProperties=MensajeDiálogoCarga
# Description: 
LoadFromURLMethods=CargaDesdeURL
# Description: 
LoadFromURLMethodDescriptions=<p>Cargar una colección de funciones en formato <a href="https://en.wikipedia.org/wiki/GeoJSON">GeoJSON</a> desde la URL proporcionada. En caso de éxito, se generará el evento ObtenidoCaracterísticas con la URL proporcionada y una lista de las funciones analizadas desde GeoJSON como una lista de pares (clave, valor). En caso de error, se generará el evento ErrorCarga con cualquier código de respuesta HTTP y mensaje de error aplicables.</p>
# Description: 
LoadErrorEvents=ErrorCarga
# Description: 
LoadErrorEventDescriptions=Se encontró un error al procesar un documento GeoJSON en la URL proporcionada. El parámetro códigoRespuesta contendrá un código de estado HTTP y el parámetro mensajeError contendrá un mensaje de error detallado.
# Description: 
ListView__WidthPropertyDescriptions=Determina el ancho de la lista en la vista.
# Description: 
ListView__WidthPercentPropertyDescriptions=Especifica el ancho horizontal de ListaDeVista como porcentaje del ancho de la pantalla.
# Description: 
ListView__VisiblePropertyDescriptions=Especifica si vistaDeLista debe estar visible en la pantalla. El valor es verdadero si se muestra y falso si está oculto.
# Description: 
ListView__TextColorPropertyDescriptions=El color del texto de los elementos de cadena de la vistadelista.
# Description: 
ListView__ShowFilterBarPropertyDescriptions=Establece la visibilidad de MostrarBarraFiltro. Verdadero mostrará la barra, Falso la ocultará.
# Description: 
ListView__SelectionPropertyDescriptions=Devuelve el último texto seleccionado en VistaDeLista.
# Description: 
ListView__SelectionIndexPropertyDescriptions=El índice del elemento seleccionado actualmente, comenzando en 1. Si no se selecciona ningún elemento, el valor será 0. Si se intenta establecerlo en un número menor que 1 o mayor que el número de elementos de cadena en VistaDeLista, ÍndiceSelección se establecerá en 0 y Selección se establecerá en el texto vacío.
# Description: 
ListView__HeightPropertyDescriptions=Determina la altura de la lista en la vista.
# Description: 
ListView__HeightPercentPropertyDescriptions=Especifica la altura vertical de VistaDeLista como porcentaje de la altura de la pantalla.
# Description: 
ListView__FontTypefacePropertyDescriptions=Devuelve la fuente del texto de la etiqueta como predeterminada, serif, sans serif o monoespacio.
# Description: 
ListView__FontSizePropertyDescriptions=El tamaño del texto de los elementos de cadena de la vistadelista.
# Description: 
ListView__ElementsPropertyDescriptions=Lista de elementos para mostrar en VistaDeLista. Dependiendo de VistaDeLista, puede ser una lista de cadenas o una lista de sublistas de 3 elementos que contienen texto, descripción y nombre de archivo de imagen.
# Description: 
ListView__ElementsFromStringPropertyDescriptions=Los elementos VistaTexto especificados como una cadena con los elementos de cadena separados por comas, como: queso, fruta, tocino, rábano. Cada palabra antes de la coma será un elemento de la lista.
# Description: 
ListView__BackgroundColorPropertyDescriptions=El color del fondo de la vistadelista.
# Description: 
ListView__AfterPickingEventDescriptions=Evento simple que se generará después de que se haya elegido un elemento en la lista. El elemento seleccionado está disponible en la propiedad Selección.
# Description: 
ListViewLayoutPropertyDescriptions=Devuelve el tipo de diseño seleccionado para mostrar. Propiedad exclusiva de diseñador.
# Description: 
ListViewLayoutProperties=DiseñoVistaDeLista
# Description: 
ListPicker__WidthPropertyDescriptions=Especifica el ancho horizontal del SelectorLista, medido en píxeles.
# Description: 
ListPicker__WidthPercentPropertyDescriptions=Especifica el ancho horizontal del SelectorLista como porcentaje del ancho de la pantalla.
# Description: 
ListPicker__VisiblePropertyDescriptions=Especifica si SelectorLista debe estar visible en la pantalla. El valor es verdadero si se muestra y falso si está oculto.
# Description: 
ListPicker__TouchUpEventDescriptions=Indica que se ha liberado SelectorLista.
# Description: 
ListPicker__TouchDownEventDescriptions=Indica que se presionó SelectorLista.
# Description: 
ListPicker__TitlePropertyDescriptions=Título opcional que se muestra en la parte superior de la lista de opciones.
# Description: 
ListPicker__TextPropertyDescriptions=Texto que se muestra en el SelectorLista.
# Description: 
ListPicker__TextColorPropertyDescriptions=Color del texto del botón.
# Description: 
ListPicker__TextAlignmentPropertyDescriptions=Izquierda, centro, o derecha.
# Description: 
ListPicker__ShowFilterBarPropertyDescriptions=Devuelve el estado actual de MostrarBarraFiltro que indica si la barra de filtro de búsqueda se mostrará en SelectorLista o no
# Description: 
ListPicker__ShowFeedbackPropertyDescriptions=Especifica si se debe mostrar una respuesta visual para un SelectorLista que tiene una imagen como fondo.
# Description: 
ListPicker__ShapePropertyDescriptions=Devuelve el estilo del `SelectorLista`.
# Description: 
ListPicker__SelectionPropertyDescriptions=El elemento seleccionado. Cuando el programador la cambia directamente, la propiedad ÍndiceSelección también se cambia al primer elemento del SelectorLista con el valor dado. Si el valor no aparece, ÍndiceSelección se establecerá en 0.
# Description: 
ListPicker__SelectionIndexPropertyDescriptions=El índice del elemento seleccionado actualmente, comenzando en 1. Si no se selecciona ningún elemento, el valor será 0. Si se intenta establecerlo en un número menor que 1 o mayor que el número de elementos en el SelectorLista, ÍndiceSelección se establecerá en 0 y Selección se establecerá en el texto vacío.
# Description: 
ListPicker__OpenMethodDescriptions=Abre el SelectorLista, como si el usuario hubiera hecho clic en él.
# Description: 
ListPicker__LostFocusEventDescriptions=Indica que el cursor se alejó del SelectorLista, por lo que ahora ya no es posible hacer clic en él.
# Description: 
ListPicker__ImagePropertyDescriptions=Imagen para mostrar sobre el botón.
# Description: 
ListPicker__HeightPropertyDescriptions=Especifica la altura vertical del SelectorLista, medida en píxeles.
# Description: 
ListPicker__HeightPercentPropertyDescriptions=Especifica la altura vertical del SelectorLista como porcentaje de la altura de la pantalla.
# Description: 
ListPicker__GotFocusEventDescriptions=Indica que el cursor se movió sobre el SelectorLista, por lo que ahora es posible hacer clic en él.
# Description: 
ListPicker__FontTypefacePropertyDescriptions=Familia de fuentes para el texto del SelectorLista.
# Description: 
ListPicker__FontSizePropertyDescriptions=Tamaño en puntos para el texto del SelectorLista.
# Description: 
ListPicker__FontItalicPropertyDescriptions=Si activado, el texto del SelectorLista se mustra en cursiva.
# Description: 
FinishedAddColumnEvents=TerminadoAñadirColumna
# Description: 
FinishedAddColumnEventDescriptions=Este evento se activará una vez que el método AñadirColumna haya terminado de ejecutarse y se hayan actualizado los valores en la hoja de cálculo. Además, esto devuelve el número de columna de la nueva columna.
# Description: 
FillScreenMethods=RellenaPantalla
# Description: 
FillScreenMethodDescriptions=Rellena la pantalla con un color.
# Description: 
FillOpacityPropertyDescriptions=La opacidad del interior de la característica del mapa.
# Description: 
FillOpacityProperties=OpacidadDeRelleno
# Description: 
FillColorProperties=ColorDeRelleno
# Description: 
File__LegacyModePropertyDescriptions=Permite que la aplicación acceda a archivos desde la raíz del directorio de almacenamiento externo (modo tradicional).
# Description: 
File__GotTextEventDescriptions=Evento que indica que se ha leído el contenido del archivo.
# Description: 
File__DeleteMethodDescriptions=Elimina un archivo del almacenamiento. Anteponga el nombre del archivo con / para eliminar un archivo específico en la tarjeta SD, por ejemplo /myFile.txt. eliminará el archivo /sdcard/myFile.txt. Si el archivo no comienza con /, se eliminará el archivo ubicado en el almacenamiento privado del programa. Iniciar el archivo con // es un error porque los archivos de activos no se pueden eliminar.
# Description: 
FilePicker__WidthPropertyDescriptions=Especifica el ancho horizontal del SelectorFichero, medido en píxeles.
# Description: 
FilePicker__WidthPercentPropertyDescriptions=Especifica el ancho horizontal del SelectorFcihero como porcentaje del ancho de la pantalla.
# Description: 
FilePicker__VisiblePropertyDescriptions=Especifica si el SelectorFichero debe estar visible en la pantalla. El valor es verdadero si se muestra y falso si está oculto.
# Description: 
FilePicker__TouchUpEventDescriptions=Indica si el SelectorFichero ha sido liberado.
# Description: 
FilePicker__TouchDownEventDescriptions=Indica si el SelectorFichero fue presionado.
# Description: 
FilePicker__TextPropertyDescriptions=Texto que se muestra en el SelectorFichero.
# Description: 
FilePicker__TextColorPropertyDescriptions=Color del texto del botón.
# Description: 
FilePicker__TextAlignmentPropertyDescriptions=Izquierda, centro, o derecha.
# Description: 
FilePicker__ShowFeedbackPropertyDescriptions=Especifica si se debe mostrar una respuesta visual para un SelectorFichero que tiene una imagen como fondo.
# Description: 
FilePicker__ShapePropertyDescriptions=Devuelve el estilo del `SelectorFichero`.
# Description: 
FilePicker__SelectionPropertyDescriptions=Devuelve el archivo seleccionado, posiblemente como un URI de contenido.
# Description: 
FilePicker__OpenMethodDescriptions=Abre el SelectorFichero, como si el usuario hubiera hecho clic en él.
# Description: 
FilePicker__LostFocusEventDescriptions=Indica que el cursor se alejó del SelectorFichero, por lo que ahora ya no es posible hacer clic en él.
# Description: 
FilePicker__ImagePropertyDescriptions=Imagen que se muestra sobre el botón.
# Description: 
FilePicker__HeightPropertyDescriptions=Especifica la altura vertical del SelectorFcihero, medida en píxeles.
# Description: 
FilePicker__HeightPercentPropertyDescriptions=Especifica la altura vertical del SelectorFcihero como porcentaje de la altura de la pantalla.
# Description: 
FilePicker__GotFocusEventDescriptions=Indica que el cursor se movió sobre SelectorFcihero, por lo que ahora es posible hacer clic en él.
# Description: 
DefaultScopePropertyDescriptions=Especifica el alcance predeterminado para los archivos a los que se accede mediante el componente Archivo. El alcance de la aplicación debería funcionar para la mayoría de las aplicaciones. El modo tradicional se puede utilizar para aplicaciones anteriores a las restricciones más nuevas de Android en el acceso a archivos de aplicaciones.
# Description: 
DefaultScopeProperties=ÁmbitoDefecto
# Description: 
DefaultRedisServerPropertyDescriptions=El Servidor Redis por Defecto para usar.
# Description: 
DefaultRedisServerProperties=ServidorRedisDefecto
# Description: 
DefaultFileScopePropertyDescriptions=Especifica el alcance predeterminado utilizado cuando los componentes acceden a archivos. Tenga en cuenta que el componente <a href="/reference/components/storage.html#File" target="_blank">File</a> tiene su propia propiedad para controlar el alcance de los archivos.
# Description: 
DefaultFileScopeProperties=ÁmbitoFicheroDefecto
# Description: 
DeAuthorizeMethodDescriptions=Elimina la autorización de Twitter de esta instancia de aplicación en ejecución
# Description: 
DayPropertyDescriptions=el Día del mes que fues usado por última vez el SelectorFecha.
# Description: 
DayOfMonthMethodDescriptions=Devuelve el día del mes (1-31) del instante.
# Description: 
DatePicker__WidthPropertyDescriptions=Especifica el ancho horizontal del SelectorFecha, medido en píxeles.
# Description: 
DatePicker__WidthPercentPropertyDescriptions=Especifica el ancho horizontal del SelectorFecha como porcentaje del ancho de la pantalla.
# Description: 
DatePicker__VisiblePropertyDescriptions=Especifica si el SelectorFecha debe estar visible en la pantalla. El valor es verdadero si se muestra y falso si está oculto.
# Description: 
DatePicker__TouchUpEventDescriptions=Indica si el SelectorFecha ha sido liberado.
# Description: 
DatePicker__TouchDownEventDescriptions=Indica si el SelectorFecha fue presionado.
# Description: 
DatePicker__TextPropertyDescriptions=Texto a mostrar en el SelectorFecha.
# Description: 
DatePicker__TextColorPropertyDescriptions=Color del texto del botón.
# Description: 
DatePicker__TextAlignmentPropertyDescriptions=Izquierda, centro, o derecha.
# Description: 
DatePicker__ShowFeedbackPropertyDescriptions=Especifica si se debe mostrar una respuesta visual para un SelectorFecha que tiene una imagen como fondo.
# Description: 
DatePicker__ShapePropertyDescriptions=Devuelve el estilo del ´SelectorFecha´.
# Description: 
DatePicker__LostFocusEventDescriptions=Indica que el cursor se alejó del SelectorFecha, por lo que ahora ya no es posible hacer clic en él.
# Description: 
DatePicker__LaunchPickerMethodDescriptions=Lanza el diálogo del SelectorFecha.
# Description: 
DatePicker__InstantPropertyDescriptions=el instante de la fecha que se seleccionó por última vez usando SelectorFecha.
# Description: 
DatePicker__ImagePropertyDescriptions=Imagen a mostrar sobre el botón.
# Description: 
DatePicker__HeightPropertyDescriptions=Especifica la altura vertical del SelectorFecha, medida en píxeles.
# Description: 
DatePicker__HeightPercentPropertyDescriptions=Especifica la altura vertical del SelectorFecha como porcentaje de la altura de la pantalla.
# Description: 
DatePicker__GotFocusEventDescriptions=Indica que el cursor se movió sobre el SelectorFecha por lo que ahora es posible hacer clic en él.
# Description: 
DatePicker__FontTypefacePropertyDescriptions=Familia de fuentes del texto del SelectorFecha.
# Description: 
DatePicker__FontSizePropertyDescriptions=Tamaño en puntos para el texto de SelectorFecha.
# Description: 
DatePicker__FontItalicPropertyDescriptions=Si activado, el texto del SelectorFecha se muestra en cursiva.
# Description: 
DatePicker__FontBoldPropertyDescriptions=Si activado, el texto del SelectorFecha se muestra en negrita.
# Description: 
DatePicker__EnabledPropertyDescriptions=Si activado, el usuario puede tocar el SelectorFecha para inicar una acción.
# Description: 
DatePicker__BackgroundColorPropertyDescriptions=Devuelve el color de fondo del boton
# Description: 
DataUriPropertyDescriptions=Devuelve el URI de datos que se utilizará para iniciar la actividad.
# Description: 
DataTypePropertyDescriptions=Devuelve el tipo MIME para pasar a la actividad.
# Description: 
DataSourceKeyPropertyDescriptions=Establece el identificador de clave de la fuente de datos para el valor que se importará desde la fuente de datos adjunta. Un ejemplo es la etiqueta del componente TinyDB, que identifica el valor. La propiedad es una propiedad exclusiva del Diseñador y debe cambiarse después de configurar el componente Fuente del componente Datos del gráfico. Una lista completa de valores aplicables para cada fuente compatible es la siguiente: * Para TinyDB y CloudDB, este es el valor de la etiqueta. * Para SensorAcelerómetro, el valor debe ser uno de los siguientes: X Y o Z * Para SensorGiroscopio, el valor debe ser uno de los siguientes: X Y o Z * Para SensorLocalización, el valor debe ser uno de los siguientes: latitud, longitud, altitud o velocidad * Para SensorOrientación, el valor debe ser uno de los siguientes: cabeceo, azimut o balanceo * Para el podómetro, el valor debe ser uno de los siguientes: PasosCaminar, PasosSimples o distancia * Para SensorProximidad, el valor debe ser la distancia. * Para ClienteBluetooth, el valor representa el prefijo que se eliminará del valor. Por ejemplo, si los valores tienen el formato "t:12", el prefijo se puede especificar como "t:" y luego se eliminará de los datos. No se puede especificar ningún valor si se devuelven valores puramente numéricos.
# Description: 
DataSourceKeyProperties=ClaveFuenteDatos
# Description: 
DataFile__RowsPropertyDescriptions=Devuelve una lista de filas correspondientes al contenido del Fichero de Datos.
# Description: 
DataFile__LegacyModePropertyDescriptions=Permite que la aplicación acceda a archivos desde la raíz del directorio de almacenamiento externo (modo tradicional).
# Description: 
DataFile__ColumnsPropertyDescriptions=Devuelve una lista de columnas correspondientes al contenido del Fichero de Datos.
# Description: 
DataFileYColumnPropertyDescriptions=Valor utilizado al importar datos desde un componente FicheroDatos
# Description: 
DataFileYColumnProperties=FicheroDatosColumnaY
# Description: 
DataFileXColumnPropertyDescriptions=Valor utilizado al importar datos desde un componente FicheroDatos
# Description: 
DataFileXColumnProperties=FicheroDatosColumnaX
# Description: 
DataFileHelpStringComponentPallette=Componente que permite leer datos CSV y JSON. El FicheroDatos contiene funcionalidad relevante para acceder a datos analizados CSV o JSON en forma de filas o columnas. Se puede utilizar junto con el componente DatosGráfico2D para importar datos directamente desde un archivo al gráfico. El componente también se puede arrastrar y soltar en un gráfico después de que un archivo se haya seleccionado y analizado correctamente para crear componentes DatosGráfico automáticamente desde el archivo al gráfico.
# Description: 
CreateElementMethodDescriptions=Cree una entrada VistaLista. Se requiere TextoPrincipal. TextoDetalle y NombreImagen son opcionales.
# Description: 
CountryPropertyDescriptions=Código de país que se utilizará para la generación de voz. Esto puede afectar la pronunciación. Por ejemplo, el inglés británico (GBR) sonará diferente al inglés estadounidense (EE. UU.). No todos los códigos de país afectarán a todos los idiomas.
# Description: 
CopyFileMethods=CopiarFichero
# Description: 
CopyFileMethodDescriptions=Copiar el contenido del primer archivo al segundo archivo.
# Description: 
ConverseMethods=Conversar
# Description: 
ConverseMethodDescriptions=Haga una pregunta al Chat Bot. Las llamadas sucesivas recordarán información de etapas anteriores de la conversación. Utilice la función "Restablecer conversación" para restablecer una nueva conversación.
# Description: 
ContactUriPropertyDescriptions=URI que especifica la localización del contacto en el dispositivo.
# Description: 
ContactUriProperties=UriContacto
# Description: 
ContactPicker__WidthPropertyDescriptions=Especifica el ancho horizontal del SelectorContactos, medido en píxeles.
# Description: 
ContactPicker__WidthPercentPropertyDescriptions=Especifica el ancho horizontal del SelectorContactos como porcentaje del ancho de la pantalla.
# Description: 
ContactPicker__VisiblePropertyDescriptions=Especifica si el SelectorContactos debe estar visible en la pantalla. El valor es verdadero si se muestra y falso si está oculto.
# Description: 
ContactPicker__TouchUpEventDescriptions=Indica si el SelectorContactos ha sido liberado.
# Description: 
ContactPicker__TouchDownEventDescriptions=Indica si el SelectorContactos fue presionado.
# Description: 
ContactPicker__TextPropertyDescriptions=Texto a mostrar en el SelectorContactos.
# Description: 
ContactPicker__TextColorPropertyDescriptions=Color del texto del botón.
# Description: 
ContactPicker__TextAlignmentPropertyDescriptions=Izquierda, centro, o derecha.
# Description: 
ContactPicker__ShowFeedbackPropertyDescriptions=Especifica si se debe mostrar una respuesta visual para un SelectorContactos que tiene una imagen como fondo.
# Description: 
ContactPicker__ShapePropertyDescriptions=Devuelve el estilo del `SelectorContactos`.
# Description: 
ContactPicker__PicturePropertyDescriptions=Devuelve un URI de imagen para el contacto seleccionado, que se puede utilizar para recuperar la foto del contacto y otros campos.
# Description: 
ContactPicker__PhoneNumberPropertyDescriptions=Devuelve el número de teléfono principal asociado con el contacto seleccionado, o la cadena vacía si no hay ningún número de teléfono asociado con el contacto.
# Description: 
ContactPicker__OpenMethodDescriptions=Abre el SelectorContactos, como si el usuario hubiera hecho clic en él.
# Description: 
ContactPicker__LostFocusEventDescriptions=Indica que el cursor se alejó del SelectorContacto, por lo que ahora ya no es posible hacer clic en él.
# Description: 
ContactPicker__ImagePropertyDescriptions=Imagen para mostrar sobre el botón.
# Description: 
ContactPicker__HeightPropertyDescriptions=Especifica la altura vertical del SelectorContacto, medida en píxeles.
# Description: 
ContactPicker__HeightPercentPropertyDescriptions=Especifica la altura vertical del SelectoContacto como porcentaje de la altura de la pantalla.
# Description: 
ContactPicker__GotFocusEventDescriptions=Indica que el cursor se movió sobre el SelectorContacto, por lo que ahora es posible hacer clic en él.
# Description: 
ContactPicker__FontTypefacePropertyDescriptions=Familia de fuentes para texto de SelectorContacto.
# Description: 
ContactPicker__FontSizePropertyDescriptions=Tamaño en puntos para el texto de SelectorContacto.
# Description: 
ContactPicker__FontItalicPropertyDescriptions=Si activado, el texto de SelectorContacto se muestra en cursiva.
# Description: 
ContactPicker__FontBoldPropertyDescriptions=Si activado, el texto de SelectorContacto se muestra en negrita.
# Description: 
ContactPicker__EnabledPropertyDescriptions=Si activado, el usuario puede tocar SelectorContacto para provocar una acción.
# Description: 
ContactPicker__BeforePickingEventDescriptions=Evento que se genera cuando se hace clic en `SlectorContacto` o se muestra el selector usando el
# Description: 
ContactPicker__BackgroundColorPropertyDescriptions=Devuelve el color de fondo del botón
# Description: 
ContactPicker__AfterPickingEventDescriptions=El evento se generará después de que la actividad `SelectorContacto` devuelva su resultado y se hayan completado las propiedades.
# Description: 
ContactNamePropertyDescriptions=Devuelve el nombre completo del contacto seleccionado o la cadena vacía si un nombre no está disponible.
# Description: 
ConsumerSecretPropertyDescriptions=Método de obtención de propiedad ConsumerSecret.
# Description: 
ConsumerKeyPropertyDescriptions=Método de obtención de propiedad ConsumerKey.
# Description: 
ConnectionAcceptedEventDescriptions=Indica que se ha aceptado una conexión bluetooth.
# Description: 
ConnectWithUUIDMethodDescriptions=Conecta al dispositivo Bluetooth con la dirección y el UUID especificados. Devuelve verdadero si la conexión fue exitosa.
# Description: 
ConnectMethodDescriptions=Conecta al dispositivo Bluetooth con la dirección especificada y el perfil de puerto serie (SPP). Devuelve verdadero si la conexión fue exitosa.
# Description: 
ColumnPropertyDescriptions=Método de obtención de propiedades de columna.
# Description: 
ColumnNamesPropertyDescriptions=Devuelve los elementos de la primera fila del contenido del archivo de datos.
# Description: 
ColumnNamesProperties=NombresColumnas
# Description: 
ColorsPropertyDescriptions=Devuelve los colores del Gráfico como una lista.
# Description: 
ColorsProperties=Colores
# Description: 
ColorRightPropertyDescriptions=El color del control deslizante a la derecha del pulgar.
# Description: 
ColorPropertyDescriptions=Devuelve el color de la serie de datos como un número entero alfa-rojo-verde-azul.
# Description: 
ColorProperties=Color
# Description: 
ColorLeftPropertyDescriptions=El color del control deslizante a la izquierda del pulgar.
# Description: 
CollidedWithEventDescriptions=Controlador de evento llamado cuando dos sprites habilitados (
# Description: 
CloudDB__TokenPropertyDescriptions=Este campo contiene el token de autenticación utilizado para iniciar sesión en el servidor Redis respaldado. Para el servidor "DEFAULT", no edite este valor, el sistema lo completará por usted. Un administrador del sistema también puede brindarle un valor especial que puede usarse para compartir datos entre múltiples proyectos de varias personas. Si utiliza su propio servidor Redis, establezca una contraseña en la configuración del servidor e ingrésela aquí.
# Description: 
CloudDB__StoreValueMethodDescriptions=Almacena un valor en una etiqueta.
# Description: 
CloudDB__GotValueEventDescriptions=Indica que un
# Description: 
CloudDB__GetValueMethodDescriptions=Obtiene el valor de una etiqueta, no devuelve el valor, pero provocará que se active un evento ObtenidoValor cuando se busque el valor.
# Description: 
CloudDB__FirstRemovedEventDescriptions=Evento desencadenado por la función "EliminaPrimeroDeLaLista". El argumento "valor" es el objeto que era el primero en la lista y que ahora se elimina.
# Description: 
CloudDB__DataChangedEventDescriptions=Evento que indica que los datos de CloudDB han cambiado para la etiqueta y el valor dados.
# Description: 
CloudDB__ClearTagMethodDescriptions=Elimina la etiqueta de CloudDB.
# Description: 
CloudDBHelpStringComponentPallette=Componente no visible que le permite almacenar datos en un servidor de base de datos conectado a Internet (utilizando el software Redis). Esto permite a los usuarios de su aplicación compartir datos entre sí. De forma predeterminada, los datos se almacenarán en un servidor mantenido por el MIT; sin embargo, usted puede configurar y ejecutar su propio servidor. Configure la propiedad "ServidorRedis" y la propiedad "PuertoRedis" para acceder a su propio servidor.
# Description: 
CloudDBErrorEvents=ErrorCloudDB
# Description: 
CloudDBErrorEventDescriptions=Indica que se produjo un error al comunicarse con el servidor CloudDB Redis.
# Description: 
CloudConnectedMethods=CloudConectada
# Description: 
CloudConnectedMethodDescriptions=devuelve Verdadero si estamos en la red y probablemente podremos conectarnos al servidor CloudDB.
# Description: 
CloseSerialMethods=CierraSerie
# Description: 
CloseSerialMethodDescriptions=Cierra la conexión serie. Devuelve verdadero cuando se cierra.
# Description: 
CloseScreenAnimationPropertyDescriptions=La animación para cerrar la pantalla actual y regresar a la pantalla anterior. Las opciones válidas son: por defecto, atenuar, acercar, deslizar horizontalmente, deslizar verticalmente y ninguna
# Description: 
ClickablePropertyDescriptions=Especifica si se debe poder hacer clic en la imagen o no.
# Description: 
ClickableProperties=Cliqueable
# Description: 
ClearRangeMethods=BorraRango
# Description: 
ClearRangeMethodDescriptions=Vacía las celdas en el rango dado. Una vez completado, este bloque desencadena el evento de devolución de llamada TerminadoBorraRango.
# Description: 
ClearLocationsMethodDescriptions=Borrar permisos de ubicación almacenados.
# Description: 
ClearCachesMethods=LimpiarCachés
# Description: 
ClearCachesMethodDescriptions=Borrar las cachés del VisorWeb.
# Description: 
ClearAllMethodDescriptions=Borrar todos los datos almacenados.
# Description: 
CleanDataMethods=LimpiarDatos
# Description: 
CleanDataMethodDescriptions=Dada una única anomalía y los valores x e y de sus datos. Este bloque devolverá los pares de valores x e y de sus datos sin la anomalía
# Description: 
Circle__VisiblePropertyDescriptions=Especifica si el Círculo debe estar visible en la pantalla. El valor es verdadero si el componente se muestra y falso si está oculto.
# Description: 
Circle__TypePropertyDescriptions=Devuelve el tipo de característica. Para Círculos, esto devuelve MapFeature.Circle ("Círculo").
# Description: 
Circle__TitlePropertyDescriptions=El título que se muestra en la ventana de información que aparece cuando el usuario hace clic en el Círculo.
# Description: 
Circle__StrokeWidthPropertyDescriptions=El ancho del trazo utilizado para delinear el Círculo.
# Description: 
Circle__StrokeColorPropertyDescriptions=El color utilizado para la línea exterior del Círculo.
# Description: 
Circle__ShowInfoboxMethodDescriptions=Muestra el cuadro de información del Círculo. Esto mostrará el cuadro de información incluso si EnableInfobox está configurado en falso.
# Description: 
Circle__SetLocationMethodDescriptions=Establece el centro del Círculo.
# Description: 
Circle__RadiusPropertyDescriptions=El radio del círculo en metros.
# Description: 
Circle__LongitudePropertyDescriptions=La longitud del centro del círculo.
# Description: 
Circle__LongClickEventDescriptions=El usuario presionó prolongadamente el Círculo. Este evento solo se activará si Arrastrable es falso.
# Description: 
Circle__LatitudePropertyDescriptions=La latitud del centro del círculo.
# Description: 
Circle__FillColorPropertyDescriptions=El color utilizado para rellenar el Círculo.
# Description: 
Circle__EnableInfoboxPropertyDescriptions=Habilitar o deshabilitar la visualización de la ventana del cuadro de información cuando el usuario toca el Círculo.
# Description: 
Circle__DraggablePropertyDescriptions=La propiedad Arrastrable se utiliza para establecer si el usuario puede arrastrar el Círculo manteniendo presionado y luego arrastrándolo a una nueva ubicación.
# Description: 
Circle__DragEventDescriptions=El usuario arrastró el Círculo.
# Description: 
Circle__DistanceToPointMethodDescriptions=Calcula la distancia, en metros, entre un Círculo y un punto de latitud y longitud.
# Description: 
HorizontalArrangement__AlignHorizontalPropertyDescriptions=Número que codifica cómo se alinean horizontalmente los contenidos de DisposiciónHorizontal. Las opciones son: 1 = alineado a la izquierda, 2 = alineado a la derecha, 3 = centrado horizontalmente. La alineación no tiene ningún efecto si el ancho es automático.
# Description: 
HomeUrlPropertyDescriptions=URL de la página en la que debería abrirse inicialmente el VisorWeb. Configurar esto cargará la página.
# Description: 
HolePointsPropertyDescriptions=Especifica los puntos de cualquier agujero en el "Polígono". La propiedad `PuntosAgujero` es una lista de listas, y cada sublista contiene puntos `(latitud, longitud)` que representan un agujero.
# Description: 
HolePointsProperties=PuntosAgujero
# Description: 
HolePointsFromStringPropertyDescriptions=Construye agujeros en un polígono a partir de una lista dada de coordenadas por agujero.
# Description: 
HolePointsFromStringProperties=AgujeroPuntosDesdeCadena
# Description: 
HighlightDataPointsMethods=ResaltarDatosDePuntos
# Description: 
HighlightDataPointsMethodDescriptions=Resalta los puntos de datos de elección en el Gráfico en el color de elección. Este bloque espera una lista de puntos de datos, cada punto de datos es un índice, un par de valores
# Description: 
HighContrastPropertyDescriptions=Cuando esté marcado, usaremos el modo de alto contraste
# Description: 
HighContrastProperties=AltoContraste
# Description: 
HighByteFirstPropertyDescriptions=Devuelve `verdadero
# Description: 
HideInfoboxMethods=OcultarCuadroInfo
# Description: 
Circle__DescriptionPropertyDescriptions=La descripción que se muestra en la ventana de información que aparece cuando el usuario hace clic en el Círculo.
# Description: 
Circle__ClickEventDescriptions=El usuaro hizo clic en el Círculo.
# Description: 
CircleHelpStringComponentPallette=Círculo
# Description: 
ChoosingCanceledEvents=ElecciónCancelado
# Description: 
ChoosingCanceledEventDescriptions=Evento generado cuando el usuario canceló MostrarDialogoElección.
# Description: 
CheckedPropertyDescriptions=Verdadero si la casilla está marcada; falso en caso contrario.
# Description: 
CheckBox__WidthPropertyDescriptions=Especifica el ancho horizontal de la CasillaDeVerificación, medido en píxeles.
# Description: 
CheckBox__WidthPercentPropertyDescriptions=Especifica el ancho horizontal de la CasillaDeVerificación como porcentaje del ancho de la pantalla.
# Description: 
CheckBox__VisiblePropertyDescriptions=Especifica si la CasillaDeVerificación debe estar visible en la pantalla. El valor es verdadero si se muestra y falso si está oculto.
# Description: 
CheckBox__TextPropertyDescriptions=Especifica el texto que muestra la CasillaDeVerificación.
# Description: 
CheckBox__TextColorPropertyDescriptions=Especifica el color del texto de la CasillaDeVerificación como un número entero alfa-rojo-verde-azul.
# Description: 
CheckBox__LostFocusEventDescriptions=La CasillaDeVerificación dejó de ser el componente enfocado.
# Description: 
CheckBox__HeightPropertyDescriptions=Especifica la altura vertical de la CasillaDeVerificación, medida en píxeles.
# Description: 
CheckBox__HeightPercentPropertyDescriptions=Especifica la altura vertical de la CasillaDeVerificación como porcentaje de la altura de la pantalla.
# Description: 
CheckBox__GotFocusEventDescriptions=La CasillaDeVerificación se convirtió en el componente enfocado.
# Description: 
CheckBox__FontTypefacePropertyDescriptions=Especifica la fuente del texto de la CasillaDeVerificación.
# Description: 
CheckBox__FontSizePropertyDescriptions=Especifica el tamaño de fuente del texto de la CasillaDeVerificación en píxeles independientes de la escala.
# Description: 
CheckBox__FontItalicPropertyDescriptions=Establezca en verdadero si el texto de la CasillaDeVerificación debe estar en cursiva.
# Description: 
CheckBox__FontBoldPropertyDescriptions=Establezca en verdadero si el texto de la CasillaDeVerificación debe estar en negrita.
# Description: 
CheckBox__EnabledPropertyDescriptions=Verdadero si la CasillaDeVerificación está activada y se puede hacer clic.
# Description: 
CheckBox__ChangedEventDescriptions=El usuario tocó y soltó la CasillaDeVerificación.
# Description: 
CheckBox__BackgroundColorPropertyDescriptions=El color de fondo de la CasillaDeVerificación como un número entero alfa-rojo-verde-azul.
# Description: 
CheckAuthorizedMethodDescriptions=Comprueba si ya tenemos acceso y, de ser así, hace que se llame al controlador de eventos estáAutorizado.
# Description: 
ChatBot__TokenPropertyDescriptions=El token de acceso MIT que se utilizará. MIT App Inventor completará automáticamente este valor. No debería ser necesario cambiarlo.
# Description: 
ChatBot__ErrorOccurredEventDescriptions=El evento ErrorGenerado se ejecutará cuando ocurra un error durante el procesamiento, como si excede la cuota de uso o algún otro error señalado por ChatGPT o PaLM. Consulte https://appinv.us/chatbot para obtener información actualizada.
# Description: 
ChatBot__ApiKeyPropertyDescriptions=Una clave API de ChatGPT. Si se proporciona, se utilizará en lugar de la APIKEY integrada en el servidor proxy ChatBot
# Description: 
ChatBotHelpStringComponentPallette=Un componente no visible para comunicarse con un chatbot de IA. Este componente actualmente se comunica con un proxy ejecutado por el MIT que a su vez utiliza la API ChatGPT de OpenAI. Este componente se considera experimental.
# Description: 
Chart__WidthPropertyDescriptions=Especifica el ancho horizontal del Gráfico, medido en píxeles.
# Description: 
Chart__WidthPercentPropertyDescriptions=Especifica el ancho horizontal del Gráfico como porcentaje del ancho de la pantalla.
# Description: 
Chart__VisiblePropertyDescriptions=Especifica si el Gráfico debe estar visible en la pantalla. El valor es verdadero si se muestra el Gráfico y falso si está oculto.
# Description: 
Chart__TypePropertyDescriptions=Devuelve el tipo de Gráfico.
# Description: 
Chart__HeightPropertyDescriptions=Especifica la altura vertical del Gráfico, medida en píxeles.
# Description: 
Chart__HeightPercentPropertyDescriptions=Especifica la altura vertical del Gráfico como porcentaje de la altura de la Pantalla.
# Description: 
Chart__EntryClickEventDescriptions=Indica que el usuario hizo clic en una entrada de datos en el `Gráfico`. Se informa la serie específica, junto con sus valores x e y.
# Description: 
Chart__DescriptionPropertyDescriptions=Devuelve el texto de la etiqueta de descripción del Gráfico.
# Description: 
Chart__BackgroundColorPropertyDescriptions=Devuelve el color de fondo del gráfico como un número entero alfa-rojo-verde-azul.
# Description: 
ChartHelpStringComponentPallette=Un componente que permite visualizar datos
# Description: 
ChartData2D__SourcePropertyDescriptions=Establece la fuente que se utilizará para el componente de datos. Las opciones válidas incluyen SensorAcelerómetro, ClienteBluetooth, CloudDB, FicheroDatos, SensorGirosopio, SensorLocalización, SensorOrientación, Podómetro, SensorProximidad TinyDB y componentes web. El valor de Fuente también requiere propiedades ValorFuenteDatos, ColumnaWeb o ColumnaFicheroDatos válidas, según el tipo de Fuente adjunta (las propiedades requeridas aparecen en el menú Propiedades después de cambiar la Fuente). Si los datos identificados por el
# Description: 
ChartData2D__EntryClickEventDescriptions=Indica que el usuario tocó un punto de datos en el gráfico. Se informan los valores x e y de la entrada tocada.
# Description: 
ChartData2D__ClearMethodDescriptions=Borra todos los datos.
# Description: 
ChartData2DHelpStringComponentPallette=Un componente que contiene datos basados en coordenadas (x, y)
# Description: 
CharacterEncodingPropertyDescriptions=Establece la codificación de caracteres que se utilizará al enviar y recibir texto. El valor predeterminado es "UTF-8"
# Description: 
ChangeDataSourceMethods=CambiaFuenteDatos
# Description: 
ChangeDataSourceMethodDescriptions=Cambia la fuente de datos del componente a la Fuente del componente especificado con el valor clave especificado. Ver el
# Description: 
CentroidMethods=Centroide
# Description: 
CentroidMethodDescriptions=Devuelve el centroide del polígono como un par (latitud, longitud).
# Description: 
CenterMethods=Centro
# Description: 
CenterMethodDescriptions=Devuelve el centro del Rectángulo como una lista del formulario (Latitud Longitud).
# Description: 
CenterFromStringPropertyDescriptions=<p>Establece la coordenada central inicial del mapa. El valor se especifica como un par de coordenadas decimales de latitud y longitud separados por comas, por ejemplo, <code>42.359144, -71.093612</code>.</p><p>En el código de bloques, se recomienda por razones de rendimiento use EstableceCentro con latitud y longitud numéricas en lugar de convertir a la representación de cadena para usar con esta propiedad.</p>
# Description: 
CenterFromStringProperties=CentroDesdeCuerda
# Description: 
Canvas__WidthPropertyDescriptions=Especifica el ancho horizontal del `Lienzo`, medido en píxeles.
# Description: 
Canvas__WidthPercentPropertyDescriptions=Especifica el ancho horizontal del Lienzo como porcentaje del ancho de la Pantalla.
# Description: 
Canvas__VisiblePropertyDescriptions=Especifica si el lienzo debe estar visible en la pantalla. El valor es verdadero si se muestra el lienzo y falso si está oculto.
# Description: 
Canvas__TouchedEventDescriptions=Cuando el usuario toca el lienzo y luego levanta inmediatamente el dedo: proporciona la posición (x,y) del toque, en relación con la parte superior izquierda del lienzo. TocadoCualquierSprite es verdadero si el mismo toque también tocó un objeto y falso en caso contrario.
# Description: 
Canvas__TouchUpEventDescriptions=Cuando el usuario deja de tocar el lienzo (levanta el dedo después de un evento Presionar): proporciona la posición (x,y) del toque, en relación con la parte superior izquierda del lienzo
# Description: 
Canvas__TouchDownEventDescriptions=Cuando el usuario comienza a tocar el lienzo (coloca el dedo en el lienzo y lo deja allí): proporciona la posición (x,y) del toque, en relación con la parte superior izquierda del lienzo
# Description: 
Canvas__TextAlignmentPropertyDescriptions=Determina la alineación del texto dibujado por DibujarTexto() o DibujarÁngulo() con respecto al punto especificado por ese comando: punto a la izquierda del texto, punto al centro del texto o punto a la derecha del texto.
# Description: 
Canvas__SaveMethodDescriptions=Guarda una imagen de este lienzo en el almacenamiento externo del dispositivo. Si se produce un error, se llamará al evento ErrorGenerado de la pantalla.
# Description: 
Canvas__PaintColorPropertyDescriptions=El color en el que se dibujan las líneas
# Description: 
Canvas__HeightPropertyDescriptions=Especifica la altura vertical del `Lienzo`, medida en píxeles.
# Description: 
Canvas__HeightPercentPropertyDescriptions=Especifica la altura vertical del lienzo como porcentaje de la altura de la pantalla.
# Description: 
Canvas__FontSizePropertyDescriptions=El tamaño de fuente del texto dibujado en el lienzo.
# Description: 
Canvas__FlungEventDescriptions=Cuando se realiza un gesto de lanzamiento (deslizamiento rápido) en el lienzo: proporciona la posición (x,y) del inicio del lanzamiento, en relación con la parte superior izquierda del lienzo. También proporciona la velocidad (píxeles por milisegundo) y el rumbo (-180 a 180 grados) del lanzamiento, así como los componentes de velocidad x e y del vector del lanzamiento. El valor "lanzarSprite" es verdadero si un sprite estaba ubicado cerca del punto inicial del gesto de lanzamiento.
# Description: 
Canvas__DrawPointMethodDescriptions=Dibuja un punto en las coordenadas dadas en el lienzo.
# Description: 
Canvas__DrawLineMethodDescriptions=Dibuja una línea entre las coordenadas dadas en el lienzo.
# Description: 
Canvas__DrawCircleMethodDescriptions=Dibuja un círculo (rellenado) con el radio dado centrado en las coordenadas dadas en el lienzo.
# Description: 
Canvas__DraggedEventDescriptions=Cuando el usuario arrastra desde un punto (prevX, prevY) a otro (x, y). El par (inicioX, inicioY) indica dónde el usuario tocó la pantalla por primera vez y "algúnSpriteArrastrado" indica si se está arrastrando un objeto.
# Description: 
Canvas__ClearMethodDescriptions=Borra todo lo dibujado en este lienzo, pero no el color o imagen de fondo.
# Description: 
Canvas__BackgroundImagePropertyDescriptions=El nombre de un archivo que contiene la imagen de fondo del lienzo
# Description: 
Canvas__BackgroundColorPropertyDescriptions=El color de fondo del lienzo.
# Description: 
CanGoForwardMethodDescriptions=Devuelve verdadero si VisorWeb puede avanzar en la lista del historial.
# Description: 
CanGoBackMethodDescriptions=Devuelve verdadero si VisorWeb puede retroceder en la lista del historial.
# Description: 
CalibrationFailedEventDescriptions=Este evento ha quedado obsoleto.
# Description: 
CalibrateStrideLengthPropertyDescriptions=Esta propiedad ha quedado obsoleta.
# Description: 
CalculateLineOfBestFitValueMethods=CalcularValorDeLíneaDeMejorAjuste
# Description: 
CalculateLineOfBestFitValueMethodDescriptions=Devuelve uno de los valores de la Línea de Mejor Ajuste. Un valor podría ser "pendiente", "intercepciónY", "coeficiente de correlación" o "predicciones". El bloque devuelve el diccionario completo con todos los valores si no se proporciona una cadena de valor específica
# Description: 
BytesAvailableToReceiveMethodDescriptions=Devuelve una estimación del número de bytes que se pueden recibir sin bloquear
# Description: 
Button__WidthPropertyDescriptions=Especifica el ancho horizontal del Botón, medido en píxeles.
# Description: 
Button__WidthPercentPropertyDescriptions=Especifica el ancho horizontal del Botón como porcentaje del ancho de la pantalla.
# Description: 
Button__VisiblePropertyDescriptions=Especifica si el Botón debe estar visible en la pantalla. El valor es verdadero si el Botón se muestra y falso si está oculto.
# Description: 
Button__TouchUpEventDescriptions=Indica que el Botón ha sido liberado.
# Description: 
Button__TouchDownEventDescriptions=Indica que el Botón fue presionado.
# Description: 
Button__TextPropertyDescriptions=Texto a mostrar sobre el botón.
# Description: 
Button__TextColorPropertyDescriptions=Color del texto del botón.
# Description: 
Button__TextAlignmentPropertyDescriptions=Izquierda, centro, o derecha.
# Description: 
Button__ShowFeedbackPropertyDescriptions=Especifica si se debe mostrar una respuesta visual para un Botón que tiene una imagen como fondo.
# Description: 
Button__ShapePropertyDescriptions=Devuelve el estilo del `Botón`.
# Description: 
Button__LostFocusEventDescriptions=Indica que el cursor se alejó del Botón, por lo que ya no es posible hacer clic en él.
# Description: 
Button__LongClickEventDescriptions=El usuario mantuvo presionado el botón.
# Description: 
Button__ImagePropertyDescriptions=Imagen a mostrar sobre el Botón.
# Description: 
Button__HeightPropertyDescriptions=Especifica la altura vertical del Botón, medida en píxeles.
# Description: 
Button__HeightPercentPropertyDescriptions=Especifica la altura vertical del Botón como porcentaje de la altura de la pantalla.
# Description: 
Button__GotFocusEventDescriptions=Indica que el cursor se movió sobre el Botón así que ahora es posible hacer clic en él.
# Description: 
Button__FontTypefacePropertyDescriptions=Familia de fuentes para el texto del botón.
# Description: 
Button__FontSizePropertyDescriptions=Tamaño en puntos para el texto del botón.
# Description: 
Button__FontItalicPropertyDescriptions=Si activado, el texto del Botón se muestra en cursiva.
# Description: 
Button__FontBoldPropertyDescriptions=Si activado, el texto del Botón se muestra en negrita.
# Description: 
Button__EnabledPropertyDescriptions=Si activado, el usuario puede tocar el Botón para provocar una acción.
# Description: 
Button__ClickEventDescriptions=El usuario tocó y soltó el botón.
# Description: 
Button__BackgroundColorPropertyDescriptions=Devuelve el color de fondo del botón
# Description: 
BuildRequestDataMethodDescriptions=Convierte una lista de sublistas de dos elementos, que representan pares de nombre y valor, en una cadena formateada como application/x-www-form-urlencoded de tipo media, adecuada para pasar a PostText.
# Description: 
BufferSizePropertyDescriptions=Devuelve el tamaño del búfer en bytes
# Description: 
BufferSizeProperties=TamañoBúfer
# Description: 
BoundsMethods=Límites
# Description: 
BoundsMethodDescriptions=Devuelve el cuadro delimitador del Rectángulo en el formato ((Noroeste) (Sureste)).
# Description: 
BoundsChangeEvents=CambiarLimites
# Description: 
BoundsChangeEventDescriptions=El usuario ha cambiado los límites del mapa al desplazarse o hacer zoom en el mapa.
# Description: 
BoundingBoxPropertyDescriptions=Cuadro delimitador del mapa almacenado como [[Norte, Oeste], [Sur, Este]].
# Description: 
BoundingBoxProperties=CuadroDelimitador
# Description: 
BottomOfRangePropertyDescriptions=La parte inferior del rango utilizado para los eventos DebajoDeRango, DentroDeRango y EncimaDeRango.
# Description: 
BluetoothServer__EnabledPropertyDescriptions=Si el Bluetooth está habilitado
# Description: 
BluetoothServer__AvailablePropertyDescriptions=Si el Bluetooth está disponible en el dispositivo
# Description: 
BluetoothErrorEventDescriptions=El evento ErrorBluetooth ya no se utiliza. Por favor utilice el evento Pantalla.ErrorGenerado en su lugar.
# Description: 
BluetoothClient__EnabledPropertyDescriptions=Si Bluetooth está habilitado
# Description: 
BluetoothClient__AvailablePropertyDescriptions=Si el Bluetooth está disponible en el dispositivo
# Description: 
BluetoothClientPropertyDescriptions=El componente ClienteBluetooth que se debe utilizar para la comunicación.
# Description: 
BlocksToolkitPropertyDescriptions=Una cadena JSON que representa el subconjunto de la pantalla. Los autores de aplicaciones de plantilla pueden usar esto para controlar qué componentes, propiedades de diseñador y bloques están disponibles en el proyecto.
# Description: 
BlocksToolkitProperties=HerramientasBloques
# Description: 
BigDefaultTextPropertyDescriptions=Cuando esté marcado, usaremos el modo de alto contraste
# Description: 
BigDefaultTextProperties=TextoGrandeDefecto
# Description: 
BehaviorPropertyCategory=Comportamiento
# Description: 
BeforeSpeakingEventDescriptions=Evento que se genera cuando se invoca Hablar, antes de que se pronuncie el mensaje.
# Description: 
BeforePageLoadEvents=AntesDeCargarPágina
# Description: 
BeforePageLoadEventDescriptions=Cuando una página está a punto de cargarse, se ejecuta este evento.
# Description: 
BeforeGettingTextEventDescriptions=Evento simple que se genera cuando se invoca `ReconocedorVoz` pero antes de que se inicie su actividad.
# Description: 
BearingToPointMethods=OrientaciónAlPunto
# Description: 
BearingToPointMethodDescriptions=Devuelve el rumbo desde el Marcador hasta la latitud y longitud dadas, en grados desde el norte.
# Description: 
BearingToFeatureMethodDescriptions=Devuelve el rumbo desde el Marcador hasta la entidad del mapa dada, en grados desde el norte. Si el parámetro de centroides es verdadero, el rumbo será hacia el centro de la entidad del mapa. De lo contrario, el rumbo se calculará hasta el punto de la entidad más cercana al Marcador.
# Description: 
BaudRatePropertyDescriptions=Devuelve el actual ratio de baudios
# Description: 
BaudRateProperties=RatioBaudios
# Description: 
Barometer__EnabledPropertyDescriptions=Si está habilitado, el dispositivo escuchará los cambios.
# Description: 
Barometer__AvailablePropertyDescriptions=Especifica si el dispositivo tiene o no el hardware para admitir el componente Barómetro.
# Description: 
BarometerHelpStringComponentPallette=Un componente de sensor que puede medir la presión del aire ambiente.
# Description: 
BarcodeScanner__ResultPropertyDescriptions=Texto resultante del escaneo previo.
# Description: 
BallotQuestionPropertyDescriptions=La cuestión a votar.
# Description: 
BallotOptionsPropertyDescriptions=La lista de opciones de voto.
# Description: 
Ball__ZPropertyDescriptions=Cómo se debe colocar la `Pelota` en relación con otras
# Description: 
Ball__YPropertyDescriptions=La coordenada vertical de la Pelota, que aumenta a medida que la Pelota desciende. Si la propiedad CentradoEnOrigen es verdadera, la coordenada es para el centro de la Pelota; de lo contrario, es para el punto más alto de la Pelota.
# Description: 
Ball__XPropertyDescriptions=La coordenada horizontal de la Pelota, que aumenta a medida que la Pelota se mueve hacia la derecha. Si la propiedad CentradoEnOrigen es verdadera, la coordenada es para el centro de la Pelota; de lo contrario, es para el punto más a la izquierda de la Pelota.
# Description: 
Ball__VisiblePropertyDescriptions=Si la Pelota es visible.
# Description: 
Ball__TouchedEventDescriptions=Controlador de evento que se llama cuando el usuario toca una Pelota habilitada y luego levanta inmediatamente el dedo. Las coordenadas x e y proporcionadas son relativas a la parte superior izquierda del lienzo.
# Description: 
Ball__TouchUpEventDescriptions=Controlador de evento que se llama cuando el usuario deja de tocar una Pelota habilitada (levantando el dedo después de un evento TocarAbajo). Esto proporciona las coordenadas x e y del toque, en relación con la parte superior izquierda del lienzo.
# Description: 
Ball__TouchDownEventDescriptions=Controlador de evento que se llama cuando el usuario comienza a tocar una Pelota habilitada (colocando su dedo sobre una Pelota y dejándolo allí). Esto proporciona las coordenadas x e y del toque, en relación con la parte superior izquierda del lienzo.
# Description: 
Ball__SpeedPropertyDescriptions=El número de píxeles que la Pelota debe moverse cada intervalo, si está habilitado.
# Description: 
Ball__RadiusPropertyDescriptions=La distancia desde el borde de la Pelota hasta su centro.
# Description: 
Ball__PointTowardsMethodDescriptions=Gira la Pelota para que apunte hacia un objeto objetivo designado (Pelota o ImagenSprite). El nuevo rumbo será paralelo a la línea que une los puntos centrales de los dos sprites.
# Description: 
Ball__PointInDirectionMethodDescriptions=Establece el rumbo de la Pelota hacia el punto con las coordenadas (x, y).
# Description: 
Ball__PaintColorPropertyDescriptions=El color de la Pelota.
# Description: 
Ball__MoveToPointMethodDescriptions=Mueve el origen de la Pelota a la posición de las coordenadas dadas por la lista formada como [coordenada-x, coordenada-y].
# Description: 
Ball__MoveToMethodDescriptions=Establece las coordenadas x e y de la Pelota. Si CentradoEnOrigen es verdadero, el centro de la Pelota se colocará aquí. De lo contrario, el borde superior izquierdo de la Pelota se colocará en las coordenadas especificadas.
# Description: 
Ball__MoveIntoBoundsMethodDescriptions=Mueve la Pelota nuevamente dentro de los límites si parte de ella se extiende fuera de los límites, sin tener ningún efecto en caso contrario. Si la pelota es demasiado ancha para caber en el Lienzo, esto alinea el lado izquierdo de la Pelota con el lado izquierdo del Lienzo. Si la Pelota es demasiado alta para caber en el lienzo, esto alinea el lado superior de la pelota con el lado superior del lienzo.
# Description: 
Ball__IntervalPropertyDescriptions=El intervalo en milisegundos en el que se actualiza la posición de la Pelota. Por ejemplo, si el intervalo es 50 y la velocidad es 10, entonces cada 50 milisegundos el objeto se moverá 10 píxeles en la dirección del rumbo.
# Description: 
AnglePropertyDescriptions=Devuelve un ángulo que indica la dirección en la que se coloca el dispositivo. Es decir, indica la dirección de la fuerza que sentiría una pelota rodando sobre la superficie del dispositivo.
# Description: 
Ball__HeadingPropertyDescriptions=Devuelve el rumbo de la Pelota en grados por encima del eje x positivo. Cero grados está hacia la derecha de la pantalla; 90 grados está hacia la parte superior de la pantalla.
# Description: 
Ball__FlungEventDescriptions=Se llama a este controlador de eventos cuando se realiza un gesto de lanzamiento (deslizamiento rápido) de una Pelota habilitada. Esto proporciona las coordenadas x e y del inicio del lanzaiento (en relación con la parte superior izquierda del lienzo), la velocidad (píxeles por milisegundo), el rumbo (-180 a 180 grados) y los componentes de velocidad x e y del vector de lanzamiento.
# Description: 
Ball__EnabledPropertyDescriptions=Controla si la Pelota se mueve y se puede interactuar con ella mediante colisiones, arrastre, toque y lanzamiento.
# Description: 
Ball__EdgeReachedEventDescriptions=Se llama a este manejador de eventos cuando la Pelota alcanza un borde de la pantalla. Si luego se llama a Rebote con ese borde, la Pelota parecerá rebotar en el borde que alcanzó. El borde aquí se representa como un número entero que indica una de ocho direcciones norte (1), noreste (2), este (3), sureste (4), sur (-1), suroeste (-2), oeste (-3). , y noroeste (-4).
# Description: 
Ball__DraggedEventDescriptions=Controlador de eventos llamado cuando se arrastra una Pelota. En todas las llamadas, las coordenadas iniciales son donde se tocó la pantalla por primera vez y las coordenadas "actuales" describen el punto final del segmento de línea actual. En la primera llamada dentro de un arrastre determinado, las coordenadas "anteriores" son las mismas que las coordenadas iniciales; posteriormente son las coordenadas "actuales" de la llamada anterior. Tenga en cuenta que la Pelota en realidad no se moverá a ninguna parte en respuesta al evento Arrastrado a menos que se llame explícitamente a MoverA. Para un movimiento suave, cada una de sus coordenadas debe establecerse como la suma de su valor inicial y la diferencia entre sus valores actuales y anteriores.
# Description: 
Ball__CollidingWithMethodDescriptions=Indica si se ha registrado una colisión entre esta Pelota y el sprite pasado (Pelota o ImagenSprite).
# Description: 
Ball__BounceMethodDescriptions=Hace que la pelota rebote, como si estuviera en una pared. Para un rebote normal, el argumento de borde debe ser el que devuelve BordeAlcanzado.
# Description: 
BackgroundImageinBase64PropertyDescriptions=Establece la imagen de fondo en formato Base64. Esto requiere un nivel de API >= 8. Para dispositivos con un nivel de API inferior a 8, configurar esto terminará con un fondo vacío.
# Description: 
BackgroundImageinBase64Properties=ImagenDeFondoBase64
# Description: 
BackPressedEventDescriptions=Botón de retroceso del dispositivo presionado.
# Description: 
AzimuthPropertyDescriptions=Devuelve el ángulo de azimut del dispositivo. Para devolver valores significativos, el sensor debe estar habilitado.
# Description: 
AverageLuxPropertyDescriptions=El promedio de los 10 niveles de luz medidos más recientemente, en lux.
# Description: 
AverageLuxProperties=LuxPromedio
# Description: 
AvailableProvidersPropertyDescriptions=Lista de proveedores de servicio dispnibles, como gps o red. Esta información es proporcionada como una lista y en fomato texto.
# Description: 
AvailableLanguagesPropertyDescriptions=Lista de códigos de países disponibles en este dispositivo para usar con TextToSpeech. Consulte la documentación para desarrolladores de Android en idiomas admitidos para encontrar el significado de estas abreviaturas.
# Description: 
AvailableLanguagesProperties=IdiomasDisponibles
# Description: 
AvailableCountriesPropertyDescriptions=Lista de códigos de países disponibles en este dispositivo para usar con TextToSpeech. Consulte la documentación para desarrolladores de Android en idiomas admitidos para encontrar el significado de estas abreviaturas.
# Description: 
AvailableCountriesProperties=PaísesDisponibles
# Description: 
AuthorizeMethodDescriptions=Redirige al usuario para que inicie sesión en Twitter a través del navegador Web utilizando el protocolo OAuth si aún no tenemos autorización.
# Description: 
AskForPermissionMethods=SolicitarPermiso
# Description: 
FilePicker__FontTypefacePropertyDescriptions=Familia de fuentes para el texto del SelectorFichero.
# Description: 
FilePicker__FontSizePropertyDescriptions=Tamaño en puntos para el texto de SelectorFichero.
# Description: 
FilePicker__FontItalicPropertyDescriptions=Si activado, el texto del SelectorFichero se muestra en cursiva.
# Description: 
FilePicker__FontBoldPropertyDescriptions=Si activado, el texto del SelectorFichero se muestra en negrita.
# Description: 
FilePicker__EnabledPropertyDescriptions=Si activado, el usuario puede tocar el SelectorFichero para realizar una acción.
# Description: 
FilePicker__BeforePickingEventDescriptions=Evento que se genera cuando se hace clic en `SelectorFichero` o se muestra el selector usando el
# Description: 
FilePicker__BackgroundColorPropertyDescriptions=Devuelve el color de fondo del botón
# Description: 
FilePicker__AfterPickingEventDescriptions=El evento se generará después de que la actividad `SelectorFichero` devuelva su resultado y se hayan completado las propiedades.
# Description: 
FilePicker__ActionPropertyDescriptions=Establece la acción deseada para SelectorFichero. Uno de: - Seleccionar archivo existente: abrir un archivo existente - Seleccionar directorio: abrir un directorio existente - Seleccionar nuevo archivo: crear un nuevo archivo para guardar
# Description: 
FilePickerHelpStringComponentPallette=El componente <code>SelectorFichero</code> es un componente similar a un botón que, cuando el usuario hace clic en él, le pedirá que seleccione un archivo del sistema. El selector también se puede abrir mediante programación llamando a su método <a href="/reference/components/media.html#FilePicker.Open" target="_blank">Open</a>. El uso de SelectorFichero requiere Android 4.4 o superior o iOS 11 o superior.
# Description: 
FeaturesProperties=Características
# Description: 
FeaturesFromGeoJSONPropertyDescriptions=Carga una colección de características de la cadena dada. Si la cadena no es GeoJSON válida, el error ErrorCargandoColecciónCaracterísticas se ejecutará con url = <cadena>.
# Description: 
FeaturesFromGeoJSONProperties=CaracterísticaDesdeGeoJSON
# Description: 
FeatureStopDragEvents=CaracterísticaDetenerArrastrar
# Description: 
FeatureStopDragEventDescriptions=El usuario dejó de arrastrar una función de mapa.
# Description: 
FeatureStartDragEvents=CaracterísticaInicioArrastrar
# Description: 
FeatureStartDragEventDescriptions=El usuario comenzó a arrastrar una función de mapa.
# Description: 
FeatureLongClickEvents=CaracterísticaClicLargo
# Description: 
FeatureLongClickEventDescriptions=El usuario presionó prolongadamente una característica del mapa.
# Description: 
FeatureFromDescriptionMethods=CaracterísticaDesdeDescripción
# Description: 
FeatureFromDescriptionMethodDescriptions=Convierte una descripción de característica en una característica de mapa de App Inventor. Los puntos se convierten en
# Description: 
FeatureDragEvents=CarcaterísticaArrastrar
# Description: 
FeatureDragEventDescriptions=El usuario arrastró una función de mapa.
# Description: 
FeatureCollection__WidthPropertyDescriptions=Especifica el ancho horizontal de ColecciónCaracteristicas, medido en píxeles.
# Description: 
FeatureCollection__WidthPercentPropertyDescriptions=Especifica el ancho horizontal de ColecciónCaracterísticas como porcentaje del ancho de la pantalla.
# Description: 
FeatureCollection__VisiblePropertyDescriptions=Especifica si la ColecciónCaracterísticas debe ser visible en la pantalla. El valor el verdadero si se muestra y falso si está oculto.
# Description: 
FeatureCollection__SourcePropertyDescriptions=Especifica la URL fuente utilizada para poblar la colección de características. Si la colección de características no fue cargada desde una URL, será una cadena vacía.
# Description: 
FeatureCollection__HeightPropertyDescriptions=Especifica la altura vertical de ColecciónCaracterísticas, medida en píxeles.
# Description: 
FeatureCollection__HeightPercentPropertyDescriptions=Especifica la altura vertical de ColecciónCaracterísticas como porcentaje de la altura de la pantalla.
# Description: 
FeatureCollection__FeaturesPropertyDescriptions=La lista de funciones incluidas en esta ColecciónCaracterísticas. Esta lista también incluye cualquier función creada mediante llamadas a CaracterísticaDesdeDescripción
# Description: 
FeatureCollectionHelpStringComponentPallette=Una ColecciónCaracterísticas contiene una o más funciones de mapa como grupo. Cualquier evento activado en una característica de la colección también activará el evento correspondiente en el objeto de la colección. ColecciónCaracterísticas se puede cargar desde recursos externos como una forma de completar un mapa con contenido.
# Description: 
FeatureClickEvents=CaracterísticaClic
# Description: 
FeatureClickEventDescriptions=El usuario hizo clic en una característica del mapa.
# Description: 
ExtrasPropertyDescriptions=Especifica la lista de pares clave-valor que se pasarán como datos adicionales a la actividad.
# Description: 
ExtrasProperties=Extras
# Description: 
ExtraValuePropertyDescriptions=Devuelve el valor adicional que se pasará a la actividad. OBSOLETO: el nuevo código debe usar la propiedad Extras en su lugar.
# Description: 
ExtraKeyPropertyDescriptions=Devuelve la clave adicional que se pasará a la actividad. OBSOLETO: el nuevo código debe usar la propiedad Extras en su lugar.
# Description: 
ExtendMovesOutsideCanvasPropertyDescriptions=Determina si los movimientos pueden extenderse más allá de los bordes del lienzo. El valor predeterminado es falso. Normalmente, esto debería ser falso y la propiedad se proporciona para compatibilidad con versiones anteriores.
# Description: 
ExtendMovesOutsideCanvasProperties=ExtenderMovimientosFueraDelLienzo
# Description: 
ExistsMethods=Existe
# Description: 
ExistsMethodDescriptions=Prueba si la ruta existe en el ámbito dado.
# Description: 
Ev3UltrasonicSensor__WithinRangeEventEnabledPropertyDescriptions=Si el evento DentroDeRango debe activarse cuando la distancia varía entre LimInfRango y TopeDeRango.
# Description: 
Ev3UltrasonicSensor__WithinRangeEventDescriptions=Se llama cuando la distancia detectada ha entrado dentro del rango.
# Description: 
Ev3UltrasonicSensor__BelowRangeEventEnabledPropertyDescriptions=Si el evento DebajoDeRango debe activarse cuando la distancia desciende por debajo de LimInfRango.
# Description: 
Ev3UltrasonicSensor__BelowRangeEventDescriptions=Se llama cuando la distancia detectada ha ido por debajo del rango.
# Description: 
Ev3UltrasonicSensor__AboveRangeEventEnabledPropertyDescriptions=Si el evento DebajoDeRango debe activarse cuando la distancia supera TopeDeRango.
# Description: 
Ev3UltrasonicSensor__AboveRangeEventDescriptions=Se llama cuando la distancia detectada ha superado el rango.
# Description: 
Ev3UltrasonicSensorHelpStringComponentPallette=Un componente que proporciona una interfaz de alto nivel para un sensor ultrasónico en un robot LEGO MINDSTORMS EV3.
# Description: 
Ev3UI__DrawPointMethodDescriptions=Dibujar un punto en la pantalla.
# Description: 
Ev3UI__DrawLineMethodDescriptions=Dibujar una línea en la pantalla.
# Description: 
Ev3UI__DrawCircleMethodDescriptions=Dibujar un círculo en la pantalla.
# Description: 
Ev3UIHelpStringComponentPallette=Un componente que proporciona una interfaz de alto nivel para un robot LEGO MINDSTORMS EV3, con funciones para dibujar gráficos en la pantalla EV3.
# Description: 
Ev3TouchSensor__ReleasedEventDescriptions=Se llama cuando se presiona el sensor táctil.
# Description: 
Ev3TouchSensor__PressedEventEnabledPropertyDescriptions=Especifica si el evento Presionado debe activarse cuando se presiona el sensor táctil.
# Description: 
Ev3TouchSensor__PressedEventDescriptions=Se llama cuando se presiona el sensor táctil.
# Description: 
Ev3TouchSensorHelpStringComponentPallette=Un componente que proporciona una interfaz de alto nivel para un sensor táctil en un robot LEGO MINDSTORMS EV3.
# Description: 
Ev3SoundHelpStringComponentPallette=Un componente que proporciona una interfaz de alto nivel para funciones de sonido en el robot LEGO MINDSTORMS EV3.
# Description: 
Ev3Motors__WheelDiameterPropertyDescriptions=Especifica el diámetro de las ruedas montadas en los motores.
# Description: 
Ev3Motors__StopMethodDescriptions=Para los motores del robot.
# Description: 
Ev3Motors__StopBeforeDisconnectPropertyDescriptions=Si se debe detener el motor antes de desconectarlo.
# Description: 
Ev3MotorsHelpStringComponentPallette=Un componente que proporciona interfaces de alto y bajo nivel para un robot LEGO MINDSTORMS EV3, con funciones que pueden controlar los motores.
# Description: 
Ev3GyroSensorHelpStringComponentPallette=Un componente que proporciona una interfaz de alto nivel para un sensor giroscópico en un robot LEGO MINDSTORMS EV3.
# Description: 
Ev3Commands__KeepAliveMethodDescriptions=Evitar que el bloque EV3 se apague durante un período de tiempo.
# Description: 
Ev3Commands__GetFirmwareVersionMethodDescriptions=Obtener la versión del firmware en EV3.
# Description: 
Ev3CommandsHelpStringComponentPallette=Un componente que proporciona una interfaz de bajo nivel para un robot LEGO MINDSTORMS EV3, con funciones para enviar comandos directos o del sistema a los robots EV3.
# Description: 
Ev3ColorSensor__WithinRangeEventEnabledPropertyDescriptions=Si el evento DentroDeRango debe activarse cuando el nivel de luz oscila entre LimInferiorRango y TopeDeRango.
# Description: 
Ev3ColorSensor__WithinRangeEventDescriptions=El nivel de luz ha entrado dentro del rango.
# Description: 
Ev3ColorSensor__GetLightLevelMethodDescriptions=Devuelve el nivel de luz en porcentaje, o -1 cuando no se puede leer el nivel de luz.
# Description: 
Ev3ColorSensor__ColorChangedEventEnabledPropertyDescriptions=Si el evento ColorCambiado debe activarse cuando la propiedad Modo se establece en "color" y el color detectado cambia.
# Description: 
Ev3ColorSensor__ColorChangedEventDescriptions=Se llama cuando el color detectado ha cambiado. El evento ColorCambiado se producirá si la propiedad Modo se establece en "color" y la propiedad EventoCambioColorHabilitado se establece en Verdadero.
# Description: 
Ev3ColorSensor__BelowRangeEventEnabledPropertyDescriptions=Si el evento DebajoDeRango debe activarse cuando el nivel de luz desciende por debajo de LimInferiorRango.
# Description: 
Ev3ColorSensor__BelowRangeEventDescriptions=El nivel de luz ha bajado por debajo del rango.
# Description: 
Ev3ColorSensor__AboveRangeEventEnabledPropertyDescriptions=Si el evento SuperadoRango debe activarse cuando el nivel de luz supera TopeDeRango.
# Description: 
Ev3ColorSensor__AboveRangeEventDescriptions=El nivel de luz ha superado el rango.
# Description: 
Ev3ColorSensorHelpStringComponentPallette=Un componente que proporciona una interfaz de alto nivel para un sensor de color en un robot LEGO MINDSTORMS EV3.
# Description: 
EntryClickEvents=EntradaClic
# Description: 
EndLongitudePropertyDescriptions=La longitud de la localización final.
# Description: 
EndLongitudeProperties=LongitudFinal
# Description: 
EndLocationPropertyDescriptions=Establecer la localización final.
# Description: 
EndLocationProperties=LocalizaciónFinal
# Description: 
EndLatitudePropertyDescriptions=La latitud de la localización final.
# Description: 
EndLatitudeProperties=LatitudFinal
# Description: 
EnableZoomPropertyDescriptions=Establecer si el usuario puede hacer zoom en el mapa mediante gestos táctiles. Este valor no afecta si el usuario puede hacer zoom usando los controles de zoom proporcionados por <a href="#Map.ShowZoom">MostrarZoom</a>.
# Description: 
EnableZoomProperties=HabilitaZoom
# Description: 
EnableSpeedRegulationPropertyDescriptions=Especifica si se debe mantener la rotación del motor a velocidad constante.
# Description: 
EnableSpeedRegulationProperties=HabilitaRegulaciónVelocidad
# Description: 
EnableRotationPropertyDescriptions=Habilitar la rotación del mapa según la orientación del usuario.
# Description: 
EnableRotationProperties=HabilitaRotación
# Description: 
EnablePanPropertyDescriptions=Habilitar la panorámica del Mapa con dos dedos
# Description: 
EnablePanProperties=HabilitaPan
# Description: 
EnableInfoboxProperties=HabilitaCuadroInfo
# Description: 
EmailPicker__WidthPropertyDescriptions=Especifica el ancho horizontal del SelectorEmail, medido en píxeles.
# Description: 
EmailPicker__WidthPercentPropertyDescriptions=Especifica el ancho horizontal de SelectorEmail como porcentaje del ancho de la pantalla.
# Description: 
EmailPicker__VisiblePropertyDescriptions=Especifica si el SelectorEmail debe estar visible en la pantalla. El valor es verdadero si se muestra y falso si está oculto.
# Description: 
EmailPicker__TextPropertyDescriptions=Devuelve el contenido de la caja de texto.
# Description: 
EmailPicker__TextColorPropertyDescriptions=El color del texto. Puedes elegir un color por nombre en el Diseñador o en el Editor de bloques. El color de texto predeterminado es negro.
# Description: 
EmailPicker__TextAlignmentPropertyDescriptions=Si el texto debe estar justificado a la izquierda, centrado o justificado a la derecha. De forma predeterminada, el texto está justificado a la izquierda.
# Description: 
EmailPicker__RequestFocusMethodDescriptions=Establece el SelectorEmail a activo.
# Description: 
EmailPicker__LostFocusEventDescriptions=Evento que se genera cuando SelectorEmail ya no está seleccionado para la entrada, como si el usuario toca un cuadro de texto diferente.
# Description: 
EmailPicker__HintPropertyDescriptions=Texto que debería aparecer débilmente en SelectorEmailpara proporcionar una pista sobre lo que el usuario debe ingresar. Esto sólo se puede ver si la propiedad Texto está vacía.
# Description: 
EmailPicker__HeightPropertyDescriptions=Especifica la altura vertical del SelectorEmail, medida en píxeles.
# Description: 
EmailPicker__HeightPercentPropertyDescriptions=Especifica la altura vertical del SelectorEmail como porcentaje de la altura de la pantalla.
# Description: 
EmailPicker__GotFocusEventDescriptions=Evento que se genera cuando se selecciona ´SelectorEmail´ para la entrada, por ejemplo, cuando el usuario lo toca.
# Description: 
EmailPicker__FontTypefacePropertyDescriptions=La fuente del texto. El valor se puede cambiar en el Diseñador.
# Description: 
EmailPicker__FontSizePropertyDescriptions=El tamaño de fuente del texto. Por defecto, es 14,0 puntos.
# Description: 
EmailPicker__FontItalicPropertyDescriptions=Si la fuente del texto debe estar en cursiva. Por defecto, no lo es.
# Description: 
EmailPicker__FontBoldPropertyDescriptions=Si la fuente del texto debe estar en negrita. Por defecto, no lo es.
# Description: 
EmailPicker__EnabledPropertyDescriptions=Si el usuario puede ingresar texto en SelectorEmail. Por defecto, esto es cierto.
# Description: 
EmailPicker__BackgroundColorPropertyDescriptions=El color de fondo del cuadro de entrada. Puedes elegir un color por nombre en el Diseñador o en el Editor de bloques. El color de fondo predeterminado es "predeterminado" (apariencia tridimensional sombreada).
# Description: 
EmailAddressPropertyDescriptions=Devuelve la dirección de correo electrónico principal del contacto seleccionado o la cadena vacía si una dirección de correo electrónico no está disponible.
# Description: 
EmailAddressListPropertyDescriptions=Devuelve una lista de direcciones de correo con el contacto seleccionado.
# Description: 
ElementsFromPairsPropertyDescriptions=Lista separada por comas de elementos que se utilizarán para la serie de datos. Los valores tienen el siguiente formato: x1,y1,x2,y2,x3,y3. Los valores se toman en pares y se forma una entrada a partir de los valores x e y.
# Description: 
ElementsFromPairsProperties=ElementosDesdePares
# Description: 
ElapsedTimePropertyDescriptions=Tiempo transcurrido en milisegundos desde que el podómetro se inició.
# Description: 
EditImageWithMaskMethods=EditarImagenConMáscara
# Description: 
EditImageWithMaskMethodDescriptions=Editar fuenteImagen usando la descripción proporcionada. El área editable de la imagen debe estar indicada por fuenteMáscara. Las fuentes pueden ser un lienzo, una imagen o una cadena que represente la ruta a un archivo.
# Description: 
EditImageMethods=EditarImagen
# Description: 
EditImageMethodDescriptions=Editar la imagen de origen usando la descripción proporcionada. Las áreas editables de la imagen deben tener un alfa transparente. La fuente puede ser un componente Lienzo, un componente Imagen o una cadena que represente la ruta a un archivo.
# Description: 
EastLongitudePropertyDescriptions=El borde este del rectángulo, en grados decimales al este del meridiano principal.
# Description: 
EastLongitudeProperties=LongitudEste
# Description: 
DurationToWeeksMethods=DuraciónASemanas
# Description: 
DurationToWeeksMethodDescriptions=Convierte la duración al número de semanas.
# Description: 
DurationToSecondsMethods=DuraciónASegundos
# Description: 
DurationToSecondsMethodDescriptions=Convierte la duración al número de segundos.
# Description: 
DurationToMinutesMethods=DuraciónAMinutos
# Description: 
DurationToMinutesMethodDescriptions=Convierte la duración al número de minutos.
# Description: 
DurationToHoursMethods=DuraciónAHoras
# Description: 
DurationToHoursMethodDescriptions=Convierte la duración al número de horas.
# Description: 
DurationToDaysMethods=DuraciónADías
# Description: 
DurationToDaysMethodDescriptions=Convierte la duración al número de días.
# Description: 
DurationMethodDescriptions=Devuelve la duración, que son los milisegundos transcurridos entre instantes.
# Description: The label used to indicate driving navigation.
DrivingNavMethod=Conducir
# Description: 
DriveMotorsPropertyDescriptions=Los puertos del motor que se utilizan para conducir: el puerto del motor de la rueda izquierda seguido por el puerto del motor de la rueda derecha.
# Description: 
DrawTextMethodDescriptions=Dibuja el texto especificado en relación con las coordenadas especificadas utilizando los valores de las propiedades TamañoFuente y AlineamientoTexto.
# Description: 
DrawTextAtAngleMethodDescriptions=Dibuja el texto especificado comenzando en las coordenadas especificadas en el ángulo especificado utilizando los valores de las propiedades TamañoFuente y AlineamientoTexto.
# Description: 
DrawShapeMethods=DibujarForma
# Description: 
DrawShapeMethodDescriptions=Dibuja una forma en el lienzo. listaPuntos debe ser una lista que contenga sublistas con dos números que representen una coordenada. No es necesario que el primer punto y el último punto sean iguales. p.ej. ((x1 y1) (x2 y2) (x3 y3)) Cuando el relleno es verdadero, la forma se rellenará.
# Description: 
DrawRectMethods=DibujarRecta
# Description: 
DrawRectMethodDescriptions=Dibujar un rectángulo en la pantalla.
# Description: 
DrawLineOfBestFitMethods=DibujarLíneaDeMejorAjuste
# Description: 
DrawLineOfBestFitMethodDescriptions=Dibuja la línea correspondiente de mejor ajuste en el gráfico
# Description: 
DrawIconMethods=DibujarIcono
# Description: 
DrawIconMethodDescriptions=Dibuja un icono incorporado en la pantalla.
# Description: 
DrawArcMethods=DibujarArco
# Description: 
DrawArcMethodDescriptions=Dibuje un arco en Lienzo, dibujando un arco desde un óvalo específico (especificado por izquierda, arriba, derecha e abajo). El ángulo inicial es 0 cuando se dirige hacia la derecha y aumenta cuando se gira en el sentido de las agujas del reloj. Cuando utilizarCentro es verdadero, se dibujará un sector en lugar de un arco. Cuando el relleno es verdadero, se dibujará un arco (o sector) relleno en lugar de solo un contorno.
# Description: 
DraggableProperties=Arrastrable
# Description: 
DragEvents=Arrastrar
# Description: 
DownloadFileMethodDescriptions=Descargar un fichero a el robot.
# Description: 
DoubleTapAtPointEvents=DobleToqueEnPunto
# Description: 
DoubleTapAtPointEventDescriptions=El usuario tocó dos veces en un punto del mapa. A este evento le seguirá un evento ZoomCambiado si los gestos de zoom están habilitados y el mapa no está en el nivel de zoom más alto posible.
# Description: 
DoesEntryExistMethods=ExisteEntrada
# Description: 
DoesEntryExistMethodDescriptions=Comprueba si existe una entrada (x, y) en los Datos de Coordenadas. Devuelve verdadero si la entrada existe y falso en caso contrario.
# Description: 
DoScanMethodDescriptions=Comienza un escaneo de código de barras usando la cámara. Cuando se complete el escaneo, se generará el evento DespuésEscanear.
# Description: 
DoQueryMethodDescriptions=OBSOLETO. Este bloque está obsoleto a finales de 2012. Utilice EnviarConsulta.
# Description: 
DistanceToPointMethods=DistanciaAPunto
# Description: 
DistanceToFeatureMethods=DistanciaACaracterística
# Description: 
DistanceToFeatureMethodDescriptions=Calcula la distancia, en metros, entre dos características del mapa.
# Description: 
DistanceIntervalPropertyDescriptions=Determina el intervalo de distancia mínimo, en metros, que el sensor intentará utilizar para enviar actualizaciones de ubicación. Por ejemplo, si se establece en 5, el sensor activará un evento de CambioDeUbicación solo después de que se hayan recorrido 5 metros. Sin embargo, el sensor no garantiza que se recibirá una actualización exactamente en el intervalo de distancia. Por ejemplo, pueden ser necesarios más de 5 metros para disparar un evento.
# Description: 
DisplayDropdownMethodDescriptions=Muestra la lista desplegable para la selección, la misma acción que cuando el usuario hace clic en el desplegable.
# Description: 
DismissProgressDialogMethods=DescartarDiálogoProgreso
# Description: 
DismissProgressDialogMethodDescriptions=Descartar un cuadro de DiálogoDeProgreso mostrado anteriormente
# Description: 
DisconnectOnErrorPropertyDescriptions=Desconecta el ClienteBluetooth automáticamente cuando se produce algún error.
# Description: 
DisconnectOnErrorProperties=DesconectarSiError
# Description: 
DisconnectMethodDescriptions=Desconectar del dispositivo Bluetooth conectado.
# Description: 
DirectMessagesReceivedEventDescriptions=Este evento se genera cuando se han recuperado los mensajes recientes solicitados a través de <code>SolicitarMensajesDirectos</code>. Luego se puede encontrar una lista de los mensajes en el parámetro <code>mensajes</code> o en la propiedad <code>Mensajes</code>.
# Description: 
DirectMessagesPropertyDescriptions=Esta propiedad contiene una lista de los mensajes más recientes que mencionan al usuario que inició sesión. Inicialmente, la lista está vacía. Para configurarlo, el programa debe: <ol> <li> Llamar al método <code>Autorizar</code>.</li> <li> Esperar el evento <code>Autorizado</code>.</li> <li> Llame al método <code>SolicitarMensajesDirectos</code>.</li> <li> Espere el evento <code>MensajeDirectoRecibido</code>.</li></ol>El valor de esta propiedad luego se establecerá en la lista de mensajes directos recuperados (y mantendrá ese valor hasta cualquier llamada posterior a <code>SolicitarMensajesDirectos</code>).
# Description: 
DirectMessageMethodDescriptions=Esto envía un mensaje directo (privado) al usuario especificado. El mensaje se recortará si supera los 160 caracteres. <p><u>Requisitos</u>: esto solo debe invocarse después de que se haya generado el evento <code>estáAutorizado</code>, lo que indica que el usuario ha iniciado sesión correctamente en Twitter.</p>
# Description: 
DeveloperBucketPropertyDescriptions=Especifica la ruta de desarrollador única de Firebase.
# Description: 
DeveloperBucketProperties=BucketDesarrollador
# Description: 
DetectColorPropertyDescriptions=Si el sensor debe detectar color o luz. Verdadero indica que el sensor debería detectar el color; Falso indica que el sensor debería detectar luz. Si la propiedad DetectarColor se establece en Verdadero, los eventos DebajoDeRango, DentroDeRango y EncimaDeRango no se producirán y el sensor no generará color. Si la propiedad DetectarColor se establece en False, el evento ColorCambiado no se producirá.
# Description: 
DetectAnomaliesMethods=DetectarAnomalías
# Description: 
DetectAnomaliesMethodDescriptions=Detección de Anomalías de Puntuación-Z: comprueba la puntuación-Z de cada punto de datos con respecto al umbral dado. Si la puntuación-Z de un punto de datos es mayor que el umbral, el punto de datos se etiqueta como anomalía y se devuelve en una lista de pares ( índice de anomalía, valor de anomalía)
# Description: 
DescriptionProperties=Descripción
# Description: 
DelimiterBytePropertyDescriptions=Establece el byte delimitador que se utilizará al pasar un número negativo para el parámetro númeroDeBytes al llamar a ReceptorTexto, ReceptorBytesConSigno o ReceptorBytesSinSigno. Esas funciones continuarán leyendo bytes hasta que encuentren el valor especificado aquí. El delimitador predeterminado es 0, el byte nulo.
# Description: 
DeleteSheetMethods=BorrarHoja
# Description: 
DeleteSheetMethodDescriptions=Elimina la hoja especificada dentro del Spreadsheet.
# Description: 
DeleteFileMethodDescriptions=Elimina un fichero en el robot.
# Description: 
DefaultURLPropertyDescriptions=Propiedad para URLDefecto
# Description: 
DefaultURLProperties=URLDefecto
# Description: 
DataChangedEvents=DatosCambiados
# Description: The label used to indicate cycling navigation.
CyclingNavMethod=Ciclismo
# Description: 
CurrentUrlPropertyDescriptions=URL de la página vista actualmente. Esto podría ser diferente de la URL de inicio si se visitaran páginas nuevas mediante los siguientes enlaces.
# Description: 
CurrentPageTitlePropertyDescriptions=Título de la página vista actualmente
# Description: 
CurrentAddressPropertyDescriptions=Proporciona una representación textual de la dirección actual o "No hay dirección disponible".
# Description: 
CredentialsJsonPropertyDescriptions=El fichero JSON con credenciales para la Cuenta de Servicio
# Description: 
CredentialsJsonProperties=CredencialesJson
# Description: 
CreateMarkerMethods=CrearMarcador
# Description: 
CreateMarkerMethodDescriptions=Crear un nuevo marcador con propiedades pordefecto en la latitud y longitud especificadas.
# Description: 
CreateImageMethods=CrearImagen
# Description: 
CreateImageMethodDescriptions=Crear una imagen usando la descripción dada.
# Description: 
CreateElementMethods=CrearElemento
# Description: 
AskForPermissionMethodDescriptions=Pide al usuario que le otorgue acceso a un permiso peligroso.
# Description: 
ApplicationNamePropertyDescriptions=Especifica el nombre de la aplicación proporcionada al realizar una llamada API.
# Description: 
ApplicationNameProperties=NombreAplicación
# Description: 
AppendValueToListMethods=AgregarValorALista
# Description: 
AppendValueToListMethodDescriptions=Agrega un valor al final de una lista de forma atómica. Si dos dispositivos usan esta función simultáneamente, ambos se añadirán y no se perderán datos.
# Description: 
AppendValueMethods=AgregarValor
# Description: 
AppendValueMethodDescriptions=Agrega un valor al final de una lista de forma atómica. Si dos dispositivos usan esta función simultáneamente, ambos se añadirán y no se perderán datos.
# Description: 
AppendToFileMethodDescriptions=Agrega texto al final de un archivo almacenado, creando el archivo si no existe. Consulte el texto de ayuda en GuardarArchivo para obtener información sobre dónde se escriben los archivos.
# Description: 
AppearancePropertyCategory=Apariencia
# Description: 
AppNamePropertyDescriptions=Este es el nombre que se muestra en la aplicación instalada en el teléfono. Si NombreApp está en blanco, se configurará con el nombre del proyecto cuando se cree.
# Description: 
AppNameProperties=NombreApp
# Description: 
AnomalyDetectionHelpStringComponentPallette=Un componente que contiene modelos de detección de anomalías
# Description: 
AnimationPropertyDescriptions=Esta es una forma limitada de animación que puede adjuntar una pequeña cantidad de tipos de movimiento a las imágenes. Los movimientos permitidos son DesplazamientoLentoDerecha, DesplazamientoDerecha, DesplazamientoRápidoDerecha, DesplazamientoLentoIzquierda, DesplazamientoIzquierda, DesplazamientoRápidoDerecha y Parar
# Description: 
AnchorVerticalPropertyDescriptions=La propiedad de alineamiento vertical controla dónde se ubica el marcador en relación con su altura. Las opciones son: 1 = alineado en la parte superior, 2 = centrado verticalmente, 3 = alineado en la parte inferior.
# Description: 
AnchorVerticalProperties=AnclaVertical
# Description: 
AnchorHorizontalPropertyDescriptions=La propiedad de alineamineto horizontal controla dónde se ubica el marcador en relación con su ancho. Las opciones son: 1 = alineado a la izquierda, 3 = centrado , 2 = alineado a la derecha.
# Description: 
AddSheetMethods=AñadirHoja
# Description: 
AddSheetMethodDescriptions=Añade una nueva hoja dentro de la Hoja de Cálculo.
# Description: 
AddRowMethods=AñadirFila
# Description: 
AddRowMethodDescriptions=Dada una lista de valores como 'datos', añade los valores a la siguiente fila vacía de la hoja. Además, devuelve el número de fila de la nueva fila.
# Description: 
AddEntryMethods=AñadirEntrada
# Description: 
AddEntryMethodDescriptions=Añade una entrada con los valores x e y especificados. Los valores se pueden indicar como texto o como número. Para gráficos de líneas, dispersión, áreas y barras, ambos valores deben representar un número. Para los gráficos de barras, el valor de x se redondea al entero más cercano. Para gráficos circulares, el valor x es un valor de texto.
# Description: 
AddColumnMethods=AñadirColumna
# Description: 
AddColumnMethodDescriptions=Dada una lista de valores como "datos", añade los valores a la siguiente columna vacía de la hoja.
# Description: 
ActivityStarter__ActionPropertyDescriptions=Devuelve la acción que se utilizará para iniciar la actividad.
