# Frontend definitions
# Generated from com.google.appinventor.client.OdeMessages
# for locale default
# Description: Message providing details about starting the wireless connection.
AICompanionMenuItem = AI 컴패니언

# Description:
AboutScreenProperties = 스크린설명

# Description:
AboutScreenPropertyDescriptions = 스크린에 대한 정보. 시스템메뉴에서 \"어플리케이션 정보\"를 선택하면 보여집니다. 사용자에게 앱에 대한 정보를 제공합니다. 각각의 스크린마다 고유한 스크린 설명을 가집니다.

# Description:
AboveRangeEventDescriptions = 거리값이 범위를 초과했습니다.

# Description:
AboveRangeEventEnabledProperties = 범위초과이벤트활성화

# Description:
AboveRangeEventEnabledPropertyDescriptions = 거리가 범위의 상한선보다 높을 때 범위초과 이벤트를 발생시킬 것인지 여부

# Description:
AboveRangeEvents = 범위초과

# Description:
AccelerationChangedEventDescriptions = X, Y, Z 축으로 가속도 값이 변화했는지를 나타낸다.

# Description:
AccelerationChangedEvents = 가속도가변화했을때

# Description:
AccelerometerSensorHelpStringComponentPallette = SI 단위 (m / s <sup> 2 </ sup>)를 사용하여 대략 3 차원에서 떨림을 감지하고 가속도를 측정 할 수있는 보이지 않는 콤포넌트입니다. 구성 요소는 다음과 같습니다. <ul> <li> <strong> xAccel </ strong> : 휴대 전화가 평평한 표면에있을 때 0, 휴대 전화가 오른쪽으로 기울어지면 (즉, 왼쪽이 위로 올 때) 값이 증가하고, 휴대 전화가 왼쪽으로 기울어지면 (즉, 오른쪽이 위로 올 때) 값이 감소합니다. </ li> <li> <strong> yAccel </ strong> : 평평한 곳에 휴대 전화가 놓여 있으면 0, 휴대전화의 아래부분이 올라가면 값이 증가하고, 휴대전화의 윗부분이 올라가면 값이 감소합니다.  </ li> <li> <strong> zAccel </ strong> : 휴대폰 화면이 위로 가도록 지면에 평평하게 놓았을 때 -9.8 입니다 ( 지구의 중력 가속도)  지면에 수직이면 0 입니다. 화면이 아래로 가도록 놓으면 +9.8 입니다. 이 값은 중력에 의해, 또는 가속에 의해 영향을받을 수도 있습니다. </ li> </ ul>

# Description:
AccentColorProperties = 강조색

# Description:
AccentColorPropertyDescriptions = 강조색은 강조하거나 다른 유저인터페이스의 강조색으로 사용될 수 있습니다.

# Description:
AcceptConnectionMethodDescriptions = Accept an incoming connection with the Serial Port Profile (SPP).

# Description:
AcceptConnectionMethods = 접속승인

# Description:
AcceptConnectionWithUUIDMethodDescriptions = Accept an incoming connection with a specific UUID.

# Description:
AcceptConnectionWithUUIDMethods = UUID로접속승인

# Description:
AccuracyProperties = 정확도

# Description:
AccuracyPropertyDescriptions = 

# Description:
ActionBarProperties = 액션바

# Description:
ActionBarPropertyDescriptions = 

# Description:
ActionProperties = 동작

# Description:
ActionPropertyDescriptions = 

# Description:
ActivityCanceledEventDescriptions = Event raised if this ActivityStarter returns because the activity was canceled.

# Description:
ActivityCanceledEvents = 액티비티가취소되었을때

# Description:
ActivityClassProperties = 액티비티클래스

# Description:
ActivityClassPropertyDescriptions = 

# Description:
ActivityPackageProperties = 액티비티패키지

# Description:
ActivityPackagePropertyDescriptions = 

# Description:
ActivityStarterHelpStringComponentPallette = <code> StartActivity </ code> 메소드를 사용하여 활동을 시작할 수있는 구성 요소. <p> 시작할 수있는 활동은 다음과 같습니다 : <ul> <li> Android App Inventor를 다른 앱으로 시작합니다. 이렇게하려면 먼저 소스 코드를 다운로드하고 파일 탐색기 또는 unzip 유틸리티를 사용하여 \"youngandroidproject / project.properties\"라는 파일을 찾아 다른 응용 프로그램의 <em> 클래스 </ em>를 찾으십시오. 파일의 첫 번째 줄은 \"main =\"으로 시작하고 그 뒤에 클래스 이름이옵니다. 예 : <code> main = com.gmail.Bitdiddle.Ben.HelloPurr.Screen1 </ code>. 첫 번째 구성 요소는 Ben.Bitdiddle@gmail.com이 만든 구성 요소임을 나타냅니다. <code> ActivityStarter </ code>가이 응용 프로그램을 시작하게하려면 다음 속성을 설정하십시오. <ul> <li> <code> ActivityPackage < (예 : <code> com.gmail.Bitdiddle.Ben.HelloPurr </ code>) </ li> <li> <code> ActivityClass </ code>를 (를) 전체 클래스 이름 (예 : <code> com.gmail.Bitdiddle.Ben.HelloPurr.Screen1 </ code>) </ li> </ ul> </ li> <li> 다음 속성을 설정하여 카메라 응용 프로그램 시작 <code> ActivityPackage : com.android.camera </ code> <li> <li> <li> <li> <li> <li> <li> > <code> ActivityClass : com.android.camera.Camera </ code> </ li> </ ul> </ li> <li> 웹 검색 수행. 검색하려는 용어가 \"뱀파이어\"라고 가정하면 (자신의 선택을 자유롭게 대체 할 수 있음) 속성을 다음과 같이 설정하십시오. <ul> <code> <li> 액션 : android.intent.action.WEB_SEARCH </ li> < ExtraValue : vampire </ li> <li> ActivityPackage : com.google.android.providers.enhancedgooglesearch </ li> <li> ActivityClass : com.google.android.providers. enhancedgooglesearch.Launcher </ li> </ code> </ ul> </ li> <li> 브라우저를 특정 웹 페이지로여십시오. 당신이 가고자하는 페이지가 \"www.facebook.com\"이라고 가정하면 (자신의 선택을 자유롭게 대체 할 수 있음) 속성을 다음과 같이 설정하십시오 : <ul> <code> <li> Action : android.intent.action.VIEW < / li> <li> DataUri : http://www.facebook.com </ li> </ code> </ ul> </ li> </ ul> </ p>

# Description:
AddDaysMethodDescriptions = An instant in time some days after the argument

# Description:
AddDaysMethods = 일추가

# Description:
AddDurationMethodDescriptions = An instant in time some duration after the argument

# Description:
AddDurationMethods = 기간추가

# Description:
AddHoursMethodDescriptions = An instant in time some hours after the argument

# Description:
AddHoursMethods = 시추가

# Description:
AddMinutesMethodDescriptions = An instant in time some minutes after the argument

# Description:
AddMinutesMethods = 분추가

# Description:
AddMonthsMethodDescriptions = An instant in time some months after the argument

# Description:
AddMonthsMethods = 월추가

# Description:
AddSecondsMethodDescriptions = An instant in time some seconds after the argument

# Description:
AddSecondsMethods = 초추가

# Description:
AddWeeksMethodDescriptions = An instant in time some weeks after the argument

# Description:
AddWeeksMethods = 주추가

# Description:
AddYearsMethodDescriptions = An instant in time some years after the argument

# Description:
AddYearsMethods = 년추가

# Description:
AddressesAndNamesProperties = 주소와이름

# Description:
AddressesAndNamesPropertyDescriptions = The addresses and names of paired Bluetooth devices

# Description:
AfterActivityEventDescriptions = Event raised after this ActivityStarter returns.

# Description:
AfterActivityEvents = 액티비티후

# Description:
AfterChoosingEventDescriptions = Event after the user has made a selection for ShowChooseDialog.

# Description:
AfterChoosingEvents = 선택후

# Description:
AfterDateSetEventDescriptions = Event that runs after the user chooses a Date in the dialog

# Description:
AfterDateSetEvents = 날짜설정후

# Description:
AfterFileSavedEventDescriptions = Event indicating that the contents of the file have been written.

# Description:
AfterFileSavedEvents = 파일저장후

# Description:
AfterGettingTextEventDescriptions = Simple event to raise after the VoiceReco activity has returned

# Description:
AfterGettingTextEvents = 텍스트가져온후

# Description:
AfterPickingEventDescriptions = Event to be raised after the picker activity returns its result and the properties have been filled in.

# Description:
AfterPickingEvents = 선택후

# Description:
AfterPictureEventDescriptions = Indicates that a photo was taken with the camera and provides the path to the stored picture.

# Description:
AfterPictureEvents = 사진찍은후

# Description:
AfterRecordingEventDescriptions = Indicates that a video was recorded with the camera and provides the path to the stored picture.

# Description:
AfterRecordingEvents = 녹화후

# Description:
AfterScanEventDescriptions = Indicates that the scanner has read a (text) result and provides the result

# Description:
AfterScanEvents = 스캔후

# Description:
AfterSelectingEventDescriptions = Event called after the user selects an item from the dropdown list.

# Description:
AfterSelectingEvents = 선택후

# Description:
AfterSoundRecordedEventDescriptions = Provides the location of the newly created sound.

# Description:
AfterSoundRecordedEvents = 녹음후

# Description:
AfterSpeakingEventDescriptions = Event to raise after the message is spoken.

# Description:
AfterSpeakingEvents = 말하기후

# Description:
AfterTextInputEventDescriptions = Event raised after the user has responded to ShowTextDialog.

# Description:
AfterTextInputEvents = 텍스트입력후

# Description:
AfterTimeSetEventDescriptions = This event is run when a user has set the time in the popup dialog.

# Description:
AfterTimeSetEvents = 시간설정후

# Description:
AlignHorizontalProperties = 수평정렬

# Description:
AlignHorizontalPropertyDescriptions = A number that encodes how contents of the arrangement are aligned horizontally. The choices are: 1 = left aligned, 2 = right aligned, 3 = horizontally centered. Alignment has no effect if the arrangement''s width is automatic.

# Description:
AlignVerticalProperties = 수직정렬

# Description:
AlignVerticalPropertyDescriptions = A number that encodes how the contents of the arrangement are aligned vertically. The choices are: 1 = aligned at the top, 2 = vertically centered, 3 = aligned at the bottom. Alignment has no effect if the arrangement''s height is automatic.

# Description:
AllowCookiesProperties = 쿠키허용

# Description:
AllowCookiesPropertyDescriptions = Whether the cookies from a response should be saved and used in subsequent requests. Cookies are only supported on Android version 2.3 or greater.

# Description:
AltitudeProperties = 고도

# Description:
AltitudePropertyDescriptions = 

# Description:
AnchorHorizontalProperties = 가로기준

# Description:
AnchorHorizontalPropertyDescriptions = The horizontal alignment property controls where the Marker''s anchor is located relative to its width.

# Description:
AnchorVerticalProperties = 세로기준

# Description:
AnchorVerticalPropertyDescriptions = The vertical alignment property controls where the Marker''s anchor is located relative to its height.

# Description:
AngleProperties = 각도

# Description:
AnglePropertyDescriptions = 

# Description:
AnimationProperties = 애니메이션

# Description:
AnimationPropertyDescriptions = This is a limited form of animation that can attach a small number of motion types to images. The allowable motions are ScrollRightSlow, ScrollRight, ScrollRightFast, ScrollLeftSlow, ScrollLeft, ScrollLeftFast, and Stop

# Description:
ApiKeyProperties = API키

# Description:
ApiKeyPropertyDescriptions = Your Google API Key. For help, click on the questionmark (?) next to the FusiontablesControl component in the Palette.

# Description:
AppNameProperties = 앱이름

# Description:
AppNamePropertyDescriptions = This is the display name of the installed application in the phone.If the AppName is blank, it will be set to the name of the project when the project is built.

# Description:
AppearancePropertyCategory = 외모

# Description:
AppendToFileMethodDescriptions = Appends text to the end of a file storage, creating the file if it does not exist. See the help text under SaveFile for information about where files are written.

# Description:
AppendToFileMethods = 파일에추가하기

# Description:
AppendValueMethodDescriptions = Append a value to the end of a list atomically. If two devices use this function simultaneously, both will be appended and no data lost.

# Description:
AppendValueMethods = 값추가하기

# Description:
AppendValueToListMethodDescriptions = Append a value to the end of a list atomically. If two devices use this function simultaneously, both will be appended and no data lost.

# Description:
AppendValueToListMethods = 리스트에값추가하기

# Description:
AskForPermissionMethodDescriptions = Ask the user to grant access to a dangerous permission.

# Description:
AskForPermissionMethods = 권한요청하기

# Description:
AuthorizeMethodDescriptions = Redirects user to login to Twitter via the Web browser using the OAuth protocol if we don''t already have authorization.

# Description:
AuthorizeMethods = 인증하기

# Description:
AvailableCountriesProperties = 이용가능국가

# Description:
AvailableCountriesPropertyDescriptions = List of the country codes available on this device for use with TextToSpeech. Check the Android developer documentation under supported languages to find the meanings of these abbreviations.

# Description:
AvailableLanguagesProperties = 이용가능언어

# Description:
AvailableLanguagesPropertyDescriptions = List of the languages available on this device for use with TextToSpeech. Check the Android developer documentation under supported languages to find the meanings of these abbreviations.

# Description:
AvailableProperties = 사용가능

# Description:
AvailablePropertyDescriptions = Reports whether or not the device has a proximity sensor

# Description:
AvailableProvidersProperties = 사용가능한서비스제공자

# Description:
AvailableProvidersPropertyDescriptions = 

# Description:
AzimuthProperties = 방위각

# Description:
AzimuthPropertyDescriptions = 

# Description:
BackPressedEventDescriptions = 뒤로가기 버튼이 눌렸을 때

# Description:
BackPressedEvents = 뒤로가기버튼을눌렀을때

# Description:
BackgroundColorProperties = 배경색

# Description:
BackgroundColorPropertyDescriptions = Returns the component''s background color

# Description:
BackgroundImageProperties = 배경이미지

# Description:
BackgroundImagePropertyDescriptions = The screen background image.

# Description:
BallHelpStringComponentPallette = <p> 터치 및 드래그에 반응하고 다른 스프라이트와 상호 작용할 수있는 <code> Canvas </ code>에 배치 할 수있는 원형 스프라이트 (<code> ImageSprite </ code> 및 기타 <code> Ball </ code>)과 캔버스의 가장자리를 이동하여 속성 값에 따라 이동합니다. </ p> <p> 예를 들어 <code> Ball </ code> 500 초 (1/2 초) 간격으로 <code> Canvas </ code>의 상단에 <code> Speed </ code> 속성을 4 [pixels]로 설정하고 <code> Interval </ code> 속성을 500 [milliseconds], <code> Heading </ code> 속성을 90도, <code> Enabled </ code> 속성을 <code> True </ code>로 설정하십시오. 이 속성과 다른 속성은 언제든지 변경할 수 있습니다. </ p> <p> Ball과 <code> ImageSprite </ code>의 차이점은 이미지 파일에서 모양을 얻을 수 있다는 것입니다. ''모양은 <code> PaintColor </ code> 및 <code> Radius </ code> 속성을 변경해야만 변경할 수 있습니다. </ p>

# Description:
BallotOptionsProperties = 투표설정

# Description:
BallotOptionsPropertyDescriptions = The list of ballot options.

# Description:
BallotQuestionProperties = 투표질문

# Description:
BallotQuestionPropertyDescriptions = The question to be voted on.

# Description:
BarcodeScannerHelpStringComponentPallette = 바코드 스캐너를 사용하여 바코드를 읽을 수 있는 컴포넌트입니다.

# Description:
BearingToFeatureMethodDescriptions = Returns the bearing from the Marker to the given map feature, in degrees from due north. If the centroids parameter is true, the bearing will be to the center of the map feature. Otherwise, the bearing will be computed to the point in the feature nearest the Marker.

# Description:
BearingToFeatureMethods = 다른도형의방향가져오기

# Description:
BearingToPointMethodDescriptions = Returns the bearing from the Marker to the given latitude and longitude, in degrees from due north.

# Description:
BearingToPointMethods = 좌표의방향가져오기

# Description:
BeforeGettingTextEventDescriptions = Simple event to raise when VoiceReco is invoked but before the VoiceReco activity is started.

# Description:
BeforeGettingTextEvents = 텍스트가져오기전

# Description:
BeforePickingEventDescriptions = Event to raise when the button of the component is clicked or the list is shown using the Open block. This event occurs before the list of items is displayed, and can be used to prepare the list before it is shown.

# Description:
BeforePickingEvents = 선택전

# Description:
BeforeSpeakingEventDescriptions = Event to raise when Speak is invoked, before the message is spoken.

# Description:
BeforeSpeakingEvents = 말하기전

# Description:
BehaviorPropertyCategory = Behavior

# Description:
BelowRangeEventDescriptions = Distance has gone below the range.

# Description:
BelowRangeEventEnabledProperties = 가능한이벤트범위내

# Description:
BelowRangeEventEnabledPropertyDescriptions = Whether the BelowRange event should fire when the distance goes below the BottomOfRange.

# Description:
BelowRangeEvents = 범위내

# Description:
BluetoothClientHelpStringComponentPallette = 블루투스 클라이언트 컴포넌트입니다.

# Description:
BluetoothClientProperties = 블루투스클라이언트

# Description:
BluetoothClientPropertyDescriptions = The BluetoothClient component that should be used for communication.

# Description:
BluetoothServerHelpStringComponentPallette = 블루투스 서버 컴포넌트입니다.

# Description:
BottomOfRangeProperties = 범위이하

# Description:
BottomOfRangePropertyDescriptions = The bottom of the range used for the BelowRange, WithinRange, and AboveRange events.

# Description:
BounceMethodDescriptions = Makes this sprite bounce, as if off a wall. For normal bouncing, the edge argument should be the one returned by EdgeReached.

# Description:
BounceMethods = 튕기기

# Description:
BoundingBoxProperties = 지도경계

# Description:
BoundingBoxPropertyDescriptions = Bounding box for the map stored as [[North, West], [South, East]].

# Description:
BoundsChangeEventDescriptions = User has changed the map bounds by panning or zooming the map.

# Description:
BoundsChangeEvents = 지도경계가변경되었을때

# Description:
BoundsMethodDescriptions = Returns the bounding box of the Rectangle in the format ((North West) (South East)).

# Description:
BoundsMethods = 지도경계

# Description:
BuildPostDataMethods = 포스트데이터만들기

# Description:
BuildRequestDataMethodDescriptions = Converts a list of two-element sublists, representing name and value pairs, to a string formatted as application/x-www-form-urlencoded media type, suitable to pass to PostText.

# Description:
BuildRequestDataMethods = 요청데이터만들기

# Description:
ButtonHelpStringComponentPallette = 버튼은 클릭을 하면 연결된 동작을 수행하는 컴포넌트입니다. 다양한 모양으로 변경할 수 있으며, 클릭을 가능하게 할지 (활성 여부)도 디자이너 또는 블록 에디터에서 변경할 수 있습니다.

# Description:
BytesAvailableToReceiveMethodDescriptions = Returns an estimate of the number of bytes that can be received without blocking

# Description:
BytesAvailableToReceiveMethods = 받을수있는바이트크기

# Description:
CalibrateStrideLengthProperties = 걸음보폭보정하기

# Description:
CalibrateStrideLengthPropertyDescriptions = 

# Description:
CalibrationFailedEventDescriptions = Event for CalibrationFailed

# Description:
CalibrationFailedEvents = 보정실패

# Description:
CamcorderHelpStringComponentPallette = 캠코더를 사용하여 영상을 녹화하는 컴포넌트입니다. 영상이 녹화된 다음에는, 클립 파일 이름을 녹화 후 이벤트의 인자로 사용 가능합니다. 예를 들어, 파일 이름을 비디오 플레이어 컴포넌트의 소스 속성으로 지정할 수 있습니다.

# Description:
CameraHelpStringComponentPallette = 카메라를 사용하여 사진을 찍는 컴포넌트입니다. 사진을 찍은 다음에는, 사진 파일 이름을 사진 찍은 후 이벤트의 인자로 사용 가능합니다. 예를 들어, 파일 이름을 이미지 컴포넌트의 사진 속성에 지정할 수 있습니다.

# Description:
CanGoBackMethodDescriptions = Returns true if the WebViewer can go back in the history list.

# Description:
CanGoBackMethods = 뒤로가기가능여부

# Description:
CanGoForwardMethodDescriptions = Returns true if the WebViewer can go forward in the history list.

# Description:
CanGoForwardMethods = 앞으로가기가능여부

# Description:
CanvasHelpStringComponentPallette = </ p> <code> BackgroundColor </ code>, <code> PaintColor </ code>는 <code> 캔버스의 <code> BackgroundImage </ code>, <code> Width </ code> 및 <code> Height </ code>는 디자이너 또는 블록 편집기에서 설정할 수 있습니다. <code> 너비 </ code> 및 <code> 높이 </ code>는 픽셀 단위로 측정되며 양수 여야합니다. </ p> <p> 캔버스의 모든 위치는 (X, Y ) 값을 반환합니다. <ul> <li> X는 캔버스의 왼쪽 가장자리에서 떨어진 픽셀 수입니다. <li> Y는 캔버스의 위쪽 가장자리에서 떨어진 픽셀 수입니다. </ li> </ code> 또는 <code> Sprite </ code> (<code> ImageSprite </ code> 또는 <code> Ball </ code> 코드>)가 드래그되었습니다. 점, 선 및 원을 그리는 방법도 있습니다. </ p>

# Description:
CenterFromStringProperties = 중심좌표

# Description:
CenterFromStringPropertyDescriptions = <p>지도의 초기 중심 좌표를 설정합니다. 이 값은 쉼표로 구분 된 십진 위도 및 경도 좌표 쌍으로 지정됩니다 (예 : <code> 42.359144, -71.093612 </ code>). </ p> <p> 블록 코드에서는 성능상의 이유로 이 속성에 사용할 문자열 표현으로 변환하지 말고 숫자 위도 및 경도로 SetCenter를 사용하십시오. </ p>

# Description:
CenterMethodDescriptions = Returns the center of the Rectangle as a list of the form (Latitude Longitude).

# Description:
CenterMethods = 가운데

# Description:
CentroidMethodDescriptions = Returns the centroid of the Polygon as a (latitude, longitude) pair.

# Description:
CentroidMethods = 도심

# Description:
ChangedEventDescriptions = Default Changed event handler.

# Description:
ChangedEvents = 변경

# Description:
CharacterEncodingProperties = 문자인코딩

# Description:
CharacterEncodingPropertyDescriptions = 

# Description:
CheckAuthorizedMethodDescriptions = Checks whether we already have access, and if so, causes IsAuthorized event handler to be called.

# Description:
CheckAuthorizedMethods = 인증확인

# Description:
CheckBoxHelpStringComponentPallette = 체크 상자는 사용자 클릭에 따라 선택되거나 해제됩니다. 디자이너 또는 블록 에디터에서 모양을 다양하게 변경할 수 있습니다.

# Description:
CheckedProperties = 체크여부

# Description:
CheckedPropertyDescriptions = 

# Description:
ChoosingCanceledEventDescriptions = Event raised when the user canceled ShowChooseDialog.

# Description:
ChoosingCanceledEvents = 선택취소

# Description:
CircleHelpStringComponentPallette = 원형

# Description:
ClearAllMethodDescriptions = Clear the entire data store

# Description:
ClearAllMethods = 모두지우기

# Description:
ClearCachesMethodDescriptions = Clear WebView caches.

# Description:
ClearCachesMethods = 캐시지우기

# Description:
ClearCookiesMethodDescriptions = Clears all cookies for this Web component.

# Description:
ClearCookiesMethods = 쿠키데이터지우기

# Description:
ClearLocationsMethodDescriptions = Clear stored location permissions.

# Description:
ClearLocationsMethods = 위치정보지우기

# Description:
ClearMethodDescriptions = Clears anything drawn on this Canvas but not any background color or image.

# Description:
ClearMethods = 지우기

# Description:
ClearTagMethodDescriptions = Clear the entry with the given tag

# Description:
ClearTagMethods = 태그지우기

# Description:
ClickEventDescriptions = The user clicked on the feature.

# Description:
ClickEvents = 클릭했을때

# Description:
ClockHelpStringComponentPallette = <p> 휴대 전화의 내부 시계를 사용하여 시간을 즉시 제공하는 보이지 않는 구성 요소. 정기적으로 설정된 간격으로 타이머를 작동시키고 시간 계산, 조작 및 변환을 수행 할 수 있습니다. </ p> <p> 인스턴트를 텍스트로 변환하는 방법도 사용할 수 있습니다. 사용할 수있는 패턴은 빈 문자열, MM / DD / YYYY HH : mm : ss a 또는 MMM d, yyyyHH : mm입니다. 빈 문자열은 FormatDateTime \"MMM d, yyyy\"에 대해 \"MMM d, yyyy HH : mm : ss a\"라는 기본 형식을 제공합니다. 가능한 모든 형식을 보려면 <a href=\"https://docs.oracle.com/javase/7/docs/api/java/text/SimpleDateFormat.html\" _target=\"_blank\"> 여기 </a>를 참조하십시오. . </ p>

# Description:
CloseScreenAnimationMethods = 스크린닫기애니메이션

# Description:
CloseScreenAnimationProperties = 스크린애니메이션닫기

# Description:
CloseScreenAnimationPropertyDescriptions = The animation for closing current screen and returning to the previous screen. Valid options are default, fade, zoom, slidehorizontal, slidevertical, and none

# Description:
CloudConnectedMethodDescriptions = returns True if we are on the network and will likely be able to connect to the CloudDB server.

# Description:
CloudConnectedMethods = 클라우드연결여부

# Description:
CloudDBErrorEventDescriptions = Indicates that an error occurred while communicating with the CloudDB Redis server.

# Description:
CloudDBErrorEvents = 클라우드DB에오류가발생했을때

# Description:
CloudDBHelpStringComponentPallette = Non-visible component allowing you to store data on a Internet connected database server (using Redis software). This allows the users of your App to share data with each other. By default data will be stored in a server maintained by MIT, however you can setup and run your own server. Set the \"RedisServer\" property and \"RedisPort\" Property to access your own server.

# Description:
CollidedWithEventDescriptions = Handler for CollidedWith events, called when two sprites collide. Note that checking for collisions with a rotated ImageSprite currently checks against the sprite''s unrotated position. Therefore, collision checking will be inaccurate for tall narrow or short wide sprites that are rotated.

# Description:
CollidedWithEvents = 충돌했을때

# Description:
CollidingWithMethodDescriptions = Indicates whether a collision has been registered between this sprite and the passed sprite.

# Description:
CollidingWithMethods = 충돌여부

# Description:
ColorChangedEventDescriptions = Detected color has changed. The ColorChanged event will not occur if the DetectColor property is set to False or if the ColorChangedEventEnabled property is set to False.

# Description:
ColorChangedEventEnabledProperties = 색상변경이벤트활성화됨

# Description:
ColorChangedEventEnabledPropertyDescriptions = Whether the ColorChanged event should fire when the DetectColor property is set to True and the detected color changes.

# Description:
ColorChangedEvents = 색상이변경되었을때

# Description:
ColorLeftProperties = 왼쪽색생

# Description:
ColorLeftPropertyDescriptions = The color of slider to the left of the thumb.

# Description:
ColorRightProperties = 오른쪽색상

# Description:
ColorRightPropertyDescriptions = The color of slider to the left of the thumb.

# Description:
ColumnsProperties = 열

# Description:
ColumnsPropertyDescriptions = 

# Description:
CompletedEventDescriptions = Indicates that the video has reached the end

# Description:
CompletedEvents = 재생완료

# Description:
ConnectMethodDescriptions = Connect to the Bluetooth device with the specified address and the Serial Port Profile (SPP). Returns true if the connection was successful.

# Description:
ConnectMethods = 연결하기

# Description:
ConnectWithUUIDMethodDescriptions = Connect to the Bluetooth device with the specified address and UUID. Returns true if the connection was successful.

# Description:
ConnectWithUUIDMethods = UUID로연결하기

# Description:
ConnectionAcceptedEventDescriptions = Indicates that a bluetooth connection has been accepted.

# Description:
ConnectionAcceptedEvents = 연결되었을때

# Description:
ConsumerKeyProperties = 컨슈머키

# Description:
ConsumerKeyPropertyDescriptions = The the consumer key to be used when authorizing with Twitter via OAuth.

# Description:
ConsumerSecretProperties = 컨슈머시크릿

# Description:
ConsumerSecretPropertyDescriptions = The consumer secret to be used when authorizing with Twitter via OAuth

# Description:
ContactNameProperties = 연락처이름

# Description:
ContactNamePropertyDescriptions = 

# Description:
ContactPickerHelpStringComponentPallette = 클릭하면 클릭 할 연락처 목록이 표시됩니다. 사용자가 선택한 후 다음 속성이 선택한 연락처에 대한 정보로 설정됩니다. <ul> <li> <code> ContactName </ code> : 연락처의 이름 </ li> <li> code> EmailAddress </ code> : 연락처의 기본 이메일 주소 </ li> <li> <code> ContactUri </ code> : 기기의 연락처 URI </ li> <li> <code > EmailAddressList </ code> : 연락처의 이메일 주소 목록 </ li> <li> <code> PhoneNumber </ code> : 연락처의 기본 전화 번호 (나중에 Android Verisons에서) </ li> > <code> 전화 번호 목록 </ code> : 연락처의 전화 번호 목록 (최신 Android 버전) </ li> <li> <code> 그림 </ code> : 파일 이름 <code> Image </ code> 또는 <code> ImageSprite </ code> 구성 요소의 <code> Picture </ code> 속성 값으로 사용될 수 있습니다. 다른 속성은 버튼의 모양 (<code> TextAlignment </ code>, <code> BackgroundColor </ code> 등) 및 클릭 할 수 있는지 여부 (<code> > 사용함 </ co de>). </ p> <p> 모든 전화기에서 ContactPicker 구성 요소가 작동하지 않을 수 있습니다. 예를 들어 시스템 3.0 이전의 Android 시스템에서는 전화 번호를 선택할 수 없으며 전자 메일 주소 목록에는 하나의 전자 메일 만 포함됩니다.

# Description:
ContactUriProperties = 연락처URI

# Description:
ContactUriPropertyDescriptions = URI that specifies the location of the contact on the device.

# Description:
CountryProperties = 국가

# Description:
CountryPropertyDescriptions = Country code to use for speech generation. This can affect the pronounciation. For example, British English (GBR) will sound different from US English (USA). Not every country code will affect every language.

# Description:
CreateMarkerMethodDescriptions = Create a new marker with default properties at the specified latitude and longitude.

# Description:
CreateMarkerMethods = 마커만들기

# Description:
CurrentAddressProperties = 현재주소

# Description:
CurrentAddressPropertyDescriptions = 

# Description:
CurrentPageTitleProperties = 현재페이지제목

# Description:
CurrentPageTitlePropertyDescriptions = Title of the page currently viewed

# Description:
CurrentUrlProperties = 현재URL

# Description:
CurrentUrlPropertyDescriptions = URL of the page currently viewed. This could be different from the Home URL if new pages were visited by following links.

# Description:
DataChangedEventDescriptions = Indicates that the data in the Firebase has changed. Launches an event with the tag and value that have been updated.

# Description:
DataChangedEvents = 데이터가변경되었을때

# Description:
DataTypeProperties = 데이터타입

# Description:
DataTypePropertyDescriptions = 

# Description:
DataUriProperties = 데이터URI

# Description:
DataUriPropertyDescriptions = 

# Description:
DatePickerHelpStringComponentPallette = <p> 클릭하면 사용자가 날짜를 선택할 수있는 팝업 대화 상자가 실행됩니다. </ p>

# Description:
DayOfMonthMethodDescriptions = The day of the month

# Description:
DayOfMonthMethods = 날짜

# Description:
DayProperties = 날짜

# Description:
DayPropertyDescriptions = the Day of the month that was last picked using the DatePicker.

# Description:
DeAuthorizeMethodDescriptions = Removes Twitter authorization from this running app instance

# Description:
DeAuthorizeMethods = 권한승인취소

# Description:
DefaultRedisServerProperties = 기본레디스서버

# Description:
DefaultRedisServerPropertyDescriptions = The Default Redis Server to use.

# Description:
DefaultURLProperties = 기본URL

# Description:
DefaultURLPropertyDescriptions = 

# Description:
DeleteFileMethodDescriptions = Delete a file on the robot.

# Description:
DeleteFileMethods = 파일삭제

# Description:
DeleteMethodDescriptions = Performs an HTTP DELETE request using the Url property and retrieves the response. If the SaveResponse property is true, the response will be saved in a file and the GotFile event will be triggered. The ResponseFileName property can be used to specify the name of the file. If the SaveResponse property is false, the GotText event will be triggered.

# Description:
DeleteMethods = 삭제

# Description:
DelimiterByteProperties = 구분바이트

# Description:
DelimiterBytePropertyDescriptions = 

# Description:
DescriptionProperties = 설명

# Description:
DescriptionPropertyDescriptions = The description displayed in the info window that appears when the user clicks on the map feature.

# Description:
DetectColorProperties = 색상감지

# Description:
DetectColorPropertyDescriptions = Whether the sensor should detect color or light. True indicates that the sensor should detect color; False indicates that the sensor should detect light. If the DetectColor property is set to True, the BelowRange, WithinRange, and AboveRange events will not occur and the sensor will not generate color. If the DetectColor property is set to False, the ColorChanged event will not occur.

# Description:
DeveloperBucketProperties = 개발자버킷

# Description:
DeveloperBucketPropertyDescriptions = 

# Description:
DirectMessageMethodDescriptions = 이렇게하면 지정된 사용자에게 직접 (개인) 메시지가 전송됩니다. 메시지가 160자를 초과하면 자릅니다. <p> <u> 요구 사항 </ u> : 사용자가 트위터에 성공적으로 로그인했음을 나타내는 <code> IsAuthorized </ code> 이벤트가 발생한 후에 만 호출해야합니다. </ p>

# Description:
DirectMessageMethods = 쪽지

# Description:
DirectMessagesProperties = 쪽지리스트

# Description:
DirectMessagesPropertyDescriptions = 이 속성에는 로그인 한 사용자를 언급하는 가장 최근 메시지 목록이 포함됩니다. 처음에는 목록이 비어 있습니다. 이를 설정하려면 프로그램에서 <ol> <li> <code> Authorize </ code> 메서드를 호출해야합니다. </ li> <li> <code> Authorized </ code> <li> <code> DirectMessagesReceived </ code> 이벤트를 기다립니다. </ li> <li> <li> 검색된 직접 메시지 목록으로 설정하고 (<code> RequestDirectMessages </ code>에 대한 이후 호출이있을 때까지 해당 값을 유지 관리해야합니다).

# Description:
DirectMessagesReceivedEventDescriptions = 이 이벤트는 <code> RequestDirectMessages </ code>를 통해 요청 된 최근 메시지가 검색 될 때 발생합니다. 메시지 목록은 <code> messages </ code> 매개 변수 또는 <code> Messages </ code> 속성에서 찾을 수 있습니다.

# Description:
DirectMessagesReceivedEvents = 쪽지를받았을때

# Description:
DisconnectMethodDescriptions = Disconnect from the connected Bluetooth device.

# Description:
DisconnectMethods = 연결끊기

# Description:
DismissProgressDialogMethodDescriptions = Dismiss a previously displayed ProgressDialog box

# Description:
DismissProgressDialogMethods = 진행대화창종료

# Description:
DisplayDropdownMethodDescriptions = displays the dropdown list for selection, same action as when the user clicks on the spinner.

# Description:
DisplayDropdownMethods = 드롭다운표시

# Description:
DistanceIntervalProperties = 거리간격

# Description:
DistanceIntervalPropertyDescriptions = Determines the minimum distance interval, in meters, that the sensor will try to use for sending out location updates. For example, if this is set to 5, then the sensor will fire a LocationChanged event only after 5 meters have been traversed. However, the sensor does not guarantee that an update will be received at exactly the distance interval. It may take more than 5 meters to fire an event, for instance.

# Description:
DistanceProperties = 거리

# Description:
DistancePropertyDescriptions = Returns the distance from the object to the device

# Description:
DistanceToFeatureMethodDescriptions = Compute the distance, in meters, between two map features.

# Description:
DistanceToFeatureMethods = 도형까지거리계산하기

# Description:
DistanceToPointMethodDescriptions = Compute the distance, in meters, between a map feature and a latitude, longitude point.

# Description:
DistanceToPointMethods = 좌표까지거리계산하기

# Description:
DoQueryMethodDescriptions = DEPRECATED. This block is deprecated as of the end of 2012. Use SendQuery.

# Description:
DoQueryMethods = 쿼리하기

# Description:
DoScanMethodDescriptions = Begins a barcode scan, using the camera. When the scan is complete, the AfterScan event will be raised.

# Description:
DoScanMethods = 스캔하기

# Description:
DoubleTapAtPointEventDescriptions = The user double-tapped at a point on the map. This event will be followed by a ZoomChanged event if zooming gestures are enabled and the map is not at the highest possible zoom level.

# Description:
DoubleTapAtPointEvents = 더블탭했을때

# Description:
DownloadFileMethodDescriptions = Download a file to the robot.

# Description:
DownloadFileMethods = 파일다운로드

# Description:
DragEventDescriptions = The user dragged the map feature.

# Description:
DragEvents = 드래그했을때

# Description:
DraggableProperties = 드래그가능

# Description:
DraggablePropertyDescriptions = The Draggable property is used to set whether or not the user can drag the Marker by long-pressing and then dragging the marker to a new location.

# Description:
DraggedEventDescriptions = Handler for Dragged events. On all calls, the starting coordinates are where the screen was first touched, and the \"current\" coordinates describe the endpoint of the current line segment. On the first call within a given drag, the \"previous\" coordinates are the same as the starting coordinates; subsequently, they are the \"current\" coordinates from the prior call. Note that the Sprite won''t actually move anywhere in response to the Dragged event unless MoveTo is specifically called.

# Description:
DraggedEvents = 드래그했을때

# Description:
DrawCircleMethodDescriptions = Draw a circle on the screen.

# Description:
DrawCircleMethods = 원그리기

# Description:
DrawIconMethodDescriptions = Draw a built-in icon on screen.

# Description:
DrawIconMethods = 아이콘그리기

# Description:
DrawLineMethodDescriptions = Draw a line on the screen.

# Description:
DrawLineMethods = 선그리기

# Description:
DrawPointMethodDescriptions = Draw a point on the screen.

# Description:
DrawPointMethods = 점그리기

# Description:
DrawRectMethodDescriptions = Draw a rectangle on the screen.

# Description:
DrawRectMethods = 사각형그리기

# Description:
DrawTextAtAngleMethodDescriptions = Draws the specified text starting at the specified coordinates at the specified angle using the values of the FontSize and TextAlignment properties.

# Description:
DrawTextAtAngleMethods = 기울어진텍스트그리기

# Description:
DrawTextMethodDescriptions = Draws the specified text relative to the specified coordinates using the values of the FontSize and TextAlignment properties.

# Description:
DrawTextMethods = 글자쓰기

# Description:
DriveMotorsProperties = 드라이브모터

# Description:
DriveMotorsPropertyDescriptions = The motor ports that are used for driving: the left wheel''s motor port followed by the right wheel''s motor port.

# Description:
DurationMethodDescriptions = Milliseconds elapsed between instants

# Description:
DurationMethods = 기간

# Description:
DurationToDaysMethodDescriptions = convert duration to days

# Description:
DurationToDaysMethods = 기간을날짜로바꾸기

# Description:
DurationToHoursMethodDescriptions = 기간을 시간으로 바꾸기

# Description:
DurationToHoursMethods = 기간을시간으로바꾸기

# Description:
DurationToMinutesMethodDescriptions = convert duration to minutes

# Description:
DurationToMinutesMethods = 기간을분으로바꾸기

# Description:
DurationToSecondsMethodDescriptions = convert duration to seconds

# Description:
DurationToSecondsMethods = 기간을초로바꾸기

# Description:
DurationToWeeksMethodDescriptions = convert duration to weeks

# Description:
DurationToWeeksMethods = 기간을주로바꾸기

# Description:
EastLongitudeProperties = 동경

# Description:
EastLongitudePropertyDescriptions = 

# Description:
EdgeReachedEventDescriptions = Event handler called when the sprite reaches an edge of the screen. If Bounce is then called with that edge, the sprite will appear to bounce off of the edge it reached. Edge here is represented as an integer that indicates one of eight directions north(1), northeast(2), east(3), southeast(4), south (-1), southwest(-2), west(-3), and northwest(-4).

# Description:
EdgeReachedEvents = 모서리에닿았을때

# Description:
ElapsedTimeProperties = 지난시간

# Description:
ElapsedTimePropertyDescriptions = Time elapsed in milliseconds since the pedometer was started.

# Description:
ElementsFromStringProperties = 요소문자열

# Description:
ElementsFromStringPropertyDescriptions = sets the Spinner list to the elements passed in the comma-separated string

# Description:
ElementsProperties = 요소

# Description:
ElementsPropertyDescriptions = returns a list of text elements to be picked from.

# Description:
EmailAddressListProperties = 이메일주소리스트

# Description:
EmailAddressListPropertyDescriptions = 

# Description:
EmailAddressProperties = 이메일주소

# Description:
EmailAddressPropertyDescriptions = 

# Description:
EmailPickerHelpStringComponentPallette = EmailPicker는 텍스트 상자의 일종입니다. 사용자가 연락처의 이름이나 전자 메일 주소를 입력하기 시작하면 전화기는 항목을 완료하는 선택 항목의 드롭 다운 메뉴를 표시합니다. 많은 연락처가있는 경우 드롭 다운이 표시되기까지 몇 초가 걸릴 수 있으며 일치 항목이 계산되는 동안 중간 결과를 표시 할 수 있습니다. <p> 텍스트 상자의 초기 내용과 <after user 입력 내용은 <code> Text </ code> 속성에 있습니다. <code> Text </ code> 속성이 처음에 비어있는 경우 <code> Hint </ code> 속성의 내용이 텍스트 힌트로 희미하게 표시됩니다. </ p> <p> 다른 속성은 텍스트 상자 (<code> TextAlignment </ code>, <code> BackgroundColor </ code> 등)의 모양과 사용 가능 여부 (<code> 사용 </ code>)에 영향을줍니다. p> <p> 이와 같은 텍스트 상자는 일반적으로 <code> Button </ code> 구성 요소와 함께 사용되며 텍스트 입력이 완료되면 사용자가 버튼을 클릭합니다.

# Description:
EnableInfoboxProperties = 정보창보기

# Description:
EnableInfoboxPropertyDescriptions = Enable or disable the infobox window display when the user taps the feature.

# Description:
EnablePanProperties = 이동가능

# Description:
EnablePanPropertyDescriptions = Enable two-finger panning of the Map

# Description:
EnableRotationProperties = 회전가능

# Description:
EnableRotationPropertyDescriptions = If set to true, the user can use multitouch gestures to rotate the map around its current center.

# Description:
EnableSpeedRegulationProperties = 속도통제가능여부

# Description:
EnableSpeedRegulationPropertyDescriptions = The robot adjusts the power to maintain the speed if speed regulation is enabled.

# Description:
EnableZoomProperties = 줌가능

# Description:
EnableZoomPropertyDescriptions = If this property is set to true, multitouch zoom gestures are allowed on the map. Otherwise, the map zoom cannot be changed by the user except via the zoom control buttons.

# Description:
EnabledProperties = 활성화

# Description:
EnabledPropertyDescriptions = If set, user can tap check box to cause action.

# Description:
ErrorOccurredEventDescriptions = Event raised when an error occurs. Only some errors will raise this condition. For those errors, the system will show a notification by default. You can use this event handler to prescribe an error behavior different than the default.

# Description:
ErrorOccurredEvents = 오류가발생했을때

# Description:
Ev3ColorSensorHelpStringComponentPallette = A component that provides a high-level interface to a color sensor on a LEGO MINDSTORMS EV3 robot.

# Description:
Ev3CommandsHelpStringComponentPallette = A component that provides a low-level interface to a LEGO MINDSTORMS EV3 robot, with functions to send system or direct commands to EV3 robots.

# Description:
Ev3GyroSensorHelpStringComponentPallette = A component that provides a high-level interface to a gyro sensor on a LEGO MINDSTORMS EV3 robot.

# Description:
Ev3MotorsHelpStringComponentPallette = A component that provides both high- and low-level interfaces to a LEGO MINDSTORMS EV3 robot, with functions that can control the motors.

# Description:
Ev3SoundHelpStringComponentPallette = A component that provides a high-level interface to sound functionalities on LEGO MINDSTORMS EV3 robot.

# Description:
Ev3TouchSensorHelpStringComponentPallette = A component that provides a high-level interface to a touch sensor on a LEGO MINDSTORMS EV3 robot.

# Description:
Ev3UIHelpStringComponentPallette = A component that provides a high-level interface to a LEGO MINDSTORMS EV3 robot, with functions to draw graphs on EV3 screen.

# Description:
Ev3UltrasonicSensorHelpStringComponentPallette = A component that provides a high-level interface to an ultrasonic sensor on a LEGO MINDSTORMS EV3 robot.

# Description:
ExtraKeyProperties = 추가키

# Description:
ExtraKeyPropertyDescriptions = Returns the extra key that will be passed to the activity.DEPRECATED: New code should use Extras property instead.

# Description:
ExtraValueProperties = 추가값

# Description:
ExtraValuePropertyDescriptions = Returns the extra value that will be passed to the activity.DEPRECATED: New code should use Extras property instead.

# Description:
ExtrasProperties = 부가데이터

# Description:
ExtrasPropertyDescriptions = 

# Description:
FeatureClickEventDescriptions = The user clicked on a map feature.

# Description:
FeatureClickEvents = 도형을클릭했을때

# Description:
FeatureCollectionHelpStringComponentPallette = A FeatureColletion contains one or more map features as a group. Any events fired on a feature in the collection will also trigger the corresponding event on the collection object. FeatureCollections can be loaded from external resources as a means of populating a Map with content.

# Description:
FeatureDragEventDescriptions = The user dragged a map feature.

# Description:
FeatureDragEvents = 도형을드래그했을때

# Description:
FeatureFromDescriptionMethodDescriptions = Convert a feature description into an App Inventor map feature. Currently the only supported conversion is from a GeoJSON point to Marker component. If the feature has properties, they will be mapped into App Inventor properties using the following mapping: description becomes Description; draggable becomes Draggable; infobox becomes EnableInfobox; fill becomes FillColor; image becomes ImageAsset; stroke becomes StrokeColor; stroke-width becomes StrokeWidth; title becomes Title; visible becomes Visible

# Description:
FeatureFromDescriptionMethods = FeatureFromDescription

# Description:
FeatureLongClickEventDescriptions = The user long-pressed on a map feature.

# Description:
FeatureLongClickEvents = 도형을길게클릭했을때

# Description:
FeatureStartDragEventDescriptions = The user started dragging a map feature.

# Description:
FeatureStartDragEvents = 도형드래그를시작할때

# Description:
FeatureStopDragEventDescriptions = The user stopped dragging a map feature.

# Description:
FeatureStopDragEvents = 도형드래그를멈출때

# Description:
FeaturesFromGeoJSONProperties = GeoJSON에서가져온도형

# Description:
FeaturesFromGeoJSONPropertyDescriptions = Loads a collection of features from the given string. If the string is not valid GeoJSON, the ErrorLoadingFeatureCollection error will be run with url = .

# Description:
FeaturesProperties = 도형

# Description:
FeaturesPropertyDescriptions = The list of features placed on this map. This list also includes any features created by calls to FeatureFromDescription

# Description:
FileHelpStringComponentPallette = 파일을 저장하고 검색하는데 사용하는 숨겨진 컴포넌트입니다. 이 컴포넌트는 기기에 파일을 쓰거나 읽을 때 사용하세요. 기본 기능은 앱의 비공개 데이터 공간에 파일을 쓰는 것입니다. 컴패니언은 특별히 디버깅을 수행하기 위해 /sdcard/AppInventor/data에 파일을 씁니다. 만약 파일 경로가 슬래쉬 (/)로 시작한다면, /sdcard 아래의 상대 경로로 파일이 만들어집니다. 예를들어 파일을 /myFile.txt 에 쓴다면 실제로는 /sdcard/myFile.txt 에 파일을 쓰게 됩니다.

# Description:
FillColorProperties = 채우기색상

# Description:
FillColorPropertyDescriptions = The paint color used to fill in the map feature.

# Description:
FillScreenMethodDescriptions = Fill the screen with a color.

# Description:
FillScreenMethods = 색상채우기

# Description:
FirebaseDBHelpStringComponentPallette = Non-visible component that communicates with Firebase to store and retrieve information.

# Description:
FirebaseErrorEventDescriptions = Indicates that the communication with the Firebase signaled an error.

# Description:
FirebaseErrorEvents = 파이어베이스에오류가발생했을때

# Description:
FirebaseTokenProperties = 파이어베이스토큰

# Description:
FirebaseTokenPropertyDescriptions = 

# Description:
FirebaseURLProperties = 파이어베이스URL

# Description:
FirebaseURLPropertyDescriptions = Gets the URL for this FirebaseDB.

# Description:
FirstRemovedEventDescriptions = \"RemoveFirst\"기능에 의해 트리거되는 이벤트. 인수 \"value\"는 목록에서 첫 번째로 제거 된 개체입니다.

# Description:
FirstRemovedEvents = 첫번째값이삭제됐을때

# Description:
FlungEventDescriptions = When a fling gesture (quick swipe) is made on the sprite: provides the (x,y) position of the start of the fling, relative to the upper left of the canvas. Also provides the speed (pixels per millisecond) and heading (0-360 degrees) of the fling, as well as the x velocity and y velocity components of the fling''s vector.

# Description:
FlungEvents = 플링했을때

# Description:
FollowLinksProperties = 링크따라가기여부

# Description:
FollowLinksPropertyDescriptions = Determines whether to follow links when they are tapped in the WebViewer. If you follow links, you can use GoBack and GoForward to navigate the browser history.

# Description:
FollowMethodDescriptions = Starts following a user.

# Description:
FollowMethods = 팔로우

# Description:
FollowersProperties = 팔로워

# Description:
FollowersPropertyDescriptions = 이 속성에는 로그인 한 사용자의 팔로워 목록이 포함됩니다. 처음에는 목록이 비어 있습니다. 이를 설정하려면 프로그램에서 <ol> <li> <code> Authorize </ code> 메소드를 호출하십시오. </ li> <li> <code> IsAuthorized </ code> <li> <code> RequestFollowers </ code> 메소드를 호출하십시오. </ li> <li> <code> FollowersReceived </ code> 이벤트를 기다립니다. </ li> </ ol> (<code> RequestFollowers </ code>를 호출 할 때까지 그 값을 유지하십시오).

# Description:
FollowersReceivedEventDescriptions = 이 이벤트는 <code> RequestFollowers </ code>를 통해 요청 된 로그인 사용자의 모든 팔로워가 검색 될 때 발생합니다. 팔로어 목록은 <code> followers </ code> 매개 변수 또는 <code> Followers </ code> 속성에서 찾을 수 있습니다.

# Description:
FollowersReceivedEvents = 팔로워받음

# Description:
FontBoldProperties = 글꼴굵게

# Description:
FontBoldPropertyDescriptions = If set, button text is displayed in bold.

# Description:
FontItalicProperties = 글꼴이텔릭

# Description:
FontItalicPropertyDescriptions = If set, button text is displayed in italics.

# Description:
FontSizeProperties = 글꼴크기

# Description:
FontSizePropertyDescriptions = Point size for button text.

# Description:
FontTypefaceProperties = 글꼴서체

# Description:
FontTypefacePropertyDescriptions = Font family for button text.

# Description:
ForgetLoginMethodDescriptions = Forget end-users login credentials. Has no effect on service authentication

# Description:
ForgetLoginMethods = 로그인지우기

# Description:
FormHelpStringComponentPallette = 프로그램의 모든 구성요소를 포함하는 Top-level 구성요소

# Description:
FormatDateMethodDescriptions = Text representing the date of an instant in the specified pattern

# Description:
FormatDateMethods = 날짜형식

# Description:
FormatDateTimeMethodDescriptions = Text representing the date and time of an instant in the specified pattern

# Description:
FormatDateTimeMethods = 날짜시간형식

# Description:
FormatTimeMethodDescriptions = Text representing the time of an instant

# Description:
FormatTimeMethods = 시간형식

# Description:
FriendTimelineProperties = 친구타임라인

# Description:
FriendTimelinePropertyDescriptions = 이 속성에는 사용자가 가장 최근에 보낸 20 개의 메시지가 포함됩니다. 처음에는 목록이 비어 있습니다. 이를 설정하려면 프로그램에서 <ol> <li> <code> Authorize </ code> 메소드를 호출하십시오. </ li> <li> <code> IsAuthorized </ code> <li> 사용자가 <code> 따르기 </ code> 메소드를 한 번 이상 호출하도록 지정합니다. </ li> <li> <code> RequestFriendTimeline </ code> 메소드를 호출하십시오. </ li> 이 프로퍼티의 값은 메시지 목록으로 설정 될 것입니다 (그리고 <code> RequestFriendTimeline </ code> 이벤트가 발생할 때까지 그 값을 유지합니다). </ li> / code>.

# Description:
FriendTimelineReceivedEventDescriptions = 이 이벤트는 <code> RequestFriendTimeline </ code>을 통해 요청 된 메시지가 검색 될 때 발생합니다. <code> timeline </ code> 매개 변수와 <code> Timeline </ code> 속성에는 목록의 목록이 포함됩니다. 각 하위 목록에는 양식의 상태 업데이트 (username message)

# Description:
FriendTimelineReceivedEvents = 친구타임라인받음

# Description:
FullScreenProperties = 전체화면

# Description:
FullScreenPropertyDescriptions = 

# Description:
FunctionCompletedEventDescriptions = Indicates that a function call completed.

# Description:
FunctionCompletedEvents = 함수완료됨

# Description:
FusionTablesDeprecated = 경고 : Google은 Fusion Tables 서비스를 더 이상 사용하지 않습니다. 2019 년 12 월 3 일에 작업을 중단합니다. <a href=\"https://support.google.com/fusiontables/answer/9185417\" target=\"_blank\"> 자세히 알아보기 </a>

# Description:
FusionTablesStandardErrorMessage = Error on Fusion Tables query

# Description:
FusiontablesControlHelpStringComponentPallette = <p> Google Fusion Tables와 통신하는 보이지 않는 구성 요소입니다. Fusion Tables를 사용하면 데이터 테이블을 저장, 공유, 쿼리 및 시각화 할 수 있습니다. 이 구성 요소를 사용하면이 테이블을 쿼리하고 만들고 수정할 수 있습니다. </ p> <p>이 구성 요소는 <a href = \"https://developers.google.com/fusiontables/docs/v2/getting_started\"target = \" _blank \"> Fusion Tables API V2.0 </a>을 참조하십시오. <p> Fusion Tables를 사용하는 애플리케이션은 Google의 서버 인증을 받아야합니다. 이 작업을 수행하는 데는 두 가지 방법이 있습니다. 첫 번째 방법은 개발자가 획득 한 API 키를 사용합니다 (아래 참조). 이 방법을 사용하면 최종 사용자는 Fusion Table에 액세스하기 위해 로그인해야합니다. 두 번째 방법은 서비스 계정을 사용하는 것입니다. 이 방법을 사용하면 <a href=\"https://code.google.com/apis/console/\" target=\"_blank\"> Google API 콘솔 </ code>에서 제공하는 자격 증명과 특별한 \"서비스 계정 전자 메일 주소\" / a>. 그런 다음 Fusion Table Control에 서비스 계정 전자 메일 주소의 이름을 말하고 응용 프로그램에 비밀 키를 자산으로 업로드하고이 파일을 가리 키도록 KeyFile 속성을 설정합니다. 마지막으로 디자이너의 UseServiceAuthentication 체크 박스를 체크합니다. 서비스 계정을 사용할 때 최종 사용자는 Fusion Tables를 사용하기 위해 로그인 할 필요가 없으며 서비스 계정은 모든 액세스를 인증합니다. </ p> <p> API 키를 받으려면 다음 지침을 따르십시오. </ p> <ol> <li> <a href=\"https://code.google.com/apis/console/\" target=\"_blank\"> Google API 콘솔 </a>로 이동하여 필요한 경우 로그인하십시오. </ li> <li > 왼쪽 메뉴에서 <i> 서비스 </ i> 항목을 선택하십시오. </ li> <li> 제공된 목록에서 <i> 퓨전 테이블 </ i> 서비스를 선택하고 켭니다. </ li> <li> 기본 메뉴로 돌아가 <i> API 액세스 </ i> 항목을 선택하십시오. </ li> </ ol> <p> 귀하의 API 키는 \"Simple API Access\"섹션에서 해당 창 하단에 있습니다.이 키를 <i> ApiKey </ i> i> 속성을 호출합니다. </ p> <p> API 키가 있으면 <i> Query </ i> 속성 값을 유효한 Fusiontables SQL 쿼리로 설정하고 <i> SendQuery </ i> i> 쿼리를 실행합니다. App Inventor가 Fusion Tables 서버에 쿼리를 보내고 결과가 서버에서 반환되면 <i> GotResult </ i> 블록이 실행됩니다. 쿼리 결과는 CSV 형식으로 반환되며 다음을 사용하여 목록 형식으로 변환 할 수 있습니다. \"csv 테이블의 목록\"또는 \"csv 행의 목록\"차단. </ p> <p> 쿼리를 UTF 인코딩하는 것에 대해 걱정할 필요가 없습니다. 그러나 검색어가 <a href=\"https://developers.google.com/fusiontables/docs/v2/getting_started\" target=\"_blank\"> 참조 설명서 </a>에 설명 된 구문을 따르는 지 확인해야합니다. 이는 열 이름의 대문자 사용과 같은 것이 중요하다는 것을 의미하며 열 이름에 공백이 있으면 작은 따옴표를 사용해야합니다. </ p>

# Description:
GPSAvailableEventDescriptions = Event for GPSAvailable

# Description:
GPSAvailableEvents = GPS가사용가능할때

# Description:
GPSLostEventDescriptions = Event for GPSLost

# Description:
GPSLostEvents = GPS연결이끊겼을때

# Description:
GameClientHelpStringComponentPallette = 어플리케이션에 온라인 게임 서버와 통신할 수 있는 방법을 제공합니다

# Description:
GameIdProperties = 게임아이디

# Description:
GameIdPropertyDescriptions = The game name for this application. The same game ID can have one or more game instances.

# Description:
GenerateColorProperties = 색상만들기

# Description:
GenerateColorPropertyDescriptions = The color that should generated by the sensor. Only None, Red, Green, or Blue are valid values. The sensor will not generate color when the DetectColor property is set to True.

# Description:
GenerateLightProperties = 빛만들기

# Description:
GenerateLightPropertyDescriptions = Whether the light sensor should generate light.

# Description:
GetBackgroundPixelColorMethodDescriptions = Gets the color of the specified point. This includes the background and any drawn points, lines, or circles but not sprites.

# Description:
GetBackgroundPixelColorMethods = 배경픽셀색상가져오기

# Description:
GetBatteryCurrentMethodDescriptions = Get the battery current.

# Description:
GetBatteryCurrentMethods = 배터리전류가져오기

# Description:
GetBatteryLevelMethodDescriptions = Get the battery level for the robot. Returns the voltage in millivolts.

# Description:
GetBatteryLevelMethods = 배터리수준

# Description:
GetBatteryVoltageMethodDescriptions = Get the battery voltage.

# Description:
GetBatteryVoltageMethods = 배터리전압가져오기

# Description:
GetBrickNameMethodDescriptions = Get the brick name of the robot.

# Description:
GetBrickNameMethods = 브릭이름가져오기

# Description:
GetColorCodeMethodDescriptions = It returns the color code from 0 to 7 corresponding to no color, black, blue, green, yellow, red, white and brown.

# Description:
GetColorCodeMethods = 색상코드가져오기

# Description:
GetColorMethodDescriptions = Returns the current detected color, or the color None if the color can not be read or if the DetectColor property is set to False.

# Description:
GetColorMethods = 색상가져오기

# Description:
GetColorNameMethodDescriptions = \"No Color\", \"Black\", \"Blue\", \"Green\", \"Yellow\", \"Red\", \"White\", \"Brown\"중 하나의 색상 이름을 반환합니다.

# Description:
GetColorNameMethods = 색상이름가져오기

# Description:
GetCurrentProgramNameMethodDescriptions = Get the name of currently running program on the robot.

# Description:
GetCurrentProgramNameMethods = 현재프로그램이름가져오기

# Description:
GetDistanceMethodDescriptions = Returns the current distance in centimeters as a value between 0 and 254, or -1 if the distance can not be read.

# Description:
GetDistanceMethods = 거리가져오기

# Description:
GetDurationMethodDescriptions = Returns duration of the video in milliseconds.

# Description:
GetDurationMethods = 재생시간가져오기

# Description:
GetFirmwareBuildMethodDescriptions = Get the firmware build on EV3.

# Description:
GetFirmwareBuildMethods = 펌웨어빌드가져오기

# Description:
GetFirmwareVersionMethodDescriptions = Get the firmware and protocol version numbers for the robot as a list where the first element is the firmware version number and the second element is the protocol version number.

# Description:
GetFirmwareVersionMethods = 펌웨어버전가져오기

# Description:
GetHardwareVersionMethodDescriptions = Get the hardware version of EV3.

# Description:
GetHardwareVersionMethods = 하드웨어버전가져오기

# Description:
GetInputValuesMethodDescriptions = Reads the values of an input sensor on the robot. Assumes sensor type has been configured via SetInputMode.

# Description:
GetInputValuesMethods = 입력값가져오기

# Description:
GetInstallerMethodDescriptions = Return the app that installed us

# Description:
GetInstallerMethods = 설치가져오기

# Description:
GetInstanceListsMethodDescriptions = Updates the InstancesJoined and InstancesInvited lists. This procedure can be called before setting the InstanceId.

# Description:
GetInstanceListsMethods = 인스턴스리스트가져오기

# Description:
GetLightLevelMethodDescriptions = Returns the current light level as a value between 0 and 1023, or -1 if the light level can not be read.

# Description:
GetLightLevelMethods = 밝기레벨가져오기

# Description:
GetMessagesMethodDescriptions = Retrieves messages of the specified type.

# Description:
GetMessagesMethods = 메시지리스트가져오기

# Description:
GetMethodDescriptions = Performs an HTTP GET request using the Url property and retrieves the response. If the SaveResponse property is true, the response will be saved in a file and the GotFile event will be triggered. The ResponseFileName property can be used to specify the name of the file. If the SaveResponse property is false, the GotText event will be triggered.

# Description:
GetMethods = 가져오기

# Description:
GetMillisMethodDescriptions = The instant in time measured as milliseconds since 1970.

# Description:
GetMillisMethods = 밀리초가져오기

# Description:
GetOSBuildMethodDescriptions = Get the OS build on EV3.

# Description:
GetOSBuildMethods = OS빌드가져오기

# Description:
GetOSVersionMethodDescriptions = Get the OS version on EV3.

# Description:
GetOSVersionMethods = OS버전가져오기

# Description:
GetOutputStateMethodDescriptions = Reads the output state of a motor on the robot.

# Description:
GetOutputStateMethods = 출력상태가져오기

# Description:
GetPixelColorMethodDescriptions = Gets the color of the specified point.

# Description:
GetPixelColorMethods = 픽셀색상가져오기

# Description:
GetRowsMethodDescriptions = Gets all the rows from a specified fusion table. The tableId field is the id of therequired fusion table. The columns field is a comma-separeted list of the columns to retrieve.

# Description:
GetRowsMethods = 행리스트가져오기

# Description:
GetRowsWithConditionsMethodDescriptions = Gets all the rows from a fusion table that meet certain conditions. The tableId field isthe id of the required fusion table. The columns field is a comma-separeted list of the columns toretrieve. The conditions field specifies what rows to retrieve from the table, for example the rows in whicha particular column value is not null.

# Description:
GetRowsWithConditionsMethods = 조건에해당하는행리스트가져오기

# Description:
GetSensorValueMethodDescriptions = Returns the current angle or rotation speed based on current mode, or -1 if the value cannot be read from sensor.

# Description:
GetSensorValueMethods = 센서값가져오기

# Description:
GetSoundLevelMethodDescriptions = Returns the current sound level as a value between 0 and 1023, or -1 if the sound level can not be read.

# Description:
GetSoundLevelMethods = 소리수준가져오기

# Description:
GetTachoCountMethodDescriptions = Get the current tacho count.

# Description:
GetTachoCountMethods = 타코카운트가져오기

# Description:
GetTagListMethodDescriptions = Get the list of tags for this application. When complete a \"TagList\" event will be triggered with the list of known tags.

# Description:
GetTagListMethods = 태그리스트가져오기

# Description:
GetTagsMethodDescriptions = Return a list of all the tags in the data store

# Description:
GetTagsMethods = 태그리스트가져오기

# Description:
GetTextMethodDescriptions = Solicits speech input from the user. After the speech is converted to text, the AfterGettingText event will be raised.

# Description:
GetTextMethods = 텍스트가져오기

# Description:
GetValueMethodDescriptions = GetValue asks the Web service to get the value stored under the given tag. It is up to the Web service what to return if there is no value stored under the tag. This component just accepts whatever is returned.

# Description:
GetValueMethods = 값가져오기

# Description:
GetVersionNameMethodDescriptions = Return the our VersionName property

# Description:
GetVersionNameMethods = 버전이름가져오기

# Description:
GetWifiIpAddressMethodDescriptions = Returns the IP address of the phone in the form of a String

# Description:
GetWifiIpAddressMethods = WifiIP주소가져오기

# Description:
GoBackMethodDescriptions = Go back to the previous page in the history list. Does nothing if there is no previous page.

# Description:
GoBackMethods = 뒤로가기

# Description:
GoForwardMethodDescriptions = Go forward to the next page in the history list. Does nothing if there is no next page.

# Description:
GoForwardMethods = 앞으로가기

# Description:
GoHomeMethodDescriptions = Loads the home URL page. This happens automatically when the home URL is changed.

# Description:
GoHomeMethods = 홈페이지로이동

# Description:
GoToUrlMethodDescriptions = Load the page at the given URL.

# Description:
GoToUrlMethods = URL로이동

# Description:
GoogleVoiceEnabledProperties = 구글보이스활성화여부

# Description:
GoogleVoiceEnabledPropertyDescriptions = If true, then SendMessage will attempt to send messages over Wifi using Google Voice. This requires that the Google Voice app must be installed and set up on the phone or tablet, with a Google Voice account. If GoogleVoiceEnabled is false, the device must have phone and texting service in order to send or receive messages with this component.

# Description:
GotBallotConfirmationEventDescriptions = Event confirming that the Voting service received the ballot.

# Description:
GotBallotConfirmationEvents = 투표확인받음

# Description:
GotBallotEventDescriptions = 웹 서비스에서 투표가 검색되었으며 <code> BallotQuestion </ code> 및 <code> BallotOptions </ code> 속성이 설정되었음을 나타내는 이벤트입니다. 항상 메소드 <code> RequestBallot </ code>을 호출합니다.

# Description:
GotBallotEvents = 투표받았을때

# Description:
GotFeaturesEventDescriptions = A GeoJSON document was successfully read from url. The features specified in the document are provided as a list in features.

# Description:
GotFeaturesEvents = 도형을얻었을때

# Description:
GotFileEventDescriptions = Event indicating that a request has finished.

# Description:
GotFileEvents = 파일을받았을때

# Description:
GotFocusEventDescriptions = Indicates the cursor moved over the button so it is now possible to click it.

# Description:
GotFocusEvents = 포커스를받았을때

# Description:
GotMessageEventDescriptions = Indicates that a new message has been received.

# Description:
GotMessageEvents = 메시지를받았을때

# Description:
GotResultEventDescriptions = Indicates that the Fusion Tables query has finished processing, with a result. The result of the query will generally be returned in CSV format, and can be converted to list format using the \"list from csv table\" or \"list from csv row\" blocks.

# Description:
GotResultEvents = 결과를받았을때

# Description:
GotTextEventDescriptions = Event indicating that a request has finished.

# Description:
GotTextEvents = 텍스트를받았을때

# Description:
GotTranslationEventDescriptions = Event triggered when the Yandex.Translate service returns the translated text. This event also provides a response code for error handling. If the responseCode is not 200, then something went wrong with the call, and the translation will not be available.

# Description:
GotTranslationEvents = 번역을받았을때

# Description:
GotValueEventDescriptions = Indicates that a GetValue server request has succeeded.

# Description:
GotValueEvents = 값을받았을때

# Description:
GyroscopeChangedEventDescriptions = Indicates that the gyroscope sensor data has changed. The timestamp parameter is the time in nanoseconds at which the event occurred.

# Description:
GyroscopeChangedEvents = 자이로스코프가변경되었을때

# Description:
GyroscopeSensorHelpStringComponentPallette = <p> 1 초당도 단위로 3 차원의 각속도를 측정 할 수있는 보이지 않는 구성 요소 </ p> <p> 작동하려면 구성 요소의 <code> 사용 </ code> 속성이 사실, 장치에는 자이로 스코프 센서가 있어야합니다. </ p>

# Description:
HTMLFormatProperties = HTML형식

# Description:
HTMLFormatPropertyDescriptions = If true, then this label will show html text else it will show plain text. Note: Not all HTML is supported.

# Description:
HasAccuracyProperties = 정확도확인가능

# Description:
HasAccuracyPropertyDescriptions = 

# Description:
HasAltitudeProperties = 고도확인가능

# Description:
HasAltitudePropertyDescriptions = 

# Description:
HasLongitudeLatitudeProperties = 위도경도확인가능

# Description:
HasLongitudeLatitudePropertyDescriptions = 

# Description:
HasMarginsProperties = 마진유무

# Description:
HasMarginsPropertyDescriptions = Reports whether or not the label appears with margins. All four margins (left, right, top, bottom) are the same. This property has no effect in the designer, where labels are always shown with margins.

# Description:
HeadingProperties = 방향

# Description:
HeadingPropertyDescriptions = Returns the sprite''s heading in degrees above the positive x-axis. Zero degrees is toward the right of the screen; 90 degrees is toward the top of the screen.

# Description:
HeightPercentProperties = 높이비율

# Description:
HeightPercentPropertyDescriptions = 

# Description:
HeightProperties = 높이

# Description:
HeightPropertyDescriptions = 

# Description:
HideInfoboxMethodDescriptions = Hide the infobox if it is shown. If the infobox is not visible this function has no effect.

# Description:
HideInfoboxMethods = 정보창숨기기

# Description:
HideKeyboardMethodDescriptions = Hide the keyboard. Only multiline text boxes need this. Single line text boxes close the keyboard when the users presses the Done key.

# Description:
HideKeyboardMethods = 키보드화면숨기기

# Description:
HighByteFirstProperties = 높은바이트우선여부

# Description:
HighByteFirstPropertyDescriptions = 

# Description:
HintProperties = 힌트

# Description:
HintPropertyDescriptions = 사용자가 입력해야 할 내용에 대한 힌트를 제공하기 위해 입력 상자에 희미하게 표시되어야하는 텍스트입니다. 이것은 <code> Text </ code> 속성이 비어있는 경우에만 볼 수 있습니다.

# Description:
HolePointsFromStringProperties = 문자열에서홀좌표

# Description:
HolePointsFromStringPropertyDescriptions = Constructs holes in a polygon from a given list of coordinates per hole.

# Description:
HolePointsProperties = 홀좌표

# Description:
HolePointsPropertyDescriptions = 

# Description:
HomeUrlProperties = 홈URL

# Description:
HomeUrlPropertyDescriptions = URL of the page the WebViewer should initially open to. Setting this will load the page.

# Description:
HorizontalArrangementHelpStringComponentPallette = <p> 왼쪽에서 오른쪽으로 표시되어야하는 구성 요소를 배치 할 형식 지정 요소입니다. 구성 요소가 서로 표시되도록하려면 대신 <code> VerticalArrangement </ code>를 사용하십시오. </ p>

# Description:
HorizontalScrollArrangementHelpStringComponentPallette = <p> 왼쪽에서 오른쪽으로 표시되어야하는 구성 요소를 배치 할 형식 지정 요소입니다. 구성 요소를 하나씩 표시하려면 <code> VerticalArrangement </ code>를 사용하십시오. </ p> <p>이 버전은 스크롤 할 수 있습니다.

# Description:
HourMethodDescriptions = The hour of the day

# Description:
HourMethods = 시간가져오기

# Description:
HourProperties = 시간

# Description:
HourPropertyDescriptions = The hour of the last time set using the time picker. The hour is in a 24 hour format. If the last time set was 11:53 pm, this property will return 23.

# Description:
HtmlTextDecodeMethodDescriptions = 지정된 HTML 텍스트 값을 디코딩합니다. & amp;, & amp; & amp;, & amp; 및 & quot;와 같은 HTML 문자 엔티티는, & amp; & gt ;, & gt; & # 39; \"로 변경된다. & amp; #xhhhh 및 & amp; #nnnn과 같은 엔티티가 해당 문자로 변경됩니다.

# Description:
HtmlTextDecodeMethods = Html텍스트디코딩

# Description:
IconProperties = 아이콘

# Description:
IconPropertyDescriptions = 

# Description:
IgnoreSslErrorsProperties = SSL오류무시

# Description:
IgnoreSslErrorsPropertyDescriptions = Determine whether or not to ignore SSL errors. Set to true to ignore errors. Use this to accept self signed certificates from websites.

# Description:
ImageAssetProperties = 이미지

# Description:
ImageAssetPropertyDescriptions = The ImageAsset property is used to provide an alternative image for the Marker.

# Description:
ImageHelpStringComponentPallette = 이미지를 보여주기 위한 컴포넌트입니다. 보여줄 사진이나 이미지의 모양은 디자이너 또는 블록 에디터에서 지정할 수 있습니다.

# Description:
ImagePickerHelpStringComponentPallette = 이미지 선택은 특수 버튼입니다. 사용자가 이미지 선택을 누르면, 기기의 갤러리가 실행되고 원하는 이미지를 선택할 수 있습니다. 이미지를 선택한 다음, SD카드에 저장되고 이미지 파일 속성에 이미지 파일 이름이 지정됩니다. 용량이 넘치지 않도록 최대 10개까지 저장됩니다. 더 많은 이미지를 선택하면 이전 이미지들은 삭제되고 새로운 이미지가 저장됩니다.

# Description:
ImageProperties = 이미지

# Description:
ImagePropertyDescriptions = Specifies the path of the component''s image. If there is both an Image and a BackgroundColor, only the Image will be visible.

# Description:
ImageSpriteHelpStringComponentPallette = <code> 캔버스 </ code>에 배치 할 수있는 \"스프라이트\"는 터치 및 드래그에 반응하고 다른 스프라이트와 상호 작용합니다 (<code> Ball </ code> code> ImageSprite </ code>)와 캔버스의 가장자리를 드래그하고 속성 값에 따라 이동하십시오. 외관은 <code> Visible </ code> 속성이 <code> False </ code>가 아닌 한 <code> Picture </ code> 속성에 지정된 이미지의 모양입니다. </ p> <p> <code> ImageSprite </ code>는 1000 밀리 초 (1 초)마다 10 픽셀 왼쪽으로 이동합니다. 예를 들어 <code> Speed </ code> 속성을 10 [pixels]로 설정하면 <code> <code> Heading </ code> 속성을 180 [degrees]로 설정하고 <code> Enabled </ code> 속성을 <code> True </ code>로 설정하십시오. <code> Rotates </ code> 속성이 <code> True </ code> 인 이미지는 스프라이트의 <code> Heading </ code> 변경으로 이미지를 회전시킨다. 회전하지 않는 넓은 스프라이트에 대해 충돌 검사가 부정확해질 수 있습니다. 스프라이트 속성은 프로그램 제어 하에서 언제든지 변경할 수 있습니다. </ p>

# Description:
IncomingCallAnsweredEventDescriptions = Event indicating that an incoming phone call is answered. phoneNumber is the incoming call phone number.

# Description:
IncomingCallAnsweredEvents = 걸려오는전화를받았을때

# Description:
InfoEventDescriptions = Indicates that something has occurred which the player should know about.

# Description:
InfoEvents = 정보

# Description:
InitializeEventDescriptions = Screen starting

# Description:
InitializeEvents = 초기화되었을때

# Description:
InsertRowMethodDescriptions = Inserts a row into the specified fusion table. The tableId field is the id of thefusion table. The columns is a comma-separated list of the columns to insert values into. The values field specifies what values to insert into each column.

# Description:
InsertRowMethods = 행삽입하기

# Description:
InstanceIdChangedEventDescriptions = Indicates that the InstanceId property has changed as a result of calling MakeNewInstance or SetInstance.

# Description:
InstanceIdChangedEvents = 인스턴스아이디변경되었을때

# Description:
InstanceIdProperties = 인스턴스아이디

# Description:
InstanceIdPropertyDescriptions = The game instance id. Taken together,the game ID and the instance ID uniquely identify the game.

# Description:
InstantInTimeParams = 시간인스턴트

# Description:
InstantMethods = 인스턴트

# Description:
InstantProperties = 인스턴트

# Description:
InstantPropertyDescriptions = The instant of the last time set using the time picker

# Description:
IntervalProperties = 시간간격

# Description:
IntervalPropertyDescriptions = The interval in milliseconds at which the sprite''s position is updated. For example, if the interval is 50 and the speed is 10, then the sprite will move 10 pixels every 50 milliseconds.

# Description:
InvalidPointEventDescriptions = An invalid coordinate was supplied during a maps operation. The message parameter will have more details about the issue.

# Description:
InvalidPointEvents = 잘못된좌표일때

# Description:
InviteMethodDescriptions = Invites a player to this game instance.

# Description:
InviteMethods = 초대

# Description:
InvitedEventDescriptions = Indicates that a user has been invited to this game instance.

# Description:
InvitedEvents = 초대받음

# Description:
InvitedInstancesProperties = 초대된인스턴스

# Description:
InvitedInstancesPropertyDescriptions = The set of game instances to which this player has been invited but has not yet joined. To ensure current values are returned, first invoke GetInstanceLists.

# Description:
IsAcceptingProperties = 수용여부

# Description:
IsAcceptingPropertyDescriptions = 

# Description:
IsAuthorizedEventDescriptions = 이 이벤트는 권한 부여가 성공하면 프로그램이 <code> Authorize </ code>를 호출 한 후에 발생합니다. 유효한 액세스 토큰이 이미있는 경우 <code> CheckAuthorized </ code>를 호출 한 후에 호출됩니다. 이 이벤트가 발생하면이 구성 요소의 다른 메소드를 호출 할 수 있습니다.

# Description:
IsAuthorizedEvents = 허가여부

# Description:
IsConnectedProperties = 연결여부

# Description:
IsConnectedPropertyDescriptions = 

# Description:
IsDevicePairedMethodDescriptions = Checks whether the Bluetooth device with the specified address is paired.

# Description:
IsDevicePairedMethods = 디바이스페어링여부

# Description:
IsPlayingProperties = 재생중여부

# Description:
IsPlayingPropertyDescriptions = Reports whether the media is playing

# Description:
IsPressedMethodDescriptions = Returns true if the touch sensor is pressed.

# Description:
IsPressedMethods = 눌림여부

# Description:
ItemBackgroundColorProperties = 항목배경색

# Description:
ItemBackgroundColorPropertyDescriptions = The background color of the ListPicker items.

# Description:
ItemTextColorProperties = 항목텍스트색상

# Description:
ItemTextColorPropertyDescriptions = The text color of the ListPicker items.

# Description:
JoinedInstancesProperties = 참여한인스턴스리스트

# Description:
JoinedInstancesPropertyDescriptions = The set of game instances in which this player is participating. To ensure current values are returned, first invoke GetInstanceLists.

# Description:
JsonTextDecodeMethodDescriptions = Decodes the given JSON encoded value to produce a corresponding AppInventor value. A JSON list [x, y, z] decodes to a list (x y z), A JSON object with name A and value B, (denoted as A:B enclosed in curly braces) decodes to a list ((A B)), that is, a list containing the two-element list (A B).

# Description:
JsonTextDecodeMethods = Json텍스트디코딩

# Description:
KeepAliveMethodDescriptions = Keep Alive. Returns the current sleep time limit in milliseconds.

# Description:
KeepAliveMethods = 연결유지

# Description:
KeepRunningWhenOnPauseProperties = 백그라운드시작동유지

# Description:
KeepRunningWhenOnPausePropertyDescriptions = If set to true, it will keep sensing for proximity changes even when the app is not visible

# Description:
KeyFileProperties = 키파일

# Description:
KeyFilePropertyDescriptions = Specifies the path of the private key file. This key file is used to get access to the FusionTables API.

# Description:
LabelHelpStringComponentPallette = 레이블은 텍스트 속성에 지정된 글을 화면에 표시하는 컴포넌트입니다. 디자이너 또는 블록 에디터에서 텍스트의 모양이나 위치를 변경하거나 다른 속성들을 지정할 수 있습니다.

# Description:
LanguageProperties = 언어

# Description:
LanguagePropertyDescriptions = Sets the language for TextToSpeech. This changes the way that words are pronounced, not the actual language that is spoken. For example setting the language to and speaking English text with sound like someone speaking English with a Frernch accent.

# Description:
LastMessageProperties = 마지막메시지

# Description:
LastMessagePropertyDescriptions = 

# Description:
LatitudeFromAddressMethodDescriptions = Derives latitude of given address

# Description:
LatitudeFromAddressMethods = 주소에서위도가져오기

# Description:
LatitudeProperties = 위도

# Description:
LatitudePropertyDescriptions = 

# Description:
LaunchPickerMethodDescriptions = Launches the TimePicker popup.

# Description:
LaunchPickerMethods = 선택창열기

# Description:
LeaderProperties = 리더

# Description:
LeaderPropertyDescriptions = The game''s leader. At any time, each game instance has only one leader, but the leader may change with time. Initially, the leader is the game instance creator. Application writers determine special properties of the leader. The leader value is updated each time a successful communication is made with the server.

# Description:
LeaveInstanceMethodDescriptions = Leaves the current instance.

# Description:
LeaveInstanceMethods = 인스턴스나가기

# Description:
LegacyModeProperties = 예전연결방식사용

# Description:
LegacyModePropertyDescriptions = Prior to the release that added this property the AccelerometerSensor component passed through sensor values directly as received from the Android system. However these values do not compensate for tablets that default to Landscape mode, requiring the MIT App Inventor programmer to compensate. However compensating would result in incorrect results in Portrait mode devices such as phones. We now detect Landscape mode tablets and perform the compensation. However if your project is already compensating for the change, you will now get incorrect results. Although our preferred solution is for you to update your project, you can also just set this property to “true” and our compensation code will be deactivated. Note: We recommend that you update your project as we may remove this property in a future release.

# Description:
LineStringHelpStringComponentPallette = LineString

# Description:
LineWidthProperties = 선두께

# Description:
LineWidthPropertyDescriptions = The width of lines drawn on the canvas.

# Description:
ListFilesMethodDescriptions = Returns a list containing the names of matching files found on the robot.

# Description:
ListFilesMethods = 리스트파일

# Description:
ListPickerHelpStringComponentPallette = <p> 클릭하면 사용자가 선택할 텍스트 목록이 표시됩니다. 텍스트는 <code> ElementsFromString </ code> 속성을 문자열로 구분 된 연결 (예 : <em> 선택 사항 1, 선택 사항 2, 선택 항목 3 </ em>)으로 설정하여 디자이너 또는 블록 편집기를 통해 지정할 수 있습니다. 블록 편집기에서 <code> Elements </ code> 속성을 List로 설정하면됩니다. </ p> <p> ShowFilterBar 속성을 true로 설정하면 목록을 검색 할 수 있습니다. 다른 속성은 버튼의 모양 (<code> TextAlignment </ code>, <code> BackgroundColor </ code> 등) 및 클릭 여부 (<code> 사용 </ code>)에 영향을줍니다. p>

# Description:
ListViewHelpStringComponentPallette = <p> 이것은 텍스트 요소 목록을 표시하는 가시적 인 구성 요소입니다. <br> 목록은 ElementsFromString 속성을 사용하거나 블록 편집기의 요소 블록을 사용하여 설정할 수 있습니다. </ p>

# Description:
LoadErrorEventDescriptions = An error was encountered while processing a GeoJSON document at the given url. The responseCode parameter will contain an HTTP status code and the errorMessage parameter will contain a detailed error message.

# Description:
LoadErrorEvents = 열기오류가발생했을때

# Description:
LoadFromURLMethodDescriptions = <p> 지정된 URL에서 <a href=\"https://en.wikipedia.org/wiki/GeoJSON\"> GeoJSON </a> 형식으로 지형지 물 모음을로드합니다. 성공하면 GotFeatures 이벤트가 지정된 URL과 GeoJSON에서 구문 분석 된 기능 목록 (키, 값)의 목록으로 생성됩니다. 실패하면 해당 HTTP 응답 코드 및 오류 메시지와 함께 LoadError 이벤트가 발생합니다. </ p>

# Description:
LoadFromURLMethods = URL에서열기

# Description:
LoadingDialogMessageProperties = 로딩다이얼로그메시지

# Description:
LoadingDialogMessagePropertyDescriptions = Set the loading message for the dialog.

# Description:
LocationChangedEventDescriptions = Indicates that a new location has been detected.

# Description:
LocationChangedEvents = 위치가변경되었을때

# Description:
LocationSensorHelpStringComponentPallette = 경도, 위도, 고도 (장치가 지원하는 경우), 속도 (장치가 지원하는 경우) 및 주소를 비롯한 위치 정보를 제공하는 보이지 않는 구성 요소. 또한 지정된 주소 (반드시 현재 위치는 아님)를 위도 (LatitudeFromAddress </ code> 메소드 사용)와 경도 (LongitudeFromAddress </ code> 메소드 사용)로 변환하여 \"지오 코딩\"을 수행 할 수 있습니다 </ p> <p> 기능을 사용하려면 구성 요소의 <code> 사용 </ code> 속성이 True로 설정되어 있어야하며 무선 네트워크 또는 GPS 위성 (야외의 경우) </ p> 앱이 시작될 때 위치 정보가 바로 제공되지 않을 수 있습니다. 위치 공급자가 찾아 사용되거나 OnLocationChanged 이벤트가 발생할 때까지 잠시 기다려야합니다.

# Description:
LocationSensorProperties = 위치센서

# Description:
LocationSensorPropertyDescriptions = Uses the provided LocationSensor for user location data rather than the built-in location provider.

# Description:
LogErrorMethodDescriptions = Writes an error message to the Android system log. See the Google Android documentation for how to access the log.

# Description:
LogErrorMethods = 오류로그남기기

# Description:
LogInfoMethodDescriptions = Writes an information message to the Android log.

# Description:
LogInfoMethods = 정보로그남기기

# Description:
LogWarningMethodDescriptions = Writes a warning message to the Android log. See the Google Android documentation for how to access the log.

# Description:
LogWarningMethods = 경고로그남기기

# Description:
LongClickEventDescriptions = The user long-pressed on the feature. This event will only trigger if Draggable is false.

# Description:
LongClickEvents = 길게누르기

# Description:
LongPressAtPointEventDescriptions = The user long-pressed at a point on the map.

# Description:
LongPressAtPointEvents = 좌표를길게눌렀을때

# Description:
LongitudeFromAddressMethodDescriptions = Derives longitude of given address

# Description:
LongitudeFromAddressMethods = 주소에서경도가져오기

# Description:
LongitudeProperties = 경도

# Description:
LongitudePropertyDescriptions = 

# Description:
LoopProperties = 반복

# Description:
LoopPropertyDescriptions = If true, the player will loop when it plays. Setting Loop while the player is playing will affect the current playing.

# Description:
LostFocusEventDescriptions = Indicates the cursor moved away from the button so it is now no longer possible to click it.

# Description:
LostFocusEvents = 포커스를잃었을때

# Description:
LsGetStatusMethodDescriptions = Returns the count of available bytes to read.

# Description:
LsGetStatusMethods = Ls상태가져오기

# Description:
LsReadMethodDescriptions = Reads unsigned low speed data from an input sensor on the robot. Assumes sensor type has been configured via SetInputMode.

# Description:
LsReadMethods = Ls읽기

# Description:
LsWriteMethodDescriptions = Writes low speed data to an input sensor on the robot. Assumes sensor type has been configured via SetInputMode.

# Description:
LsWriteMethods = Ls쓰기

# Description:
MagnitudeProperties = 규모

# Description:
MagnitudePropertyDescriptions = 

# Description:
MakeInstantFromMillisMethodDescriptions = An instant in time specified by the milliseconds since 1970.

# Description:
MakeInstantFromMillisMethods = 밀리초로인스턴트만들기

# Description:
MakeInstantMethodDescriptions = An instant in time specified by MM/dd/YYYY hh:mm:ss or MM/dd/YYYY or hh:mm

# Description:
MakeInstantMethods = 인스턴트만들기

# Description:
MakeNewInstanceMethodDescriptions = Asks the server to create a new instance of this game.

# Description:
MakeNewInstanceMethods = 새로운인스턴스만들기

# Description:
MakePhoneCallMethodDescriptions = Makes a phone call using the number in the PhoneNumber property.

# Description:
MakePhoneCallMethods = 전화걸기

# Description:
MapHelpStringComponentPallette = <p> 백그라운드에서지도 타일을 렌더링하고 여러 마커 요소가지도상의 점을 식별 할 수있게 해주는 2 차원 컨테이너입니다. 지도 타일은 OpenStreetMap 제공자와 미국 지질 조사국에서 제공합니다. </ p> <p>지도 구성 요소는 App Inventor 내에서 경계를 조작하는 세 가지 유틸리티를 제공합니다. 첫째, 화면상의 다른 구성 요소와 관련하여 맵을 이동할 수 있도록 잠금 메커니즘이 제공됩니다. 둘째, 잠금을 해제하면 사용자가지도를 모든 위치로 이동할 수 있습니다. 이 새로운 위치에서, \"Set Initial Boundary\" 버튼을 누르면 현재지도 좌표를 속성에 저장할 수 있습니다. 마지막으로,지도가 다른 위치로 이동 된 경우 (예 : 마커를 화면 외부에 추가하는 경우), & quot; 초기 경계로지도 재설정 & quot; 버튼을 사용하여 시작 위치의지도를 다시 센터링 할 수 있습니다. </ p>

# Description:
MapTypeProperties = 지도유형

# Description:
MapTypePropertyDescriptions = The type of tile layer to use as the base of the map. Valid values are: 1 (Roads), 2 (Aerial), 3 (Terrain)

# Description:
MarkerHelpStringComponentPallette = An icon positioned at a point to indicate information on a map. Markers can be used to provide an info window, custom fill and stroke colors, and custom images to convey information to the user.

# Description:
MaxValueProperties = 최댓값

# Description:
MaxValuePropertyDescriptions = Sets the maximum value of slider. Changing the maximum value also resets Thumbposition to be halfway between the minimum and the (new) maximum. If the new maximum is less than the current minimum, then minimum and maximum will both be set to this value. Setting MaxValue resets the thumb position to halfway between MinValue and MaxValue and signals the PositionChanged event.

# Description:
MaximumRangeMethods = MaximumRangeMethods

# Description:
MaximumRangeProperties = 최대범위

# Description:
MaximumRangePropertyDescriptions = Reports the Maximum Range of the device''s ProximitySensor

# Description:
MediaStoreHelpStringComponentPallette = Non-visible component that communicates with a Web service and stores media files.

# Description:
MediaStoredEventDescriptions = Indicates that a MediaStored server request has succeeded.

# Description:
MediaStoredEvents = MediaStored

# Description:
MentionsProperties = 멘션리스트

# Description:
MentionsPropertyDescriptions = 이 속성에는 로그인 한 사용자의 멘션 목록이 들어 있습니다. 처음에는 목록이 비어 있습니다. 이를 설정하려면 프로그램에서 <ol> <li> <code> Authorize </ code> 메소드를 호출하십시오. </ li> <li> <code> IsAuthorized </ code> <code> RequestMentions </ code> 메소드 호출 </ li> <li> <code> MentionsReceived </ code> 이벤트를 기다립니다. </ li> </ ol> (<code> RequestMentions </ code>에 대한 이후의 호출이있을 때까지 그 값을 유지합니다).

# Description:
MentionsReceivedEventDescriptions = 이 이벤트는 <code> RequestMentions </ code>를 통해 요청 된 로그인 사용자의 언급이 검색 될 때 발생합니다. 그 멘션의 목록은 <code> 멘션 </ code> 매개 변수 또는 <code> 멘티션 </ code> 속성에서 찾을 수 있습니다.

# Description:
MentionsReceivedEvents = 멘션을받았을때

# Description:
MessageProperties = 메시지

# Description:
MessagePropertyDescriptions = The message that will be sent when the SendMessage method is called.

# Description:
MessageReadMethodDescriptions = Read a message from a mailbox (1-10) on the robot.

# Description:
MessageReadMethods = 메시지읽기

# Description:
MessageReceivedEventDescriptions = Event that''s raised when a text message is received by the phone.

# Description:
MessageReceivedEvents = 메시지를받았을때

# Description:
MessageWriteMethodDescriptions = Write a message to a mailbox (1-10) on the robot.

# Description:
MessageWriteMethods = 메시지쓰기

# Description:
MinValueProperties = 최솟값

# Description:
MinValuePropertyDescriptions = Sets the minimum value of slider. Changing the minimum value also resets Thumbposition to be halfway between the (new) minimum and the maximum. If the new minimum is greater than the current maximum, then minimum and maximum will both be set to this value. Setting MinValue resets the thumb position to halfway between MinValue and MaxValue and signals the PositionChanged event.

# Description:
MinimumIntervalProperties = 최소간격

# Description:
MinimumIntervalPropertyDescriptions = The minimum interval, in milliseconds, between sounds. If you play a sound, all further Play() calls will be ignored until the interval has elapsed.

# Description:
MinuteMethodDescriptions = The minute of the hour

# Description:
MinuteMethods = 분

# Description:
MinuteProperties = 분

# Description:
MinutePropertyDescriptions = The minute of the last time set using the time picker

# Description:
MockSpinnerAddItems = 항목 추가…

# Description:
ModeProperties = 모드

# Description:
ModePropertyDescriptions = 센서 모드는 SetAngleMode 또는 SetRateMode에 각각 해당하는 \"속도\"또는 \"각도\"의 텍스트 상수가 될 수 있습니다.

# Description:
MonthInTextProperties = 월이름

# Description:
MonthInTextPropertyDescriptions = Returns the name of the Month that was last picked using the DatePicker, in textual format.

# Description:
MonthMethodDescriptions = The month of the year represented as a number from 1 to 12)

# Description:
MonthMethods = 월

# Description:
MonthNameMethodDescriptions = The name of the month

# Description:
MonthNameMethods = 월이름

# Description:
MonthProperties = 월

# Description:
MonthPropertyDescriptions = the number of the Month that was last picked using the DatePicker. Note that months start in 1 = January, 12 = December.

# Description:
MotorPortsProperties = 모터포트

# Description:
MotorPortsPropertyDescriptions = The motor ports that the motors are connected to. The ports are specified by a sequence of port letters.

# Description:
MoveBackwardIndefinitelyMethodDescriptions = Move the robot backward indefinitely, with the specified percentage of maximum power, by powering both drive motors backward.

# Description:
MoveBackwardIndefinitelyMethods = 계속뒤로가기

# Description:
MoveBackwardMethodDescriptions = Move the robot backward the given distance, with the specified percentage of maximum power, by powering both drive motors backward.

# Description:
MoveBackwardMethods = 뒤로가기

# Description:
MoveForwardIndefinitelyMethodDescriptions = Move the robot forward indefinitely, with the specified percentage of maximum power, by powering both drive motors forward.

# Description:
MoveForwardIndefinitelyMethods = 계속앞으로가기

# Description:
MoveForwardMethodDescriptions = Move the robot forward the given distance, with the specified percentage of maximum power, by powering both drive motors forward.

# Description:
MoveForwardMethods = 앞으로가기

# Description:
MoveIntoBoundsMethodDescriptions = Moves the sprite back in bounds if part of it extends out of bounds, having no effect otherwise. If the sprite is too wide to fit on the canvas, this aligns the left side of the sprite with the left side of the canvas. If the sprite is too tall to fit on the canvas, this aligns the top side of the sprite with the top side of the canvas.

# Description:
MoveIntoBoundsMethods = 경계로이동하기

# Description:
MoveToMethodDescriptions = Moves the sprite so that its left top corner is at the specfied x and y coordinates.

# Description:
MoveToMethods = 좌표로이동하기

# Description:
MovingProperties = 이동

# Description:
MovingPropertyDescriptions = 

# Description:
MultiLineProperties = 여러줄

# Description:
MultiLinePropertyDescriptions = If true, then this text box accepts multiple lines of input, which are entered using the return key. For single line text boxes there is a Done key instead of a return key, and pressing Done hides the keyboard. The app should call the HideKeyboard method to hide the keyboard for a mutiline text box.

# Description:
NamespaceProperties = 네임스페이스

# Description:
NamespacePropertyDescriptions = Namespace for storing data.

# Description:
NearFieldHelpStringComponentPallette = <p> NFC 기능을 제공하는 보이지 않는 구성 요소. 현재이 구성 요소는 텍스트 태그의 읽기 및 쓰기 만 지원합니다 (장치가 지원하는 경우). </ p> <p> 텍스트 태그를 읽고 쓸려면 구성 요소에 <code> ReadMode </ code> 속성이 있어야합니다 </ p> <p> <strong> 참고 : </ strong>이 구성 요소는 모든 App Inventor 앱의 Screen1에서만 작동합니다. </ p>

# Description:
NewInstanceMadeEventDescriptions = Indicates that a new instance was successfully created after calling MakeNewInstance.

# Description:
NewInstanceMadeEvents = 새인스턴스가만들어졌을때

# Description:
NewLeaderEventDescriptions = Indicates that this game has a new leader as specified through SetLeader

# Description:
NewLeaderEvents = 새로운리더가생겼을때

# Description:
NoLongerCollidingWithEventDescriptions = Event indicating that a pair of sprites are no longer colliding.

# Description:
NoLongerCollidingWithEvents = 더이상충돌하지않을때

# Description:
NoOpenPollEventDescriptions = Event indicating that the service has no open poll.

# Description:
NoOpenPollEvents = 열린투표가없을때

# Description:
NorthLatitudeProperties = 북위

# Description:
NorthLatitudePropertyDescriptions = 

# Description: Title for the Warning Dialog Box
NoticeTitle = 알림!

# Description:
NotifierHelpStringComponentPallette = Notifier 구성 요소는 경고 대화 상자, 메시지 및 임시 경고를 표시하고 다음 방법을 통해 Android 로그 항목을 만듭니다. <ul> <li> ShowMessageDialog : 버튼을 눌러 사용자가 해제해야하는 메시지를 표시합니다. </ li> <li > ShowChooseDialog : 예를 들어, 예 또는 아니요와 같이 AfterChoosing 이벤트가 발생한 후 사용자가 두 가지 응답 중 하나를 선택할 수있게 해주는 두 개의 버튼을 표시합니다. </ li> <li> ShowTextDialog : AfterTextInput 이벤트가 발생한 이후의 메시지입니다. <li> ShowAlert : 잠시 후 자동으로 사라지는 임시 경고를 표시합니다. </ li> <li> ShowProgressDialog : 사용자가 해고 할 수없는로드하는 스피너와 함께 경고를 표시합니다. </ li> <li> DismissProgressDialog : ShowProgressDialog가 표시 한 진행 대화 상자를 닫습니다. </ li> <li> LogError : Android 로그에 오류 메시지를 기록합니다. </ li> <li> LogInfo : Android 로그에 정보 메시지를 기록합니다. </ li> <li> LogWarning : Android 로그에 경고 메시지를 기록합니다. & lt; big & gt;, & lt; blockquote & gt ;, & lt; br & gt; & lt; cite & gt; & lt; dfn & gt; & lt; div & gt ;, & lt; <small>, <strong>, <sub>, <sup>, <tt> 등의 정보를 포함 할 수있다. & lt; u & gt; </ li> <li> font 태그를 사용하여 색상을 지정할 수도 있습니다 (예 : & lt; font color = \"blue\"& gt;). 사용 가능한 색상 이름은 아쿠아, 검정, 파랑, 자홍색, 녹색, 회색, 석회, 밤색, 네이비, 올리브, 보라색, 빨간색, 은색, 청록색, 흰색 및 노란색입니다. </ li> </ ul>

# Description:
NotifierLengthProperties = 알림표시시간

# Description:
NotifierLengthPropertyDescriptions = 경고가 표시되는 시간을 \"짧게\"또는 \"길게\"지정합니다.

# Description:
NowMethodDescriptions = The current instant in time read from phone''s clock

# Description:
NowMethods = 지금

# Description:
NumbersOnlyProperties = 숫자만

# Description:
NumbersOnlyPropertyDescriptions = If true, then this text box accepts only numbers as keyboard input. Numbers can include a decimal point and an optional leading minus sign. This applies to keyboard input only. Even if NumbersOnly is true, you can use [set Text to] to enter any text at all.

# Description:
NxtColorSensorHelpStringComponentPallette = LEGO MINDSTORMS NXT robot의 컬러 센서에 고급 인터페이스를 제공하는 컴포넌트

# Description:
NxtDirectCommandsHelpStringComponentPallette = LEGO MINDSTORMS NXT robot에 NXT에 직접 명령을 전달하는 기능과 초급 인터페이스를 제공하는 컴포넌트.

# Description:
NxtDriveHelpStringComponentPallette = LEGO MINDSTORMS NXT robot에 로보트를 움직이고 회전하게 할 수 있는 기능과 고급 인터페이스를 제공하는 컴포넌트.

# Description:
NxtLightSensorHelpStringComponentPallette = LEGO MINDSTORMS NXT robot의 조명센서에 고급 인터페이스를 제공하는 컴포넌트.

# Description:
NxtSoundSensorHelpStringComponentPallette = LEGO MINDSTORMS NXT robot의 소리 센서에 고급 인터페이스를 제공하는 컴포넌트

# Description:
NxtTouchSensorHelpStringComponentPallette = LEGO MINDSTORMS NXT robot의 터치 센서에 고급 인터페이스를 제공하는 컴포넌트

# Description:
NxtUltrasonicSensorHelpStringComponentPallette = LEGO MINDSTORMS NXT robot의 초음파 센서에 고급 인터페이스를 제공하는 컴포넌트

# Description:
OnSettingsEventDescriptions = This event is fired when the \"settings\" menu item is selected (only available in the Companion App, defined in ReplForm.java).

# Description:
OnSettingsEvents = 세팅중일때

# Description:
OpenMethodDescriptions = Opens the picker, as though the user clicked on it.

# Description:
OpenMethods = 열기

# Description:
OpenScreenAnimationMethods = 스크린열기애니메이션

# Description:
OpenScreenAnimationProperties = 스크린열기애니메이션

# Description:
OpenScreenAnimationPropertyDescriptions = The animation for switching to another screen. Valid options are default, fade, zoom, slidehorizontal, slidevertical, and none

# Description:
OrientationChangedEventDescriptions = Default OrientationChanged 이벤트 핸들러입니다. <p> 기기의 방향이 변경되면이 이벤트가 발생합니다. 방위각, 피치 및 롤의 새 값을보고하며 방위각, 피치 및 롤 속성도 설정합니다. 방위각은 나침반의 각도로, 피치는 장치가 위로 기울어지는 방식을 나타냅니다. 아래로, 롤은 기기가 좌우로 기울어 진 정도를 나타냅니다. </ p>

# Description:
OrientationChangedEvents = 방향이변경되었을때

# Description:
OrientationSensorHelpStringComponentPallette = <p> 기기의 실제 방향에 대한 정보를 3 차원으로 제공하는 보이지 않는 구성 요소 : <ul> <li> <strong> 롤 </ strong> : 기기가 수평 일 때 0 도가 90도까지 증가합니다. 장치가 왼쪽으로 기울어지고 장치가 오른쪽으로 기울이면 기울기가 -90 도로 감소합니다. </ li> <li> <strong> 피치 </ strong> : 기기가 수평 일 때 0도, 위로 기울이면 기기가 기울어 져 최대 90도, 뒤집혀 180도까지 기울어집니다. 마찬가지로 장치가 기울어 져서 아래쪽이 아래로 내려 가면 피치가 -90 도로 감소하고 -180도까지 내려갑니다. </ li> <li> <azimuth </ strong> > : 장치의 상단이 북쪽을 가리키면 0도, 동쪽을 가리키는 경우 90도, 남쪽을 가리키는 경우 180도, 서쪽을 가리키는 경우 270도입니다. </ li> </ ul> 기기 자체가 움직이지 않는다고 가정합니다. </ p>

# Description:
OtherPlayerStartedEventDescriptions = This event is signaled when another player has started (and the current player is playing or paused, but not stopped).

# Description:
OtherPlayerStartedEvents = 다른플레이어가시작했을때

# Description:
OtherScreenClosedEventDescriptions = Event raised when another screen has closed and control has returned to this screen.

# Description:
OtherScreenClosedEvents = 다른스크린을닫았을때

# Description: Text for the Package SDK 26 Warning Dialog Box (HTML)
Package26Notice = Use this option to create applications that can be submitted to the Google Play Store.These applications will not run on Android versions older than 4.0.

# Description: Text for the Package non-SDK 26 Warning Dialog Box (HTML)
PackageNotice = Use this option to build apps that that will work back to Android version 2.1 (Eclair),but will not be publishable in the Google Play Store.

# Description:
PaintColorProperties = 페인트색상

# Description:
PaintColorPropertyDescriptions = The color in which lines are drawn

# Description:
PanToMethodDescriptions = Pan the map center to the given latitude and longitude and adjust the zoom level to the specified zoom.

# Description:
PanToMethods = 팬하기

# Description:
PasswordTextBoxHelpStringComponentPallette = <p> 비밀번호를 입력하는 상자입니다. 이것은 사용자가 입력 한 문자를 표시하지 않는다는 점을 제외하면 일반 <code> TextBox </ code> 구성 요소와 동일합니다. </ p> <p> 상자의 텍스트 값은 <code> 텍스트 </ code> 속성 빈 칸이면 빈 상자로 희미하게 나타나는 <code> 힌트 </ code> 속성은 사용자에게 무엇을 입력할지에 대한 지침을 제공 할 수 있습니다. </ p> <p> 텍스트 상자는 일반적으로 < 텍스트 입력이 완료되면 사용자가 버튼을 클릭하는 <code> Button </ code> 구성 요소가 있습니다. </ p>

# Description:
PasswordVisibleProperties = 암호보이기여부

# Description:
PasswordVisiblePropertyDescriptions = Visibility of password.

# Description:
PauseMethodDescriptions = 비디오의 재생을 일시 정지합니다. <code> 시작 </ code> 메소드를 호출하여 동일한 위치에서 재생을 다시 시작할 수 있습니다.

# Description:
PauseMethods = 일시정지하기

# Description:
PedometerHelpStringComponentPallette = 걸음 수를 셀 수 있는 컴포넌트입니다.

# Description:
PermissionDeniedEventDescriptions = Event to handle when the app user has denied a needed permission.

# Description: The name of the event handler for when the app is denied a dangerous permission by the user.
PermissionDeniedEvents = 권한이거부되었을때

# Description:
PermissionGrantedEventDescriptions = Event to handle when the app user has granted a needed permission. This event is only run when permission is granted in response to the AskForPermission method.

# Description: The name of the event handler for when the app is granted a dangerous permission by the user.
PermissionGrantedEvents = 권한이승인되었을때

# Description:
PersistProperties = 지속여부

# Description:
PersistPropertyDescriptions = true 인 경우 변수는 오프라인 일 때 값을 유지하고 앱이 종료됩니다. 값은 다음에 네트워크에 연결되어있는 동안 앱이 실행될 때 Firebase에 업로드됩니다. 이 기능은 네트워크에 연결되지 않은 상태에서 데이터를 수집하는 응용 프로그램에 유용합니다. 참고 : AppendValue 및 RemoveFirst는 오프라인 일 때 네트워크 연결이 필요하지 않을 때 올바르게 작동하지 않습니다. <br/> <br/> <i> 참고 </ i> : Firebase 구성 요소, 모든 화면의 모든 Firebase 구성 요소를 영구적으로 만듭니다. 이것은 저수준의 Firebase 라이브러리의 제한 사항입니다. 또한 persist를 true로 설정하려면 점진적 개발을 위해 Companion을 연결하기 전에이를 수행해야합니다.

# Description:
PhoneCallEndedEventDescriptions = Event indicating that a phone call has ended. If status is 1, incoming call is missed or rejected; if status is 2, incoming call is answered before hanging up; if status is 3, outgoing call is hung up. phoneNumber is the ended call phone number.

# Description:
PhoneCallEndedEvents = 전화를종료했을때

# Description:
PhoneCallHelpStringComponentPallette = <p> Designer 또는 Blocks Editor에서 설정할 수있는 <code> PhoneNumber </ code> 속성에 지정된 번호로 전화를 걸 수있는 보이지 않는 구성 요소입니다. 이 구성 요소에는 <code> MakePhoneCall </ code> 메서드가있어서 프로그램에서 전화를 걸 수 있습니다. </ p> <p> 종종이 구성 요소는 <code> ContactPicker </ code> 구성 요소와 함께 사용됩니다. 사용자는 전화에 저장된 연락처 중에서 연락처를 선택하고 <code> PhoneNumber </ code> 속성을 연락처의 전화 번호로 설정합니다. </ p> <p> 직접 전화 번호를 지정하려면 (예 : 650 -555-1212), <code> PhoneNumber </ code> 속성을 지정된 숫자가있는 텍스트 (예 : \"6505551212\")로 설정하십시오. 대시, 점 및 괄호가 포함될 수 있지만 (예 : \"(650) -555-1212\") 무시되지만 무시됩니다. 공백은 포함되지 않을 수 있습니다. </ p>

# Description:
PhoneCallStartedEventDescriptions = Event indicating that a phonecall has started. If status is 1, incoming call is ringing; if status is 2, outgoing call is dialled. phoneNumber is the incoming/outgoing phone number.

# Description:
PhoneCallStartedEvents = 전화가시작되었을때

# Description:
PhoneNumberListProperties = 전화번호리스트

# Description:
PhoneNumberListPropertyDescriptions = 

# Description:
PhoneNumberPickerHelpStringComponentPallette = 클릭하면 연락처 중 선택할 수있는 전화 번호 목록이 표시됩니다. 사용자가 선택한 후 다음 속성이 선택한 연락처에 대한 정보로 설정됩니다. <ul> <li> <code> ContactName </ code> : 연락처의 이름 </ li> <li> 전화 번호 </ code> : 연락처의 전화 번호 </ li> <li> <code> EmailAddress </ code> : 연락처의 이메일 주소 </ li> / code> : <code> Image </ code> 또는 <code> ImageSprite </ code>에 대한 <code> Picture </ code> 속성 값으로 사용할 수있는 연락처 이미지를 포함하는 파일의 이름입니다. (<code> TextAlignment </ code>, <code> BackgroundColor </ code> 등) 버튼의 모양에 영향을주는 속성이 있습니다. </ li> (<code> 사용 </ code>)을 클릭 할 수 있는지 여부. </ p> <p> PhoneNumberPicker 구성 요소는 일부 Android 기기에서 작동하지 않을 수 있습니다. 예를 들어 시스템 3.0 이전의 Android 시스템에서는 반환 된 전화 번호 및 이메일 주소 목록이 비어 있습니다.

# Description:
PhoneNumberProperties = 전화번호

# Description:
PhoneNumberPropertyDescriptions = The number that the message will be sent to when the SendMessage method is called. The number is a text string with the specified digits (e.g., 6505551212). Dashes, dots, and parentheses may be included (e.g., (650)-555-1212) but will be ignored; spaces should not be included.

# Description:
PhoneStatusHelpStringComponentPallette = 전화번호 정보를 반환하는 컴포넌트

# Description:
PictureProperties = 사진

# Description:
PicturePropertyDescriptions = 

# Description:
PitchProperties = 음높이

# Description:
PitchPropertyDescriptions = Sets the Pitch for TextToSpeech The values should be between 0 and 2 where lower values lower the tone of synthesized voice and greater values raise it.

# Description:
PlayMethodDescriptions = Plays the sound specified by the Source property.

# Description:
PlayMethods = 재생

# Description:
PlayOnlyInForegroundProperties = 현재스크린에서만재생

# Description:
PlayOnlyInForegroundPropertyDescriptions = If true, the player will pause playing when leaving the current screen; if false (default option), the player continues playing whenever the current screen is displaying or not.

# Description:
PlaySoundFileMethodDescriptions = Play a sound file on the robot.

# Description:
PlaySoundFileMethods = 소리파일재생하기

# Description:
PlayToneMethodDescriptions = Make the robot play a tone.

# Description:
PlayToneMethods = 음재생하기

# Description:
PlayerHelpStringComponentPallette = 오디오를 재생하고 전화 진동을 제어하는 멀티미디어 구성 요소. 멀티미디어 필드의 이름은 디자이너 또는 블록 편집기에서 설정할 수있는 <code> 소스 </ code> 속성에 지정됩니다. 진동의 시간 길이는 밀리 초 (천분의 1 초) 단위로 블록 편집기에 지정됩니다. <p> 지원되는 오디오 형식은 <a href = \"http://developer.android.com/guide/appendix/ </ p> <p>이 구성 요소는 노래와 같이 긴 사운드 파일에 가장 적합하지만 <code> 소리 </ code> > 구성 요소는 사운드 효과와 같이 짧은 파일에 더 효율적입니다. </ p>

# Description:
PlayerJoinedEventDescriptions = Indicates that a new player has joined this game instance.

# Description:
PlayerJoinedEvents = 플레이어가참가했을때

# Description:
PlayerLeftEventDescriptions = Indicates that a player has left this game instance.

# Description:
PlayerLeftEvents = 플레이어가떠났을때

# Description:
PlayersProperties = 플레이어

# Description:
PlayersPropertyDescriptions = The current set of players for this game instance. Each player is designated by an email address, which is a string. The list of players is updated each time a successful communication is made with the game server.

# Description:
PointInDirectionMethodDescriptions = Turns the sprite to point towards the point with coordinates as (x, y).

# Description:
PointInDirectionMethods = 좌표바라보기

# Description:
PointTowardsMethodDescriptions = Turns the sprite to point towards a designated target sprite. The new heading will be parallel to the line joining the centerpoints of the two sprites.

# Description:
PointTowardsMethods = 스프라이트바라보기

# Description:
PointsFromStringProperties = 문자열좌표

# Description:
PointsFromStringPropertyDescriptions = Constructs a polygon from the given list of coordinates.

# Description:
PointsProperties = 좌표

# Description:
PointsPropertyDescriptions = Gets or sets the sequence of points used to draw the polygon.

# Description:
PolygonHelpStringComponentPallette = 다각형

# Description:
PositionChangedEventDescriptions = Indicates that position of the slider thumb has changed.

# Description:
PositionChangedEvents = 위치가변경되었을때

# Description:
PostFileMethodDescriptions = Performs an HTTP POST request using the Url property and data from the specified file.If the SaveResponse property is true, the response will be saved in a file and the GotFile event will be triggered. The ResponseFileName property can be used to specify the name of the file.If the SaveResponse property is false, the GotText event will be triggered.

# Description:
PostFileMethods = 파일POST

# Description:
PostMediaMethodDescriptions = Asks the Web service to store the given media file.

# Description:
PostMediaMethods = 미디어POST

# Description:
PostTextMethodDescriptions = Performs an HTTP POST request using the Url property and the specified text.The characters of the text are encoded using UTF-8 encoding.If the SaveResponse property is true, the response will be saved in a file and the GotFile event will be triggered. The responseFileName property can be used to specify the name of the file.If the SaveResponse property is false, the GotText event will be triggered.

# Description:
PostTextMethods = 텍스트POST

# Description:
PostTextWithEncodingMethodDescriptions = Performs an HTTP POST request using the Url property and the specified text.The characters of the text are encoded using the given encoding.If the SaveResponse property is true, the response will be saved in a file and the GotFile event will be triggered. The ResponseFileName property can be used to specify the name of the file.If the SaveResponse property is false, the GotText event will be triggered.

# Description:
PostTextWithEncodingMethods = 인코딩하여텍스트POST

# Description:
PressedEventDescriptions = Touch sensor has been pressed.

# Description:
PressedEventEnabledProperties = 눌림이벤트활성화여부

# Description:
PressedEventEnabledPropertyDescriptions = Whether the Pressed event should fire when the touch sensor is pressed.

# Description:
PressedEvents = 눌렸을때

# Description:
PrimaryColorDarkProperties = 기본어두운색상

# Description:
PrimaryColorDarkPropertyDescriptions = This is the primary color used for darker elements in Material UI.

# Description:
PrimaryColorProperties = 기본색상

# Description:
PrimaryColorPropertyDescriptions = This is the primary color used for Material UI elements, such as the ActionBar.

# Description:
ProgressBarFor = 진행 바

# Description:
ProjectBucketProperties = 프로젝트버킷

# Description:
ProjectBucketPropertyDescriptions = Gets the ProjectBucket for this FirebaseDB.

# Description:
ProjectIDProperties = 프로젝트ID

# Description:
ProjectIDPropertyDescriptions = Gets the ProjectID for this CloudDB project.

# Description:
PromptProperties = 프롬프트

# Description:
PromptPropertyDescriptions = Text with the current title for the Spinner window

# Description:
PromptforPermissionProperties = 권한확인프롬프트

# Description:
PromptforPermissionPropertyDescriptions = If True, then prompt the user of the WebView to give permission to access the geolocation API. If False, then assume permission is granted.

# Description:
ProviderLockedProperties = 서비스제공자잠금여부

# Description:
ProviderLockedPropertyDescriptions = 

# Description:
ProviderNameProperties = 서비스제공자이름

# Description:
ProviderNamePropertyDescriptions = 

# Description:
ProximityChangedEventDescriptions = Triggered when distance (in cm) of the object to the device changes.

# Description:
ProximityChangedEvents = 거리가변경되었을때

# Description:
ProximityChangedMethods = 거리변경

# Description:
ProximityChangedPropertiesProperties = 거리변경속성

# Description:
ProximitySensorHelpStringComponentPallette = 기기의 스크린으로부터 상대적으로 물체가 얼마나 근접해있는지를 (단위는 cm) 측정할 수 있는 보이지 않는 컴포넌트입니다.이 센서는 주로 스마트폰이 사람의 귀에 가까이에 있는지를 확인하기 위해 사용합니다; 즉, 물체가 기기로부터 얼마나 멀리 있는지를 확인하는 것입니다. 많은 기기들은 cm 단위릐 절대 거리를 반환합니다. 그러나 몇몇은 단지 가까운지 멀리 있는지만 알려주기도 합니다. 이 경우에 센서는, 멀리 있을 경우에는 최대 거리를가까이 있을 때는 이보다 작은 값을 알려줍니다.

# Description:
PublicInstancesProperties = 공개인스턴스

# Description:
PublicInstancesPropertyDescriptions = The set of game instances that have been marked public. To ensure current values are returned, first invoke {@link #GetInstanceLists}.

# Description:
PutFileMethodDescriptions = Performs an HTTP PUT request using the Url property and data from the specified file.If the SaveResponse property is true, the response will be saved in a file and the GotFile event will be triggered. The ResponseFileName property can be used to specify the name of the file.If the SaveResponse property is false, the GotText event will be triggered.

# Description:
PutFileMethods = 파일PUT

# Description:
PutTextMethodDescriptions = Performs an HTTP PUT request using the Url property and the specified text.The characters of the text are encoded using UTF-8 encoding.If the SaveResponse property is true, the response will be saved in a file and the GotFile event will be triggered. The responseFileName property can be used to specify the name of the file.If the SaveResponse property is false, the GotText event will be triggered.

# Description:
PutTextMethods = 텍스트PUT

# Description:
PutTextWithEncodingMethodDescriptions = Performs an HTTP PUT request using the Url property and the specified text.The characters of the text are encoded using the given encoding.If the SaveResponse property is true, the response will be saved in a file and the GotFile event will be triggered. The ResponseFileName property can be used to specify the name of the file.If the SaveResponse property is false, the GotText event will be triggered.

# Description:
PutTextWithEncodingMethods = 인코딩하여텍스트PUT

# Description:
QueryProperties = 쿼리

# Description:
QueryPropertyDescriptions = Fusion Tables API에 보낼 쿼리입니다. <p> 합법적 인 쿼리 형식 및 예는 <a href=\"https://developers.google.com/fusiontables/docs/v2/getting_started\" target=\"_blank\"> Fusion Tables API v2.0 참조 설명서 < / a>. </ p> <p> 쿼리를 UTF 인코딩하는 것에 대해 걱정할 필요가 없습니다. 그러나 참조 설명서에 설명 된 구문을 따르는 지 확인해야합니다. 즉, 열 이름에 대문자를 사용하는 것과 같은 것이므로 열 이름에 공백이 있으면 작은 따옴표를 사용해야합니다. </ p >

# Description:
RadiusProperties = 반지름

# Description:
RadiusPropertyDescriptions = The radius of the circle in meters.

# Description:
ReadFromMethodDescriptions = Reads text from a file in storage. Prefix the filename with / to read from a specific file on the SD card. for instance /myFile.txt will read the file /sdcard/myFile.txt. To read assets packaged with an application (also works for the Companion) start the filename with // (two slashes). If a filename does not start with a slash, it will be read from the applications private storage (for packaged apps) and from /sdcard/AppInventor/data for the Companion.

# Description:
ReadFromMethods = 읽어오기

# Description:
ReadModeProperties = 읽기모드

# Description:
ReadModePropertyDescriptions = 

# Description:
ReadyEventDescriptions = Map has been initialized and is ready for user interaction.

# Description:
ReadyEvents = 준비되었을때

# Description:
ReceiveSigned1ByteNumberMethodDescriptions = Receive a signed 1-byte number from the connected Bluetooth device.

# Description:
ReceiveSigned1ByteNumberMethods = 부호있는1바이트숫자받기

# Description:
ReceiveSigned2ByteNumberMethodDescriptions = Receive a signed 2-byte number from the connected Bluetooth device.

# Description:
ReceiveSigned2ByteNumberMethods = 부호있는2바이트숫자받기

# Description:
ReceiveSigned4ByteNumberMethodDescriptions = Receive a signed 4-byte number from the connected Bluetooth device.

# Description:
ReceiveSigned4ByteNumberMethods = 부호있는4바이트숫자받기

# Description:
ReceiveSignedBytesMethodDescriptions = Receive multiple signed byte values from the connected Bluetooth device. If numberOfBytes is less than 0, read until a delimiter byte value is received.

# Description:
ReceiveSignedBytesMethods = 부호있는바이트받기

# Description:
ReceiveTextMethodDescriptions = Receive text from the connected Bluetooth device. If numberOfBytes is less than 0, read until a delimiter byte value is received.

# Description:
ReceiveTextMethods = 텍스트받기

# Description:
ReceiveUnsigned1ByteNumberMethodDescriptions = Receive an unsigned 1-byte number from the connected Bluetooth device.

# Description:
ReceiveUnsigned1ByteNumberMethods = 부호없는1바이트숫자받기

# Description:
ReceiveUnsigned2ByteNumberMethodDescriptions = Receive a unsigned 2-byte number from the connected Bluetooth device.

# Description:
ReceiveUnsigned2ByteNumberMethods = 부호없는2바이트숫자받기

# Description:
ReceiveUnsigned4ByteNumberMethodDescriptions = Receive a unsigned 4-byte number from the connected Bluetooth device.

# Description:
ReceiveUnsigned4ByteNumberMethods = 부호없는4바이트숫자받기

# Description:
ReceiveUnsignedBytesMethodDescriptions = Receive multiple unsigned byte values from the connected Bluetooth device. If numberOfBytes is less than 0, read until a delimiter byte value is received.

# Description:
ReceiveUnsignedBytesMethods = 부호없는바이트받기

# Description:
ReceivingEnabledProperties = 데이터수신활성화

# Description:
ReceivingEnabledPropertyDescriptions = If set to 1 (OFF) no messages will be received. If set to 2 (FOREGROUND) or3 (ALWAYS) the component will respond to messages if it is running. If the app is not running then the message will be discarded if set to 2 (FOREGROUND). If set to 3 (ALWAYS) and the app is not running the phone will show a notification. Selecting the notification will bring up the app and signal the MessageReceived event. Messages received when the app is dormant will be queued, and so several MessageReceived events might appear when the app awakens. As an app developer, it would be a good idea to give your users control over this property, so they can make their phones ignore text messages when your app is installed.

# Description:
RecordVideoMethodDescriptions = Records a video, then raises the AfterRecoding event.

# Description:
RecordVideoMethods = 비디오녹화하기

# Description:
RectangleHelpStringComponentPallette = 사각형

# Description:
RedisPortProperties = 레디스포트

# Description:
RedisPortPropertyDescriptions = The Redis Server port to use. Defaults to 6381

# Description:
RedisServerProperties = 레디스서버

# Description:
RedisServerPropertyDescriptions = The Redis Server to use to store data. A setting of \"DEFAULT\" means that the MIT server will be used.

# Description:
ReleasedEventDescriptions = Touch sensor has been released.

# Description:
ReleasedEventEnabledProperties = 터치해제이벤트활성화

# Description:
ReleasedEventEnabledPropertyDescriptions = Whether the Released event should fire when the touch sensor is released.

# Description:
ReleasedEvents = 터치해제

# Description:
RemoveFirstFromListMethodDescriptions = Return the first element of a list and atomically remove it. If two devices use this function simultaneously, one will get the first element and the the other will get the second element, or an error if there is no available element. When the element is available, the \"FirstRemoved\" event will be triggered.

# Description:
RemoveFirstFromListMethods = 리스트의첫번째항목삭제하기

# Description:
RemoveFirstMethodDescriptions = Return the first element of a list and atomically remove it. If two devices use this function simultaneously, one will get the first element and the the other will get the second element, or an error if there is no available element. When the element is available, the \"FirstRemoved\" event will be triggered.

# Description:
RemoveFirstMethods = 첫번째항목삭제하기

# Description:
RequestBallotMethodDescriptions = <code> ServiceURL </ code> 속성에 지정된 웹 서비스에 투표를 요청하십시오. 완료되면 <code> GotBallot </ code>, <code> NoOpenPoll </ code> 또는 <code> WebServiceError </ code> 이벤트 중 하나가 발생합니다.

# Description:
RequestBallotMethods = 투표요청하기

# Description:
RequestDirectMessagesMethodDescriptions = 로그인 한 사용자에게 가장 최근의 직접 메시지 20 개를 요청합니다. 메시지가 검색되면 시스템은 <code> DirectMessagesReceived </ code> 이벤트를 발생시키고 <code> DirectMessages </ code> 속성을 메시지 목록으로 설정합니다. <p> <u> 요구 사항 </ u> : <code> IsAuthorized </ code> 이벤트가 발생하여 사용자가 성공적으로 Twitter에 로그인했음을 알리는 경우에만 호출해야합니다. </ p>

# Description:
RequestDirectMessagesMethods = 쪽지요청하기

# Description:
RequestFocusMethodDescriptions = Sets the textbox active.

# Description:
RequestFocusMethods = 포커스요청하기

# Description:
RequestFollowersMethodDescriptions = Gets who is following you.

# Description:
RequestFollowersMethods = 팔로워요청하기

# Description:
RequestFriendTimelineMethodDescriptions = Gets the most recent 20 messages in the user''s timeline.

# Description:
RequestFriendTimelineMethods = 친구타임라인요청하기

# Description:
RequestHeadersProperties = 요청헤더

# Description:
RequestHeadersPropertyDescriptions = The request headers, as a list of two-element sublists. The first element of each sublist represents the request header field name. The second element of each sublist represents the request header field values, either a single value or a list containing multiple values.

# Description:
RequestMentionsMethodDescriptions = 로그인 한 사용자의 가장 최근의 언급 20 개를 요청합니다. 멘션이 검색되면 시스템은 <code> MentionsReceived </ code> 이벤트를 발생시키고 <code> Mentions </ code> 속성을 멘션 목록으로 설정합니다. <p> <u> 요구 사항 </ u> : <code> IsAuthorized </ code> 이벤트가 발생하여 사용자가 성공적으로 Twitter에 로그인했음을 알리는 경우에만 호출해야합니다. </ p>

# Description:
RequestMentionsMethods = 멘션요청하기

# Description:
RequestTranslationMethodDescriptions = By providing a target language to translate to (for instance, ''es'' for Spanish, ''en'' for English, or ''ru'' for Russian), and a word or sentence to translate, this method will request a translation to the Yandex.Translate service.Once the text is translated by the external service, the event GotTranslation will be executed.Note: Yandex.Translate will attempt to detect the source language. You can also specify prepending it to the language translation. I.e., es-ru will specify Spanish to Russian translation.

# Description:
RequestTranslationMethods = 번역요청하기

# Description:
ResetInputScaledValueMethodDescriptions = Reset the scaled value of an input sensor on the robot.

# Description:
ResetInputScaledValueMethods = 입력된배율값초기화하기

# Description:
ResetMethodDescriptions = Resets the step counter, distance measure and time running.

# Description:
ResetMethods = 초기화

# Description:
ResetMotorPositionMethodDescriptions = Reset motor position.

# Description:
ResetMotorPositionMethods = 모터위치초기화하기

# Description:
ResetTachoCountMethodDescriptions = Set the current tacho count to zero.

# Description:
ResetTachoCountMethods = 타코카운트초기화하기

# Description:
ResolveActivityMethodDescriptions = Returns the name of the activity that corresponds to this ActivityStarter, or an empty string if no corresponding activity can be found.

# Description:
ResolveActivityMethods = 액티비티가져오기

# Description:
ResponseFileNameProperties = 응답파일이름

# Description:
ResponseFileNamePropertyDescriptions = The name of the file where the response should be saved. If SaveResponse is true and ResponseFileName is empty, then a new file name will be generated.

# Description:
ResultNameProperties = 결과이름

# Description:
ResultNamePropertyDescriptions = 

# Description:
ResultProperties = 결과

# Description:
ResultPropertyDescriptions = 

# Description:
ResultTypeProperties = 결과유형

# Description:
ResultTypePropertyDescriptions = 

# Description:
ResultUriProperties = 결과URI

# Description:
ResultUriPropertyDescriptions = 

# Description:
ResumeMethodDescriptions = Resumes playing the sound after a pause.

# Description:
ResumeMethods = 다시시작하기

# Description:
ReverseDirectionProperties = 역방향

# Description:
ReverseDirectionPropertyDescriptions = It specifies if the direction of the motors is reversed.

# Description:
RollProperties = 롤

# Description:
RollPropertyDescriptions = 

# Description:
RotateInDistanceMethodDescriptions = Rotate the motors in a distance.

# Description:
RotateInDistanceMethods = 거리만큼회전하기

# Description:
RotateInDurationMethodDescriptions = Rotate the motors in a period of time.

# Description:
RotateInDurationMethods = 시간만큼회전하기

# Description:
RotateInTachoCountsMethodDescriptions = Rotate the motors in a number of tacho counts.

# Description:
RotateInTachoCountsMethods = 타코카운트만큼회전하기

# Description:
RotateIndefinitelyMethodDescriptions = Start to rotate the motors.

# Description:
RotateIndefinitelyMethods = 계속회전하기

# Description:
RotateSyncInDistanceMethodDescriptions = Rotate the motors at the same speed for a distance in cm.

# Description:
RotateSyncInDistanceMethods = 동시에거리만큼회전하기

# Description:
RotateSyncInDurationMethodDescriptions = Rotate the motors at the same speed in a period of time.

# Description:
RotateSyncInDurationMethods = 동시에시간만큼회전하기

# Description:
RotateSyncInTachoCountsMethodDescriptions = Rotate the motors at the same speed in a number of tacho counts.

# Description:
RotateSyncInTachoCountsMethods = 동시에타코카운트만큼회전하기

# Description:
RotateSyncIndefinitelyMethodDescriptions = Start to rotate the motors at the same speed.

# Description:
RotateSyncIndefinitelyMethods = 동시에계속회전하기

# Description:
RotatesProperties = 회전하기

# Description:
RotatesPropertyDescriptions = If true, the sprite image rotates to match the sprite''s heading. If false, the sprite image does not rotate when the sprite changes heading. The sprite rotates around its centerpoint.

# Description:
RotationAngleProperties = 회전각도

# Description:
RotationAnglePropertyDescriptions = The angle at which the image picture appears rotated. This rotation does not appear on the designer screen, only on the device.

# Description:
RotationProperties = 회전

# Description:
RotationPropertyDescriptions = Sets or gets the rotation of the map in decimal degrees if any

# Description:
RowsProperties = 행

# Description:
RowsPropertyDescriptions = 

# Description:
SaveAsMethodDescriptions = Saves a picture of this Canvas to the device''s external storage in the file named fileName. fileName must end with one of .jpg, .jpeg, or .png, which determines the file type.

# Description:
SaveAsMethods = 다른이름으로저장하기

# Description:
SaveFileMethodDescriptions = Saves text to a file. If the filename begins with a slash (/) the file is written to the sdcard. For example writing to /myFile.txt will write the file to /sdcard/myFile.txt. If the filename does not start with a slash, it will be written in the programs private data directory where it will not be accessible to other programs on the phone. There is a special exception for the AI Companion where these files are written to /sdcard/AppInventor/data to facilitate debugging. Note that this block will overwrite a file if it already exists.If you want to add content to a file use the append block.

# Description:
SaveFileMethods = 파일저장하기

# Description:
SaveMethodDescriptions = Saves the pedometer state to the phone. Permits permits accumulation of steps and distance between invocations of an App that uses the pedometer. Different Apps will have their own saved state.

# Description:
SaveMethods = 저장하기

# Description:
SaveResponseProperties = 응답저장하기

# Description:
SaveResponsePropertyDescriptions = Whether the response should be saved in a file.

# Description:
SavedRecordingProperties = 저장경로

# Description:
SavedRecordingPropertyDescriptions = Specifies the path to the file where the recording should be stored. If this proprety is the empty string, then starting a recording will create a file in an appropriate location. If the property is not the empty string, it should specify a complete path to a file in an existing directory, including a file name with the extension .3gp.

# Description:
ScalePictureToFitProperties = 사진크기맞추기

# Description:
ScalePictureToFitPropertyDescriptions = Specifies whether the image should be resized to match the size of the ImageView.

# Description:
ScaleUnitsProperties = 크기단위

# Description:
ScaleUnitsPropertyDescriptions = 

# Description: A property for scaling images
ScalingProperties = 크기변경

# Description:
ScalingPropertyDescriptions = This property determines how the picture scales according to the Height or Width of the Image. Scale proportionally (0) preserves the picture aspect ratio. Scale to fit (1) matches the Image area, even if the aspect ratio changes.

# Description:
ScreenOrientationChangedEventDescriptions = Screen orientation changed

# Description:
ScreenOrientationChangedEvents = 스크린방향이변경되었을때

# Description:
ScreenOrientationProperties = 스크린방향

# Description:
ScreenOrientationPropertyDescriptions = The requested screen orientation, specified as a text value. Commonly used values are landscape, portrait, sensor, user and unspecified. See the Android developer documentation for ActivityInfo.Screen_Orientation for the complete list of possible settings.

# Description:
ScrollableProperties = 스크롤가능여부

# Description:
ScrollablePropertyDescriptions = When checked, there will be a vertical scrollbar on the screen, and the height of the application can exceed the physical height of the device. When unchecked, the application height is constrained to the height of the device.

# Description:
SdkLevelMethodDescriptions = Get the current Android SDK Level

# Description:
SdkLevelMethods = SDK레벨

# Description:
SearchResultsProperties = 검색결과

# Description:
SearchResultsPropertyDescriptions = <ol> <li> <code> SearchTwitter </ code> 메소드를 호출합니다. </ li> <li> <code> > SearchSuccessful </ code> 이벤트가 있습니다. </ li> </ ol> 속성 값은 <code> SearchSuccessful </ code>의 매개 변수와 동일합니다. <code> SearchTwitter </ code>를 호출하기 전에 <code> Authorize </ code> 메서드를 호출 할 필요는 없습니다.

# Description:
SearchSuccessfulEventDescriptions = 이 이벤트는 <code> SearchSuccessful </ code>을 통해 요청 된 검색 결과가 검색 될 때 발생합니다. 결과 목록은 <code> results </ code> 매개 변수 또는 <code> Results </ code> 속성에서 찾을 수 있습니다.

# Description:
SearchSuccessfulEvents = 검색이성공했을때

# Description:
SearchTwitterMethodDescriptions = 주어진 문자열 쿼리에 대해 트위터를 검색합니다. <p> <u> 요구 사항 </ u> : 사용자가 성공적으로 로그인했음을 나타내는 <code> IsAuthorized </ code> 이벤트가 발생한 후에 만 호출해야합니다. Twitter. </ p>

# Description:
SearchTwitterMethods = 트위터검색하기

# Description:
SecondMethodDescriptions = The second of the minute

# Description:
SecondMethods = 초

# Description:
SecureProperties = 보안

# Description:
SecurePropertyDescriptions = Whether to invoke SSP (Simple Secure Pairing), which is supported on devices with Bluetooth v2.1 or higher. When working with embedded Bluetooth devices, this property may need to be set to False. For Android 2.0-2.2, this property setting will be ignored.

# Description:
SeekToMethodDescriptions = Seeks to the requested time (specified in milliseconds) in the video. If the video is paused, the frame shown will not be updated by the seek. The player can jump only to key frames in the video, so seeking to times that differ by short intervals may not actually move to different frames.

# Description:
SeekToMethods = 찾기

# Description:
SelectionColorProperties = 선택된항목색상

# Description:
SelectionColorPropertyDescriptions = The color of the item when it is selected.

# Description:
SelectionIndexProperties = 선택된항목번호

# Description:
SelectionIndexPropertyDescriptions = The index of the currently selected item, starting at 1. If no item is selected, the value will be 0.

# Description:
SelectionProperties = 선택된항목

# Description:
SelectionPropertyDescriptions = Returns the current selected item in the spinner

# Description:
Send1ByteNumberMethodDescriptions = Send a 1-byte number to the connected Bluetooth device.

# Description:
Send1ByteNumberMethods = 1바이트숫자보내기

# Description:
Send2ByteNumberMethodDescriptions = Send a 2-byte number to the connected Bluetooth device.

# Description:
Send2ByteNumberMethods = 2바이트숫자보내기

# Description:
Send4ByteNumberMethodDescriptions = Send a 4-byte number to the connected Bluetooth device.

# Description:
Send4ByteNumberMethods = 4바이트숫자보내기

# Description:
SendBallotMethodDescriptions = 완성 된 투표 용지를 웹 서비스로 보냅니다. 응용 프로그램에서 <code> UserId </ code> 및 <code> UserChoice </ code> 속성을 설정해야 호출됩니다.

# Description:
SendBallotMethods = 투표보내기

# Description:
SendBytesMethodDescriptions = Send a list of byte values to the connected Bluetooth device.

# Description:
SendBytesMethods = 바이트보내기

# Description:
SendMessageEvents = 메시지보내기

# Description:
SendMessageMethodDescriptions = Send a text message

# Description:
SendMessageMethods = 메시지보내기

# Description:
SendQueryMethodDescriptions = Send the query to the Fusiontables server.

# Description:
SendQueryMethods = 쿼리보내기

# Description:
SendTextMethodDescriptions = Send text to the connected Bluetooth device.

# Description:
SendTextMethods = 텍스트보내기

# Description:
SensitivityProperties = 민감도

# Description:
SensitivityPropertyDescriptions = A number that encodes how sensitive the accelerometer is. The choices are: 1 = weak, 2 = moderate, 3 = strong.

# Description:
SensorPortProperties = 센서포트

# Description:
SensorPortPropertyDescriptions = The sensor port that the sensor is connected to.

# Description:
SensorValueChangedEventDescriptions = Called then the sensor value changed.

# Description:
SensorValueChangedEventEnabledProperties = SensorValueChangedEventEnabled

# Description:
SensorValueChangedEventEnabledPropertyDescriptions = Whether the SensorValueChanged event should fire when the sensor value changed.

# Description:
SensorValueChangedEvents = 센서값이변경되었을때

# Description:
ServerCommandFailureEventDescriptions = Indicates that a server command failed.

# Description:
ServerCommandFailureEvents = 서버명령이실패했을때

# Description:
ServerCommandMethodDescriptions = Sends the specified command to the game server.

# Description:
ServerCommandMethods = 서버명령보내기

# Description:
ServerCommandSuccessEventDescriptions = Indicates that a server command returned successfully.

# Description:
ServerCommandSuccessEvents = 서버명령이성공했을때

# Description:
ServiceAccountEmailProperties = 서비스계정이메일

# Description:
ServiceAccountEmailPropertyDescriptions = The Service Account Email Address when service account authentication is in use.

# Description:
ServiceURLProperties = 서비스URL

# Description:
ServiceURLPropertyDescriptions = The URL of the Voting service

# Description:
ServiceUrlProperties = 서비스URL

# Description:
ServiceUrlPropertyDescriptions = The URL of the game server.

# Description:
SetAmbientModeMethodDescriptions = Make the sensor read the light level without reflected light.

# Description:
SetAmbientModeMethods = 주변모드로설정하기

# Description:
SetAngleModeMethodDescriptions = Measures the orientation of the sensor.

# Description:
SetAngleModeMethods = 각도모드로설정하기

# Description:
SetBackgroundPixelColorMethodDescriptions = Sets the color of the specified point. This differs from DrawPoint by having an argument for color.

# Description:
SetBackgroundPixelColorMethods = 배경픽셀색상지정하기

# Description:
SetBrickNameMethodDescriptions = Set the brick name of the robot.

# Description:
SetBrickNameMethods = 브릭이름지정하기

# Description:
SetCenterMethodDescriptions = Moves the Rectangle so that it is centered on the given latitude and longitude while attempting to maintain the width and height of the Rectangle as measured from the center to the edges.

# Description:
SetCenterMethods = 중심정하기

# Description:
SetCmUnitMethodDescriptions = Measure the distance in centimeters.

# Description:
SetCmUnitMethods = 단위를센치미터로정하기

# Description:
SetColorModeMethodDescriptions = Enter the color detection mode.

# Description:
SetColorModeMethods = 색상모드로설정하기

# Description:
SetDateToDisplayFromInstantMethodDescriptions = Allows the user to set the date from the instant to be displayed when the date picker opens.

# Description:
SetDateToDisplayFromInstantMethods = 인스턴트로표시할날짜설정하기

# Description:
SetDateToDisplayMethodDescriptions = Allows the user to set the date to be displayed when the date picker opens.Valid values for the month field are 1-12 and 1-31 for the day field.

# Description:
SetDateToDisplayMethods = 표시할날짜설정하기

# Description:
SetInchUnitMethodDescriptions = Measure the distance in inches.

# Description:
SetInchUnitMethods = 단위를인치로설정하기

# Description:
SetInputModeMethodDescriptions = Configure an input sensor on the robot.

# Description:
SetInputModeMethods = 입력모드로설정하기

# Description:
SetInstanceMethodDescriptions = Sets InstanceId and joins the specified instance.

# Description:
SetInstanceMethods = 인스턴스설정하기

# Description:
SetLeaderMethodDescriptions = Tells the server to set the leader to playerId. Only the current leader may successfully set a new leader.

# Description:
SetLeaderMethods = 리더설정하기

# Description:
SetLocationMethodDescriptions = Set the location of the marker.

# Description:
SetLocationMethods = 위치설정하기

# Description:
SetOutputStateMethodDescriptions = Sets the output state of a motor on the robot.

# Description:
SetOutputStateMethods = 출력상태설정하기

# Description:
SetRateModeMethodDescriptions = Measures the angular velocity of the sensor.

# Description:
SetRateModeMethods = 속도모드로설정하기

# Description:
SetReflectedModeMethodDescriptions = Make the sensor read the light level with reflected light.

# Description:
SetReflectedModeMethods = SetReflectedMode

# Description:
SetStatusMethods = 상태설정하기

# Description:
SetTimeToDisplayFromInstantMethodDescriptions = Set the time from the instant to be shown in the Time Picker popup. Current time is shown by default.

# Description:
SetTimeToDisplayFromInstantMethods = 인스턴트에서표시할시간설정하기

# Description:
SetTimeToDisplayMethodDescriptions = Set the time to be shown in the Time Picker popup. Current time is shown by default.

# Description:
SetTimeToDisplayMethods = 표시할시간설정하기

# Description:
ShakingEventDescriptions = Indicates the device started being shaken or continues to be shaken.

# Description:
ShakingEvents = 흔들렸을때

# Description:
ShapeProperties = 모양

# Description:
ShapePropertyDescriptions = Specifies the button''s shape (default, rounded, rectangular, oval). The shape will not be visible if an Image is being displayed.

# Description:
ShareFileMethodDescriptions = Shares a file through any capable application installed on the phone by displaying a list of the available apps and allowing the user to choose one from the list. The selected app will open with the file inserted on it.

# Description:
ShareFileMethods = 파일공유하기

# Description:
ShareFileWithMessageMethodDescriptions = Shares both a file and a message through any capable application installed on the phone by displaying a list of available apps and allowing the user to choose one from the list. The selected app will open with the file and message inserted on it.

# Description:
ShareFileWithMessageMethods = 메시지와함께파일공유하기

# Description:
ShareMessageMethodDescriptions = Shares a message through any capable application installed on the phone by displaying a list of the available apps and allowing the user to choose one from the list. The selected app will open with the message inserted on it.

# Description:
ShareMessageMethods = 메시지공유하기

# Description:
SharingHelpStringComponentPallette = 공유는 앱과 기기에 설치된 다른 앱간에 파일 및 / 또는 메시지를 공유 할 수있는 보이지 않는 구성 요소입니다. 구성 요소에는 제공된 정보를 처리 할 수있는 설치된 앱 목록이 표시되며 사용자가 메일 앱, 소셜 네트워크 앱, 문자 메시지 앱 등과 같이 콘텐츠를 공유하도록 선택할 수 있습니다. <br> 파일 경로는 카메라 또는 ImagePicker와 같은 다른 구성 요소에서 직접 가져올 수 있지만 저장 장치에서 읽기 위해 직접 지정할 수도 있습니다. 다른 장치는 저장 장치를 다르게 취급하므로 예를 들어 <code> Appinventor / assets </ code> 폴더에 arrow.gif라는 파일이있는 경우 다음과 같이 시도하십시오. <ul> <li > <code> \"file : ///sdcard/Appinventor/assets/arrow.gif\"</ code> </ li> 또는 <li> <code> \"/ storage / Appinventor / assets / arrow.gif\"</ code> > </ li> </ ul>

# Description:
ShowAlertMethodDescriptions = Display a temporary notification

# Description:
ShowAlertMethods = 경고창보이기

# Description:
ShowChooseDialogMethodDescriptions = Shows a dialog box with two buttons, from which the user can choose. If cancelable is true there will be an additional CANCEL button. Pressing a button will raise the AfterChoosing event. The \"choice\" parameter to AfterChoosing will be the text on the button that was pressed, or \"Cancel\" if the CANCEL button was pressed.

# Description:
ShowChooseDialogMethods = 선택대화창보이기

# Description:
ShowCompassProperties = 나침반보이기

# Description:
ShowCompassPropertyDescriptions = Show a compass icon rotated based on user orientation.

# Description:
ShowFeedbackProperties = 피드백보이기

# Description:
ShowFeedbackPropertyDescriptions = Specifies if a visual feedback should be shown for a button that as an image as background.

# Description:
ShowFilterBarProperties = 필터바보이기

# Description:
ShowFilterBarPropertyDescriptions = Sets visibility of ShowFilterBar. True will show the bar, False will hide it.

# Description:
ShowInfoboxMethodDescriptions = Show the infobox for the feature. This will show the infobox even if

# Description:
ShowInfoboxMethods = 정보창보이기

# Description:
ShowListsAsJsonProperties = JSON형식으로리스트보기

# Description:
ShowListsAsJsonPropertyDescriptions = false이면 목록은 Lisp 표기법을 사용하여 문자열로 변환됩니다 (예 : (a 1 b2 (cd), true이면 목록이 Json 또는 Python과 같이 나타납니다. 예 : [ \"a\", 1 , \"b\", 2, [ \"c\", \"d\"]]이 속성은 Screen 1에만 나타나며 Screen 1의 값은 모든 스크린의 동작을 결정합니다. JSON / Python 구문이 필요한 경우 Inventor 프로그래머는이를 명시 적으로 \"true\"로 설정해야합니다. 미래의 어느 시점에서 기본적으로이 속성이 \"true\"로 설정된 새 프로젝트가 만들어 지도록 시스템을 변경합니다. App Inventor 프로그래머는 필요하다면 새로운 프로젝트에서 \"false\"로 설정할 수도 있습니다.

# Description:
ShowLoadingDialogProperties = 로딩창보이기

# Description:
ShowLoadingDialogPropertyDescriptions = Whether or not to show the loading dialog

# Description:
ShowMessageDialogMethodDescriptions = Display an alert dialog with a single button that dismisses the alert.

# Description:
ShowMessageDialogMethods = 메시지창보이기

# Description:
ShowProgressDialogMethodDescriptions = Shows a dialog box with an optional title and message (use empty strings if they are not wanted). This dialog box contains a spinning artifact to indicate that the program is working. It cannot be canceled by the user but must be dismissed by the App Inventor Program by using the DismissProgressDialog block.

# Description:
ShowProgressDialogMethods = 진행대화창보이기

# Description:
ShowScaleProperties = 축척보기

# Description:
ShowScalePropertyDescriptions = Shows a scale reference on the map.

# Description:
ShowStatusBarProperties = 상태바보이기

# Description:
ShowStatusBarPropertyDescriptions = The status bar is the topmost bar on the screen. This property reports whether the status bar is visible.

# Description:
ShowTextDialogMethodDescriptions = Shows a dialog box where the user can enter text, after which the AfterTextInput event will be raised. If cancelable is true there will be an additional CANCEL button. Entering text will raise the AfterTextInput event. The \"response\" parameter to AfterTextInput will be the text that was entered, or \"Cancel\" if the CANCEL button was pressed.

# Description:
ShowTextDialogMethods = 텍스트대화창보이기

# Description:
ShowUserProperties = 사용자보이기

# Description:
ShowUserPropertyDescriptions = Show the user''s location on the map.

# Description:
ShowZoomProperties = 줌보이기

# Description:
ShowZoomPropertyDescriptions = Show zoom buttons on the map.

# Description:
SimpleStepEventDescriptions = This event is run when a raw step is detected

# Description:
SimpleStepEvents = 간단한걸음이감지되었을때

# Description:
SimpleStepsProperties = 간단걸음

# Description:
SimpleStepsPropertyDescriptions = The number of simple steps taken since the pedometer has started.

# Description:
SizingProperties = 크기조정

# Description:
SizingPropertyDescriptions = If set to fixed, screen layouts will be created for a single fixed-size screen and autoscaled. If set to responsive, screen layouts will use the actual resolution of the device. See the documentation on responsive design in App Inventor for more information. This property appears on Screen1 only and controls the sizing for all screens in the app.

# Description:
SliderHelpStringComponentPallette = 슬라이더는 조정 컨트롤을 드래그하여 진행 상태를 표시하는 컴포넌트이다. 조정 컨트롤을 터치하여 왼쪽이나 오른쪽으로 드래그하면 슬라이더 조정 컨트롤의 위치를 바꿀 수 있다. 슬라이더 조정 컨트롤이 드래그되면, 위치 변경됨 이벤트가 발생하여 슬라이더 조정 컨트롤의 위치를 알려준다. 슬라이더의 변경된 조정 컨트롤 위치 값은 텍스트 상자의 글꼴 크기, 공의 반지름과 같은 다른 컴포넌트의 속성을 동적으로 업데이트 하는데 사용됩니다.

# Description:
SoundHelpStringComponentPallette = <p> 사운드 파일을 재생하고 선택적으로 블록 편집기에 지정된 밀리 초 (천분의 1 초) 동안 진동하는 멀티미디어 구성 요소입니다. 재생할 사운드 파일의 이름은 Designer 또는 블록 편집기에서 지정할 수 있습니다. </ p> <p> 지원되는 사운드 파일 형식은 <a href = \"http://developer.android.com/ </ p> <p>이 <code> 사운드 </ code> 구성 요소는 다음과 같은 짧은 사운드 파일에 가장 적합합니다. </ p> <p> <code> Player </ code> 구성 요소는 노래와 같이 더 긴 사운드에 더 효율적입니다. </ p> <p> 소스를 설정 한 후 즉시 사운드를 재생하려고하면 오류가 발생할 수 있습니다 . </ p>

# Description:
SoundRecorderHelpStringComponentPallette = <p> 오디오를 녹음하는 멀티미디어 구성 요소입니다. </ p>

# Description:
SourceProperties = 소스

# Description:
SourcePropertyDescriptions = The \"path\" to the video. Usually, this will be the name of the video file, which should be added in the Designer.

# Description:
SouthLatitudeProperties = 남위

# Description:
SouthLatitudePropertyDescriptions = 

# Description:
SpeakMethodDescriptions = Speaks the given message.

# Description:
SpeakMethods = 말하기

# Description:
SpeechRateProperties = 말하기속도

# Description:
SpeechRatePropertyDescriptions = Sets the SpeechRate for TextToSpeech. The values should be between 0 and 2 where lower values slow down the pitch and greater values accelerate it.

# Description:
SpeechRecognizerHelpStringComponentPallette = 음성 인식 기능을 입력된 말을 글로 변환해주는 컴포넌트입니다.

# Description:
SpeedProperties = 속도

# Description:
SpeedPropertyDescriptions = he speed at which the sprite moves. The sprite moves this many pixels every interval.

# Description:
SpinnerHelpStringComponentPallette = <p> 요소 목록이있는 팝업을 표시하는 스피너 구성 요소입니다. 이러한 요소는 <code> ElementsFromString </ code> 속성을 문자열로 구분 된 연결 (예 : <em> 선택 사항 1, 선택 사항 2, 선택 항목 3 </ em>)으로 설정하여 디자이너 또는 블록 편집기에서 설정할 수 있습니다. 블록 편집기에서 <code> 요소 </ code> 속성을 목록으로 설정하십시오. 스피너는 이미 선택된 첫 번째 항목으로 생성됩니다. 따라서 Picking 이벤트를 생성하지 않습니다. 따라서 첫 번째 Spinner 항목을 \"아래에서 선택 ...\"과 같이 선택하지 않는 것이 유용합니다. </ p>

# Description:
StartActivityMethodDescriptions = Start the activity corresponding to this ActivityStarter.

# Description:
StartActivityMethods = 액티비티시작하기

# Description:
StartDragEventDescriptions = The user started a drag operation.

# Description:
StartDragEvents = 드래그를시작했을때

# Description:
StartMethodDescriptions = Starts playback of the video.

# Description:
StartMethods = 시작하기

# Description:
StartProgramMethodDescriptions = Start execution of a previously downloaded program on the robot.

# Description:
StartProgramMethods = 프로그램시작하기

# Description:
StartedMovingEventDescriptions = Event for StartedMoving

# Description:
StartedMovingEvents = 움직임이시작되었을때

# Description:
StartedRecordingEventDescriptions = Indicates that the recorder has started, and can be stopped.

# Description:
StartedRecordingEvents = 녹음이시작되었을때

# Description:
StatusChangedEventDescriptions = Indicates that the status of the location provider service has changed, such as when a provider is lost or a new provider starts being used.

# Description:
StatusChangedEvents = 상태가변경되었을때

# Description:
StopAcceptingMethodDescriptions = Stop accepting an incoming connection.

# Description:
StopAcceptingMethods = 수신정지하기

# Description:
StopBeforeDisconnectProperties = 연결끊기전에중지하기

# Description:
StopBeforeDisconnectPropertyDescriptions = Whether to stop the drive motors before disconnecting.

# Description:
StopDetectionTimeoutProperties = 정지감지시간

# Description:
StopDetectionTimeoutPropertyDescriptions = 유휴 상태 (아무 단계도 감지되지 않음)가 경과 한 후 \"중지됨\"상태가되는 기간 (밀리 초)

# Description:
StopDragEventDescriptions = The user stopped a drag operation.

# Description:
StopDragEvents = 드래그를멈추었을때

# Description:
StopFollowingMethodDescriptions = Stops following a user.

# Description:
StopFollowingMethods = 언팔로우

# Description:
StopMethodDescriptions = Stops recording.

# Description:
StopMethods = 정지

# Description:
StopProgramMethodDescriptions = Stop execution of the currently running program on the robot.

# Description:
StopProgramMethods = 프로그램정지하기

# Description:
StopSoundMethodDescriptions = Stop any sound on the robot.

# Description:
StopSoundMethods = 소리정지하기

# Description:
StopSoundPlaybackMethodDescriptions = Stop sound playback.

# Description:
StopSoundPlaybackMethods = 소리재생정지하기

# Description:
StoppedMovingEventDescriptions = Event for StoppedMoving

# Description:
StoppedMovingEvents = 움직임이정지되었을때

# Description:
StoppedRecordingEventDescriptions = Indicates that the recorder has stopped, and can be started again.

# Description:
StoppedRecordingEvents = 녹음이정지되었을때

# Description:
StoreValueMethodDescriptions = Asks the Web service to store the given value under the given tag

# Description:
StoreValueMethods = 값저장하기

# Description:
StrideLengthProperties = 보폭

# Description:
StrideLengthPropertyDescriptions = Set the average stride length in meters.

# Description:
StrokeColorProperties = 윤곽선색상

# Description:
StrokeColorPropertyDescriptions = The paint color used to outline the map feature.

# Description:
StrokeWidthProperties = 윤곽선두께

# Description:
StrokeWidthPropertyDescriptions = The width of the stroke used to outline the map feature.

# Description:
SystemTimeMethodDescriptions = The phone''s internal time

# Description:
SystemTimeMethods = 시스템시간가져오기

# Description:
TableArrangementHelpStringComponentPallette = <p> 표 형식으로 표시되어야하는 구성 요소를 배치 할 형식 지정 요소입니다. </ p>

# Description:
TachoCountChangedEventDescriptions = Called when the tacho count has changed.

# Description:
TachoCountChangedEventEnabledProperties = 타코카운트변경이벤트활성화

# Description:
TachoCountChangedEventEnabledPropertyDescriptions = Whether the TachoCountChanged event should fire when the angle is changed.

# Description:
TachoCountChangedEvents = 타코카운트가변경되었을때

# Description:
TagListEventDescriptions = 알려진 태그 목록을 받았을 때 트리거되는 이벤트입니다. \"GetTagList\"기능과 함께 사용됩니다.

# Description:
TagListEvents = 태그리스트를받았을때

# Description:
TagReadEventDescriptions = Indicates that a new tag has been detected. Currently this is only a plain text tag, as specified in the manifest. See Compiler.java.

# Description:
TagReadEvents = 태그를읽었을때

# Description:
TagWrittenEventDescriptions = Event for TagWritten

# Description:
TagWrittenEvents = 태그를작성했을때

# Description:
TakePictureMethodDescriptions = Takes a picture, then raises the AfterPicture event. If useFront is true, adds an extra to the intent that requests the front-facing camera.

# Description:
TakePictureMethods = 사진찍기

# Description:
TapAtPointEventDescriptions = The user tapped at a point on the map.

# Description:
TapAtPointEvents = 좌표를탭했을때

# Description:
TextAlignmentProperties = 텍스트정렬

# Description:
TextAlignmentPropertyDescriptions = Left, center, or right.

# Description:
TextBoxHelpStringComponentPallette = <p> 사용자가 텍스트를 입력 할 수있는 상자입니다. 초기 또는 사용자가 입력 한 텍스트 값은 <code> 텍스트 </ code> 속성에 있습니다. 빈칸 인 경우 상자에 희미한 텍스트로 나타나는 <code> 힌트 </ code> 속성은 입력 할 내용에 대한 지침을 사용자에게 제공 할 수 있습니다. </ p> <p> <code> MultiLine </ code> > 속성은 텍스트가 둘 이상의 행을 가질 수 있는지 여부를 결정합니다. 한 줄의 텍스트 상자의 경우 사용자가 완료 키를 누르면 키보드가 자동으로 닫힙니다. 여러 줄 텍스트 상자의 키보드를 닫으려면 응용 프로그램에서 HideKeyboard 메서드를 사용하거나 뒤로 키를 누르십시오. </ p> <p> <code> NumbersOnly </ code> 속성은 숫자 입력을 허용하도록 키보드를 제한합니다 텍스트 상자 (<code> TextAlignment </ code>, <code> BackgroundColor </ code> 등)의 모양과 사용 여부 (<code> </ p> <p> 텍스트 상자는 일반적으로 <code> Button </ code> 구성 요소와 함께 사용되며 텍스트 입력이 완료되면 사용자가 버튼을 클릭합니다. </ p> <p > 사용자가 입력 한 텍스트를 표시하지 않으려면 대신 <code> PasswordTextBox </ code>를 사용하십시오. </ p>

# Description:
TextColorProperties = 텍스트색상

# Description:
TextColorPropertyDescriptions = Color for button text.

# Description:
TextInputCanceledEventDescriptions = Event raised when the user canceled ShowTextDialog.

# Description:
TextInputCanceledEvents = 텍스트입력을취소했을때

# Description:
TextProperties = 텍스트

# Description:
TextPropertyDescriptions = Text to display on button.

# Description:
TextSizeProperties = 텍스트크기

# Description:
TextSizePropertyDescriptions = The text size of the listview items.

# Description:
TextToSpeechHelpStringComponentPallette = TestToSpeech 구성 요소는 주어진 텍스트를 소리내어 말합니다. 피치와 스피치 속도를 설정할 수 있습니다. <p> 언어 코드를 제공하여 언어를 설정할 수도 있습니다. 이것은 말의 실제 발음이 아닌 단어의 발음을 바꿉니다. 예를 들어, 언어를 프랑스어로 설정하고 영어로 말하면 프랑스어로 강조되는 영어 (en)를 말하는 사람처럼 들릴 것입니다. </ p> <p> 국가 코드를 제공하여 국가를 지정할 수도 있습니다. 이것은 발음에 영향을 줄 수 있습니다. 예를 들어 영국 영어 (GBR)는 미국 영어 (미국)와는 다른 발음을합니다. 모든 국가 코드가 모든 언어에 적용되는 것은 아닙니다. </ p> <p> 사용 가능한 언어 및 국가는 특정 장치에 따라 다르며 AvailableLanguages 및 AvailableCountries 속성으로 나열 할 수 있습니다. </ p>

# Description:
TextToWriteProperties = 작성할텍스트

# Description:
TextToWritePropertyDescriptions = 

# Description:
TextingHelpStringComponentPallette = <code> SendMessage </ code> 메소드가 호출 될 때 <code> Message </ code> 속성에 지정된 문자 메시지를 <code> PhoneNumber </ code> / code> 속성을 사용합니다. </ p> <p> <code> ReceivingEnabled </ code> 속성을 1로 설정하면 메시지를받지 못하게됩니다. <code> ReceivingEnabled </ code>가 2로 설정된 경우 메시지는 응용 프로그램이 실행 중일 때만 수신됩니다. 마지막으로 <code> ReceivingEnabled </ code>가 3으로 설정되어 있으면 응용 프로그램이 실행되고 있지 않을 때 응용 프로그램이 <b> 및 </ b> 실행 중일 때 메시지가 수신되고 대기 중이고 알림이 사용자에게 표시됩니다. </ p> <p> 메시지가 도착하면 <code> MessageReceived </ code> 이벤트가 발생하고 발신 번호와 메시지를 제공합니다. </ p> <p>이 구성 요소가 포함 된 앱은 그것은 배경에 있습니다 (즉, 화면에 보이지 않을 때). moreo는 앱이 실행 중이 지 않을지라도 전화에 설치되어있는 한. 앱이 포 그라운드에 있지 않을 때 휴대 전화가 문자 메시지를 수신하면 휴대 전화는 알림 바에 알림을 표시합니다. 알림을 선택하면 앱이 표시됩니다. 앱 개발자는 사용자가 문자 메시지를 무시하도록 ReceivingEnabled를 제어 할 수있는 권한을 사용자에게 부여하려고합니다. </ p> <p> GoogleVoiceEnabled 속성이 true이면 메시지를 보낼 수 있습니다 Google 보이스를 사용하는 Wi-Fi. 이 옵션을 사용하려면 사용자에게 Google 보이스 계정이 있어야하며 모바일 음성 앱이 휴대 전화에 설치되어 있어야합니다. Google 보이스 옵션은 Android 2.0 (Eclair) 이상을 지원하는 휴대 전화에서만 작동합니다. </ p> <p> 전화 번호 (예 : 650-555-1212)를 지정하려면 <code> PhoneNumber </ code> 속성을 지정된 자릿수의 텍스트 문자열 (예 : 6505551212)로 매핑합니다. 대시, 점 및 괄호가 포함될 수 있지만 (예 : (650) -555-1212) 무시됩니다. 공백이 포함되지 않을 수도 있습니다. </ p> <p> 앱이 전화 번호를 지정하는 또 다른 방법은 저장된 <code> PhoneNumberPicker </ code> 구성 요소를 사용하여 사용자가 전화 번호를 선택할 수있게하는 것입니다 전화의 연락처에서. </ p>

# Description:
ThemeProperties = 테마

# Description:
ThemePropertyDescriptions = Sets the theme used by the application.

# Description:
ThumbEnabledProperties = 섬네일활성화

# Description:
ThumbEnabledPropertyDescriptions = Sets whether or not to display the slider thumb.

# Description:
ThumbPositionProperties = 섬네일위치

# Description:
ThumbPositionPropertyDescriptions = Sets the position of the slider thumb. If this value is greater than MaxValue, then it will be set to same value as MaxValue. If this value is less than MinValue, then it will be set to same value as MinValue.

# Description:
TimeIntervalProperties = 시간간격

# Description:
TimeIntervalPropertyDescriptions = Determines the minimum time interval, in milliseconds, that the sensor will try to use for sending out location updates. However, location updates will only be received when the location of the phone actually changes, and use of the specified time interval is not guaranteed. For example, if 1000 is used as the time interval, location updates will never be fired sooner than 1000ms, but they may be fired anytime after.

# Description:
TimePickerHelpStringComponentPallette = <p> 버튼을 클릭하면 사용자가 시간을 선택할 수있는 팝업 대화 상자가 열립니다. </ p>

# Description:
TimerAlwaysFiresProperties = 타이머항상작동

# Description:
TimerAlwaysFiresPropertyDescriptions = Will fire even when application is not showing on the screen if true

# Description:
TimerEnabledProperties = 타이머활성화여부

# Description:
TimerEnabledPropertyDescriptions = Fires timer if true

# Description:
TimerEventDescriptions = Timer has gone off.

# Description:
TimerEvents = 타이머

# Description:
TimerIntervalProperties = 타이머간격

# Description:
TimerIntervalPropertyDescriptions = Interval between timer events in ms

# Description:
TinyDBHelpStringComponentPallette = TinyDB는 앱용 데이터를 저장하는 보이지 않는 구성 요소입니다. <p> App Inventor로 생성 된 앱은 실행될 때마다 초기화됩니다. 앱이 변수의 값을 설정하고 사용자가 앱을 종료하면 다음에 앱을 실행할 때 해당 변수의 값이 기억되지 않습니다. 반대로 TinyDB는 앱의 <em> 지속적인 </ em> 데이터 저장소입니다. 즉, 앱을 실행할 때마다 저장된 데이터가 사용 가능할 것입니다. 게임을 할 때마다 높은 점수를 저장하고 검색하는 게임이 그 예가 될 수 있습니다. </ p> <p> 데이터 항목은 <em> 태그 </ em>에 저장된 문자열입니다. 데이터 항목을 저장하려면 태그를 저장해야합니다. 결과적으로, 주어진 태그 아래에 저장된 데이터를 검색 할 수 있습니다. </ p> <p> 앱 당 데이터 저장소는 하나뿐입니다. 여러 개의 TinyDB 구성 요소가 있더라도 동일한 데이터 저장소를 사용합니다. 개별 상점의 효과를 얻으려면 다른 키를 사용하십시오. 또한 각 앱마다 자체 데이터 저장소가 있습니다. TinyDB를 사용하여 멀티 스크린 앱의 서로 다른 화면간에 데이터를 공유 할 수 있지만 </ em> TinyDB를 사용하여 휴대 전화의 두 가지 앱간에 데이터를 전달할 수는 없습니다. </ p> <p> AI Companion을 사용하여 앱을 개발할 때 해당 컴패니언을 사용하는 모든 앱은 동일한 TinyDb를 공유합니다. 앱을 패키징하면 공유가 사라집니다. 하지만 개발 중에는 새로운 앱을 만들 때마다 TinyDb를 삭제해야합니다. </ p>

# Description:
TinyWebDBHelpStringComponentPallette = 정보를 저장하고 검색하기 위해 웹 서비스와 통신하는 숨겨진 컴포넌트입니다.

# Description:
TitleProperties = 제목

# Description:
TitlePropertyDescriptions = The title displayed in the info window that appears when the user clicks on the map feature.

# Description:
TitleVisibleProperties = 제목보이기

# Description:
TitleVisiblePropertyDescriptions = The title bar is the top gray bar on the screen. This property reports whether the title bar is visible.

# Description:
ToggleDirectionMethodDescriptions = Toggle the direction of motors.

# Description:
ToggleDirectionMethods = 방향뒤바꾸기

# Description:
TokenProperties = 토큰

# Description:
TokenPropertyDescriptions = This field contains the authentication token used to login to the backed Redis server. For the \"DEFAULT\" server, do not edit this value, the system will fill it in for you. A system administrator may also provide a special value to you which can be used to share data between multiple projects from multiple people. If using your own Redis server, set a password in the server''s config and enter it here.

# Description:
TopOfRangeProperties = 범위상한선

# Description:
TopOfRangePropertyDescriptions = The top of the range used for the BelowRange, WithinRange, and AboveRange events.

# Description:
TouchDownEventDescriptions = Indicates that the button was pressed down.

# Description:
TouchDownEvents = 터치다운했을때

# Description:
TouchUpEventDescriptions = Indicates that a button has been released.

# Description:
TouchUpEvents = 터치업했을때

# Description:
TouchedEventDescriptions = When the user touches the sprite and then immediately lifts finger: provides the (x,y) position of the touch, relative to the upper left of the canvas

# Description:
TouchedEvents = 터치했을때

# Description:
TurnClockwiseIndefinitelyMethodDescriptions = Turn the robot clockwise indefinitely, with the specified percentage of maximum power, by powering the left drive motor forward and the right drive motor backward.

# Description:
TurnClockwiseIndefinitelyMethods = 계속시계방향으로돌기

# Description:
TurnCounterClockwiseIndefinitelyMethodDescriptions = Turn the robot counterclockwise indefinitely, with the specified percentage of maximum power, by powering the right drive motor forward and the left drive motor backward.

# Description:
TurnCounterClockwiseIndefinitelyMethods = 계속시계반대방향으로돌기

# Description:
TutorialURLProperties = 튜토리얼URL

# Description:
TutorialURLPropertyDescriptions = A URL to use to populate the Tutorial Sidebar while editing a project. Used as a teaching aid.

# Description:
TweetMethodDescriptions = 이렇게하면 지정한 텍스트가있는 로그인 사용자로 트윗이 전송되고 160자를 초과하면 트림됩니다. <p> <u> 요구 사항 </ u> : 사용자가 트위터에 성공적으로 로그인했음을 나타내는 <code> IsAuthorized </ code> 이벤트가 발생한 후에 만 호출해야합니다. </ p>

# Description:
TweetMethods = 트윗하기

# Description:
TweetWithImageMethodDescriptions = 이렇게하면 지정한 텍스트와 업로드 할 이미지의 경로가있는 로그인 한 사용자로 트윗이 전송되고 160자를 초과하면 트림됩니다. 이미지가 발견되지 않거나 유효하지 않은 경우 텍스트 만 트윗됩니다. <p> <u> 요구 사항 </ u> : <code> IsAuthorized </ code> 이벤트가 발생한 후에 만 호출해야합니다. 사용자가 성공적으로 트위터에 로그인했습니다. </ p>

# Description:
TweetWithImageMethods = 이미지와함께트윗하기

# Description:
TwitPic_API_KeyProperties = TwitPic_API_키

# Description:
TwitPic_API_KeyPropertyDescriptions = The API Key for image uploading, provided by TwitPic.

# Description:
TwitterHelpStringComponentPallette = <a href=\"http://www.twitter.com\" target=\"_blank\"> Twitter </a>와 통신 할 수있는 보이지 않는 구성 요소입니다. 사용자가 트위터 계정에 로그인하면 <code> IsAuthorized </ code> 이벤트에 의해 승인이 성공적으로 확인되었습니다. <ul> <li> 트위터에서 트윗이나 라벨을 검색합니다 (< (<code> Tweet </ code>) </ li> <li> 이미지로 트윗 보내기 (<code> TweetWithImage </ code>) </ li> </ li> <li> 특정 사용자 (<code> DirectMessage </ code>)에게 메시지 전달 </ li> <li> 로그인 한 사용자에게 가장 최근 메시지 (<code> RequestDirectMessages < / code>) </ li> <li> 특정 사용자 (<code> 팔로우 </ code>) </ li> (<code> RequestFollowers </ code>) </ li> <li> 로그인 한 사용자 (<code> RequestFollowers </ code>) 다음 사용자 목록 가져 오기 </ li> > RequestFriendTimeline </ code>) </ li> <li> 로그인 한 사용자의 가장 최근 언급을 얻으십시오 (<code> RequestMentions </ code> >) </ li> </ ul> </ p> <p> http://twitter.com/oauth_clients/new에서 앱과 관련된 Twitter 인증을위한 소비자 키와 소비자 비밀번호를 받아야합니다

# Description:
TypeProperties = 유형

# Description:
TypePropertyDescriptions = 지형지 물의 유형입니다. 사각형의 경우 \"Rectangle\"텍스트를 반환합니다.

# Description:
UnauthenticateMethodDescriptions = If you are having difficulty with the Companion and you are switching between different Firebase accounts, you may need to use this function to clear internal Firebase caches. You can just use the \"Do It\" function on this block in the blocks editor. Note: You should not normally need to use this block as part of an application.

# Description:
UnauthenticateMethods = 인증취소하기

# Description:
UnitProperties = 단위

# Description:
UnitPropertyDescriptions = 거리 단위. \"cm\"또는 \"inch\"중 하나 일 수 있습니다.

# Description:
UnspecifiedPropertyCategory = 불특정

# Description:
UriDecodeMethodDescriptions = Decodes the encoded text value.

# Description:
UriDecodeMethods = URI디코딩하기

# Description:
UriEncodeMethodDescriptions = Encodes the given text value so that it can be used in a URL.

# Description:
UriEncodeMethods = URI인코딩하기

# Description:
UrlProperties = URL

# Description:
UrlPropertyDescriptions = The URL for the web request.

# Description:
UseExternalScannerProperties = 외부스캐너사용

# Description:
UseExternalScannerPropertyDescriptions = If true App Inventor will look for and use an external scanning program such as \"Bar Code Scanner.\"

# Description:
UseFrontProperties = 전면카메라사용

# Description:
UseFrontPropertyDescriptions = Specifies whether the front-facing camera should be used (when available). If the device does not have a front-facing camera, this option will be ignored and the camera will open normally.

# Description:
UseGPSProperties = GPS사용

# Description:
UseGPSPropertyDescriptions = 

# Description:
UseSSLProperties = SSL사용

# Description:
UseSSLPropertyDescriptions = Set to true to use SSL to talk to CloudDB/Redis server. This should be set to True for the \"DEFAULT\" server.

# Description:
UseServiceAuthenticationProperties = 서비스인증사용

# Description:
UseServiceAuthenticationPropertyDescriptions = Indicates whether a service account should be used for authentication

# Description:
UserChoiceProperties = 사용자선택

# Description:
UserChoicePropertyDescriptions = <code> SendBallot </ code> 전에 서버에 보낼 투표 선택이 호출됩니다. 이것은 <code> BallotOptions </ code> 중 하나 여야합니다.

# Description:
UserEmailAddressProperties = 사용자이메일주소

# Description:
UserEmailAddressPropertyDescriptions = The email address associated with this device. This property has been deprecated and always returns the empty text value.

# Description:
UserEmailAddressSetEventDescriptions = Indicates that the user email address has been set.

# Description:
UserEmailAddressSetEvents = 사용자이메일주소를설정했을때

# Description:
UserIdProperties = 사용자아이디

# Description:
UserIdPropertyDescriptions = 투표와 함께 투표 서버로 보내지는 유권자를 나타내는 텍스트. 이것은 <code> SendBallot </ code>이 호출되기 전에 설정되어야합니다.

# Description:
UserLatitudeProperties = 사용자위도

# Description:
UserLatitudePropertyDescriptions = Returns the user''s latitude if ShowUser is enabled.

# Description:
UserLongitudeProperties = 사용자경도

# Description:
UserLongitudePropertyDescriptions = Returns the user''s longitude if ShowUser is enabled.

# Description:
UsernameProperties = 사용자이름

# Description:
UsernamePropertyDescriptions = The user name of the authorized user. Empty if there is no authorized user.

# Description:
UsesLocationProperties = 위치정보사용

# Description:
UsesLocationPropertyDescriptions = Whether or not to give the application permission to use the Javascript geolocation API. This property is available only in the designer.

# Description:
ValueStoredEventDescriptions = Event indicating that a StoreValue server request has succeeded.

# Description:
ValueStoredEvents = 값이저장되었을때

# Description:
VersionCodeProperties = 버전코드

# Description:
VersionCodePropertyDescriptions = An integer value which must be incremented each time a new Android Application Package File (APK) is created for the Google Play Store.

# Description:
VersionNameProperties = 버전이름

# Description:
VersionNamePropertyDescriptions = A string which can be changed to allow Google Play Store users to distinguish between different versions of the App.

# Description:
VerticalArrangementHelpStringComponentPallette = <p> 아래에 표시되어야하는 구성 요소를 배치 할 형식 지정 요소입니다. (첫 번째 하위 구성 요소는 맨 위에 저장되고 두 번째 하위 구성 요소는 그 아래에 저장됩니다.) 구성 요소를 옆에 표시하려면 대신 <code> HorizontalArrangement </ code>를 사용하십시오. </ p>

# Description:
VerticalScrollArrangementHelpStringComponentPallette = <p> 아래에 표시되어야하는 구성 요소를 배치 할 형식 지정 요소입니다. (첫 번째 하위 구성 요소는 맨 위에 저장되고 두 번째 하위 구성 요소는 그 아래에 저장됩니다.) 구성 요소를 옆에 표시하려면 대신 <code> HorizontalArrangement </ code>를 사용하십시오. </ p> <p>이 버전 스크롤 가능하다

# Description:
VibrateMethodDescriptions = Vibrates for the specified number of milliseconds.

# Description:
VibrateMethods = 진동하기

# Description:
VideoPlayerHelpStringComponentPallette = 비디오를 재생할 수있는 멀티미디어 구성 요소. 응용 프로그램이 실행되면 VideoPlayer가 화면 상에 사각형으로 표시됩니다. 사용자가 사각형을 터치하면 컨트롤이 재생 / 일시 중지, 앞으로 건너 뛰기, 동영상 내에서 뒤로 건너 뛰기로 표시됩니다. 응용 프로그램은 <code> 시작 </ code>, <code> 일시 중지 </ code> 및 <code> SeekTo </ code> 메서드를 호출하여 동작을 제어 할 수도 있습니다. <p> 동영상 파일은 3GPP (.3gp) 또는 MPEG-4 (.mp4) 형식이어야합니다. 올바른 형식에 대한 자세한 내용은 <a href=\"http://developer.android.com/guide/appendix/media-formats.html\" target=\"_blank\"> Android 지원 미디어 형식 </a>을 참조하십시오. Android 용 App Inventor는 1MB 미만의 비디오 파일 만 허용하며 미디어 (비디오, 오디오 및 사운드) 파일 모두에 사용할 수있는 것은 아니지만 응용 프로그램의 전체 크기를 5MB로 제한합니다. 미디어 파일이 너무 크면 응용 프로그램을 패키징하거나 설치할 때 오류가 발생할 수 있습니다.이 경우 미디어 파일의 수 또는 파일 크기를 줄여야합니다. Windows Movie Maker 및 Apple iMovie와 같은 대부분의 비디오 편집 소프트웨어를 사용하면 비디오를 축소하거나 비디오를보다 압축 된 형식으로 다시 인코딩하여 비디오 크기를 줄일 수 있습니다. </ p> <p> 원본은 스트리밍 비디오를 가리키는 URL로 보내지 만 URL은 비디오를 재생하는 프로그램이 아니라 비디오 파일 자체를 가리켜 야합니다.

# Description:
ViewContactMethodDescriptions = view a contact via its URI

# Description:
ViewContactMethods = 연락처보기

# Description:
VisibleProperties = 보이기여부

# Description:
VisiblePropertyDescriptions = Specifies whether the component should be visible on the screen. Value is true if the component is showing and false if hidden.

# Description:
VolumeProperties = 볼륨

# Description:
VolumePropertyDescriptions = Sets the volume to a number between 0 and 100. Values less than 0 will be treated as 0, and values greater than 100 will be treated as 100.

# Description:
VotingHelpStringComponentPallette = 투표 구성 요소는 웹 서비스와 통신하여 투표 용지를 검색하고 사용자 투표를 되돌려 보냅니다. <p> 애플리케이션은 <code> Initialize </ code> 이벤트 핸들러에서 <code> RequestBallot </ code> 메소드를 호출하여 웹 서비스 (< code> ServiceURL </ code> 속성). 웹 서비스의 응답에 따라 시스템은 <ol> <li> <code> GotBallot </ code> 중 투표 질문과 옵션이 검색되었으며 속성 <code> 투표 결과가 없음을 나타내는 </ li> <li> <code> NoOpenPoll </ code>이 설정되었습니다. </ li> <li> 서비스가 합법적 인 응답을 제공하지 못했고 오류 메시지를 제공하고 있음을 나타내는 <code> WebServiceError </ code>를 사용합니다. </ li> </ ol> </ p> <p> <code> BallotOptions </ code> 중 하나를 선택하고 <code> UserChoice </ code> 속성을 해당 선택 항목으로 설정하십시오. <code> UserChoice </ code> 및 <code> UserId </ code>가 설정되면 응용 프로그램은 사용자가 투표 할 사용자를 지정하도록 <code> UserId </ code> 응용 프로그램은이 정보를 웹 서비스에 보내기 위해 <code> SendBallot </ code>을 호출 할 수 있습니다. 서비스가 투표를 성공적으로 받으면 <code> GotBallotConfirmation </ code> 이벤트가 발생합니다. 그렇지 않으면 적절한 오류 메시지와 함께 <code> WebServiceError </ code> 이벤트가 발생합니다. </ p>

# Description:
WalkStepEventDescriptions = This event is run when a walking step is detected. A walking step is a step that appears to be involved in forward motion.

# Description:
WalkStepEvents = 걸음이감지되었을때

# Description:
WalkStepsProperties = 걸음수

# Description:
WalkStepsPropertyDescriptions = the number of walk steps taken since the pedometer has started.

# Description:
WebHelpStringComponentPallette = HTTP GET, POST, PUT, DELETE 요청을 보내는 보이지 않는 컴포넌트입니다.

# Description:
WebRTCProperties = 웹RTC

# Description:
WebRTCPropertyDescriptions = If True we are using WebRTC to talk to the server.

# Description:
WebServiceErrorEventDescriptions = Event indicating that the communication with the Web service resulted in an error.

# Description:
WebServiceErrorEvents = 웹서비스오류

# Description:
WebViewStringChangeEventDescriptions = When the JavaScript calls AppInventor.setWebViewString this event is run.

# Description:
WebViewStringChangeEvents = 웹뷰문자열이변경되었을때

# Description:
WebViewStringProperties = 웹뷰문자열

# Description:
WebViewStringPropertyDescriptions = Gets the WebView''s String, which is viewable through Javascript in the WebView as the window.AppInventor object

# Description:
WebViewerHelpStringComponentPallette = 웹 페이지를보기위한 구성 요소. 홈 URL은 디자이너 또는 블록 편집기에서 지정할 수 있습니다. 탭을 클릭하면 링크를 따라갈 수 있도록 설정하고 사용자는 웹 양식을 작성할 수 있습니다. 경고 : 이것은 완전한 브라우저가 아닙니다. 예를 들어, 휴대 전화의 하드웨어 뒤로 키를 누르면 브라우저 기록으로 되돌아 가지 않고 앱이 종료됩니다. <p /> WebViewer.WebViewString 속성을 사용하면 Webviewer에서 실행중인 앱과 자바 스크립트 코드 사이에서 통신 할 수 있습니다 페이지. 응용 프로그램에서 WebViewString을 가져오고 설정합니다. WebViewer에는 methoods </ em getWebViewString () </ em> 및 <em> setWebViewString (text) </ em>을 사용하여 window.AppInventor 객체를 참조하는 자바 스크립트가 포함됩니다. <p /> 예를 들어 WebViewer가 Javascript 명령을 포함하는 페이지로 열리면 <br /> <em> document.write ( \"대답은\"+ window.AppInventor.getWebViewString ()); </ em> br /> WebView.WebVewString을 \"hello\"로 설정하면 웹 페이지에 </ br> <em> 답변이 안녕하세요 </ em>가 표시됩니다. <br /> 웹 페이지에 명령을 실행하는 자바 스크립트가 포함되어 있으면 <br /> <em> window.AppInventor.setWebViewString ( \"hello from Javascript\") </ em>, <br /> WebViewString 속성 값 <br /> <em> Javascript의 안녕하세요 </ em>가됩니다.

# Description:
WeekdayMethodDescriptions = The day of the week represented as a number from 1 (Sunday) to 7 (Saturday)

# Description:
WeekdayMethods = 요일

# Description:
WeekdayNameMethodDescriptions = The name of the day of the week

# Description:
WeekdayNameMethods = 요일이름

# Description:
WestLongitudeProperties = 서경

# Description:
WestLongitudePropertyDescriptions = 

# Description:
WheelDiameterProperties = 바퀴지름

# Description:
WheelDiameterPropertyDescriptions = The diameter of the wheels used for driving.

# Description:
WidthPercentProperties = 너비퍼센트

# Description:
WidthPercentPropertyDescriptions = 

# Description:
WidthProperties = 너비

# Description:
WidthPropertyDescriptions = 

# Description:
WithinRangeEventDescriptions = Distance has gone within the range.

# Description:
WithinRangeEventEnabledProperties = 범위내이벤트활성화

# Description:
WithinRangeEventEnabledPropertyDescriptions = Whether the WithinRange event should fire when the distance goes between the BottomOfRange and the TopOfRange.

# Description:
WithinRangeEvents = 범위내에있을때

# Description:
WriteTypeProperties = 쓰기타입

# Description:
WriteTypePropertyDescriptions = 

# Description:
XAccelProperties = X가속도

# Description:
XAccelPropertyDescriptions = 

# Description:
XAngularVelocityProperties = X각속도

# Description:
XAngularVelocityPropertyDescriptions = The angular velocity around the X axis, in degrees per second.

# Description:
XMLTextDecodeMethodDescriptions = Decodes the given XML string to produce a list structure. See the App Inventor documentation on \"Other topics, notes, and details\" for information.

# Description:
XMLTextDecodeMethods = XML텍스트디코딩하기

# Description:
XProperties = X

# Description:
XPropertyDescriptions = The horizontal coordinate of the left edge of the sprite, increasing as the sprite moves to the right.

# Description:
XmlTextParams = XML텍스트

# Description:
YAccelProperties = Y가속도

# Description:
YAccelPropertyDescriptions = 

# Description:
YAngularVelocityProperties = Y각속도

# Description:
YAngularVelocityPropertyDescriptions = The angular velocity around the Y axis, in degrees per second.

# Description:
YProperties = Y

# Description:
YPropertyDescriptions = The vertical coordinate of the top of the sprite, increasing as the sprite moves down.

# Description:
YandexTranslateHelpStringComponentPallette = 이 구성 요소를 사용하여 다른 언어로 된 단어와 문장을 번역 할 수 있습니다. 이 구성 요소는 Yandex.Translate 서비스에 대한 번역을 요청할 것이므로 인터넷에 액세스해야합니다. 2 자의 언어 코드를 사용하여 source-target 형식으로 소스 및 대상 언어를 지정하십시오. 따라서 \"en-es\"는 영어에서 스페인어로, \"es-ru\"는 스페인어에서 러시아어로 번역됩니다. 원본 언어를 생략하면 서비스에서 원본 언어를 검색합니다. 따라서 \"es\"를 제공하면 소스 언어를 감지하여 스페인어로 번역 할 수 있습니다. <p>>이 구성 요소는 Yandex 번역 서비스에서 제공됩니다. 사용 가능한 언어 목록과 언어 코드 및 상태 코드의 의미를 포함한 자세한 내용은 http://api.yandex.com/translate/를 참조하십시오. <p /> 참고 : 번역은 백그라운드에서 비동기 적으로 발생합니다. 번역이 완료되면 \"GotTranslation\"이벤트가 트리거됩니다.

# Description:
YearMethodDescriptions = The year

# Description:
YearMethods = 년

# Description:
YearProperties = 년

# Description:
YearPropertyDescriptions = the Year that was last picked using the DatePicker

# Description:
ZAccelProperties = Z가속도

# Description:
ZAccelPropertyDescriptions = 

# Description:
ZAngularVelocityProperties = Z각속도

# Description:
ZAngularVelocityPropertyDescriptions = The angular velocity around the Z axis, in degrees per second.

# Description:
ZProperties = Z

# Description:
ZPropertyDescriptions = How the sprite should be layered relative to other sprits, with higher-numbered layers in front of lower-numbered layers.

# Description:
ZoomChangeEventDescriptions = User has changed the zoom level of the map.

# Description:
ZoomChangeEvents = 줌이변경되었을때

# Description:
ZoomLevelProperties = 줌레벨

# Description:
ZoomLevelPropertyDescriptions = The zoom level of the map. Valid values of ZoomLevel are dependent on the tile provider and the latitude and longitude of the map. For example, zoom levels are more constrained over oceans than dense city centers to conserve space for storing tiles, so valid values may be 1-7 over ocean and 1-18 over cities. Tile providers may send warning or error tiles if the zoom level is too great for the server to support.

# Description: Label of the link for About
aboutMenuItem = 소개

# Description:
accelerometerSensorComponentPallette = 가속도센서

# Description:
accountDisabledMessage = 귀하의 계정은 사용중지되었습니다

# Description:
activityStarterComponentPallette = 액티비티스타터

# Description: Text on "Add..." button
addButton = 파일 올리기 ...

# Description: Label of the button for adding a new screen
addFormButton = 스크린 추가 ...

# Description: Error message reported when adding a form failed on the server.
addFormError = 서버 오류: 폼을 추가할 수 없습니다. 나중에 다시 시도해주세요!

# Description: Text on 'Add' button to continue with screen creation.
addScreenButton = 추가

# Description:
addressParams = 주소

# Description: Label of the button leading to admin functionality
adminTabName = 관리자

# Description: Error message when user tries to upload aia file as media asset
aiaMediaAsset = 이 파일을 사용하려면, 프로젝트 > 프로젝트 불러오기 (.aia)를 이용해 주세요 ...

# Description: URL for more info on using aia files properly
aiaMediaAssetHelp = http://appinventor.mit.edu/explore/ai2/share.html

# Description: Error message when user tries to upload aia file as media asset
aiaMediaAssetTitle = Error: Cannot upload .aia file as media asset

# Description:
altitudeParams = 고도

# Description:
angleParams = 각도

# Description:
animTypeParams = 애니메이션유형

# Description: Label on any-component branch of block selector tree
anyComponentLabel = 모든 컴포넌트

# Description:
apkInstalledToPhone = APK 파일이 스마트폰에서 설치됩니다.

# Description:
apkSavedToComputer = APK 파일이 다운로드 폴더에 저장됩니다.

# Description:
argumentsParams = 인자

# Description: Caption for asset list box.
assetListBoxCaption = 미디어

# Description: Caption and summary for Automatic choice
automaticCaption = 자동

# Description:
azimuthParams = 방위각

# Description: Text on 'Back' button to go back to the previous page of the wizard.
backButton = 뒤로

# Description: System error message for a bad alignment property editor
badAlignmentPropertyEditorForArrangement = 시스템 오류: 수평 또는 수직 배치의 잘못된 에디터 속성 값.

# Description: Default message for bad value for Horizontal Alignment
# 0=componentName
badValueForHorizontalAlignment = 시스템 오류: 수평배치 (레이아웃) 잘못된 값 - {0}.

# Description: Default message for bad value for Vartical Alignment
# 0=componentName
badValueForVerticalAlignment = 시스템 오류: 수직배치 (레이아웃) 잘못된 값 - {0}.

# Description:
ballComponentPallette = 공

# Description:
barcodeScannerComponentPallette = 바코드스캐너

# Description: Title of barcode dialog.
# 0=projectName
barcodeTitle = 바코드 링크 for {0}

# Description: Warning in barcode dialog.
# 0=aTagStart, 1=aTagEnd
barcodeWarning = 노트: 이 바코드는 2시간 동안만 유효합니다. 다른 기기들과 앱을 공유하는 방법은 {0} FAQ {1}의 정보를 참고하세요.

# Description:
bashWarningDialogButtonContinue = 멀티 세션으로 계속하기

# Description:
bashWarningDialogButtonNo = 멀티 세션 사용하지 않기

# Description:
bashWarningDialogMessage = <p> <font color = red> 경고 : </ font>이 계정에 대해 두 번째 App Inventor 세션이 열렸습니다. 두 세션 모두 계속 진행할 수 있지만 둘 이상의 세션에서 App Inventor를 동시에 사용하면 App Inventor 서버에서 복구 할 수없는 방식으로 블록이 손실 될 수 있습니다. </ p> <p> 동일한 계정에서 여러 세션을 엽니 다. 그러나 이런 방식으로 작업해야한다면 정기적으로 프로젝트를 로컬 컴퓨터로 내 보내야합니다. 그러면 App Inventor 서버와 별개로 백업 복사본을 얻을 수 있습니다. 프로젝트를 내보내려면 프로젝트 메뉴에서 \"내보내기\"를 사용하십시오. </ p>

# Description:
bashWarningDialogText = 계속해서 멀티 세션을 사용하시겠습니까?

# Description: Text for color choice 'Black'
blackColor = 검정

# Description:
blackTitleTheme = 검정 타일 텍스트

# Description: Caption for block selector box.
blockSelectorBoxCaption = 블록

# Description: Label of the button for opening the blocks editor when the it is already open
blocksEditorIsOpenButton = 블록 에디터가 열려있음

# Description: Tab name for blocks editor
# 0=formName
blocksEditorTabName = {0} 블록

# Description: Message when blocks fail to load properly
# 0=formName
blocksLoadFailure = 스크린{0} 의 블록을 올바르게 불러오지 못했습니다. 이 문제가 해결되기 전에는 블록 에디터에서 편집할 수 없습니다.

# Description: Message indicating that blocks changes were not saved
# 0=formName
blocksNotSaved = 블록 영역을 올바르게 불러오지 못했습니다. 스크린 {0} 의 블록에 대한 변경사항은 저장되지 않습니다.

# Description:
blocksTruncatedDialogButtonHTML = %1 초만 기다려주세요...

# Description:
blocksTruncatedDialogButtonNoSave = 이전 버전을 다시 불러옵니다.

# Description:
blocksTruncatedDialogButtonSave = 빈 스크린을 저장합니다

# Description:
blocksTruncatedDialogMessage = <p> <b> % 1 </ b>에 모든 블록이 제거 된 것 같습니다. </ p> <p> <ul> <li> 빈 화면을 저장하면 모든 블록이 영구적으로 사라집니다. </ li> <li> 또는 이전에 저장 한 프로젝트 버전을 복원 할 수 있습니다. </ li> </ ul> </ p>

# Description:
blocksTruncatedDialogText = 블록 작업공간이 비어있습니다

# Description: Text for color choice 'Blue'
blueColor = 파랑

# Description:
bluetoothClientComponentPallette = 블루투스클라이언트

# Description:
bluetoothServerComponentPallette = 블루투스서버

# Description: Error message reported when building a target failed on the server because of a network error.
buildError = 서버 오류: 대상을 빌드할 수 없습니다. 나중에 다시 시도해주세요!

# Description: Error message reported when a build failed due to an error in the build pipeline.
buildFailedError = 빌드 실패!

# Description: Message shown in the build output panel when a build is requested.
# 0=projectName, 1=time
buildRequestedMessage = {0} 의 빌드가 {1} 번 요청되었습니다.

# Description: Error message reported when the build server is temporarily too busy to accept a build request.
buildServerBusyError = 빌드 서버가 지금 매우 혼잡합니다. 몇 분후에 다시 시도해주세요.

# Description: Error message reported when the build server is running a different version of the App Inventor code.
buildServerDifferentVersion = 빌드 서버가 현재 버전의 앱 인벤터와 호환되지 않습니다.

# Description: Label of the button leading to build related cascade items
buildTabName = 빌드

# Description:
buildingApk = APK 빌드하기

# Description: Label on built-in-blocks branch of block selector tree
builtinBlocksLabel = 공통 블록

# Description: Label on built-in-Colors-blocks branch of block selector tree
builtinColorsLabel = 색상

# Description: Label on built-in-Control-blocks branch of block selector tree
builtinControlLabel = 제어

# Description: Label on built-in-Lists-blocks branch of block selector tree
builtinListsLabel = 리스트

# Description: Label on built-in-Logic-blocks branch of block selector tree
builtinLogicLabel = 논리

# Description: Label on built-in-Math-blocks branch of block selector tree
builtinMathLabel = 수학

# Description: Label on built-in-Procedures-blocks branch of block selector tree
builtinProceduresLabel = 함수

# Description: Label on built-in-Text-blocks branch of block selector tree
builtinTextLabel = 텍스트

# Description: Label on built-in-Variables-blocks branch of block selector tree
builtinVariablesLabel = 변수

# Description:
button1TextParams = 버튼1텍스트

# Description:
button2TextParams = 버튼2텍스트

# Description:
buttonComponentPallette = 버튼

# Description: Edit Profile Button, only seen by profile owner
buttonEditProfile = 프로필 수정

# Description: Label of the Send Email of reportlist
buttonSendEmail = 이메일 보내기

# Description:
buttonTextParams = 버튼텍스트

# Description: Update Profile Button, only seen by profile owner
buttonUpdateProfile = 프로필 업데이트

# Description:
camcorderComponentPallette = 캠코더

# Description:
cameraComponentPallette = 카메라

# Description: Label of the button for canceling the blocks editor launch
cancelBlocksEditorButton = 블록 에디터 여는 중... (클릭하여 취소)

# Description: Text on "Cancel" button.
cancelButton = 취소

# Description: Text on 'Dont Add' button to dismiss screen creation.
cancelScreenButton = 추가하지 마세요

# Description:
cancelableParams = 취소가능여부

# Description:
canvasComponentPallette = 캔버스

# Description: Text for text alignment choice 'center'
centerTextAlignment = 가운데

# Description:
centerXParams = 중심X

# Description:
centerYParams = 중심Y

# Description:
centroidParams = 중심여부

# Description:
centroidsParams = 중심여부

# Description:
checkBoxComponentPallette = 체크박스

# Description: Label of the button for checkpoint
checkpointButton = 체크포인트 ...

# Description: Name of Checkpoint menuitem
checkpointMenuItem = 체크포인트

# Description: Label in front of new name in checkpoint dialog.
checkpointNameLabel = 체크포인트 이름:

# Description: Title of checkpoint dialog.
# 0=projectName
checkpointTitle = 체크포인트 - {0}

# Description:
choiceParams = 선택

# Description: Message shown when there is no current file editor to switch to
chooseProject = 불러올 프로젝트를 선택하거나 새로운 프로젝트를 생성해주세요.

# Description:
circleComponentPallette = 원

# Description:
classicTheme = 클래식

# Description: Text on 'Clear' button
clearButton = 초기화

# Description:
clipParams = 클립

# Description:
clockComponentPallette = 시계

# Description:
cloudDBComponentPallette = 클라우드DB

# Description: Caption for context menu item for minimizing the box.
cmMinimize = 접기

# Description: Caption for context menu item for resizing the box.
cmResize = 크기 조정…

# Description: Caption for context menu item for restoring a minimized box.
cmRestore = 펼치기

# Description:
colorCodeParams = 색상코드

# Description:
colorNameParams = 색상이름

# Description:
colorParams = 색상

# Description:
columnsParams = 열

# Description:
commandParams = 명령

# Description: Information about the Companion
companionInformation = 컴패니언 정보

# Description: Menu item to update the Companion to the latest version
companionUpdate = 컴패니언 업데이트

# Description:
companionUpdateMustHaveProject = 컴패니언을 업데이트하려면 프로젝트를 열어야 합니다

# Description:
compilingPart1 = 컴파일링 파트 1

# Description:
compilingPart2 = 컴파일링 파트 2 (기다려 주세요)

# Description: Error message when the component database is not valid.
# 0=projectName
componentDatabaseCorrupt = \" {0} \"프로젝트의 구성 요소 데이터베이스가 손상되었습니다.

# Description: Error message reported when the component import failed
componentImportError = 확장기능 불러오기가 실패했습니다!

# Description:
componentImportFromComputer = 컴퓨터에서 불러오기

# Description: For importing from a URL
componentImportFromURL = URL

# Description: Error message reported when the component import failed due to unknown url
componentImportUnknownURLError = 알수 없는 URL 때문에 확장기능 불러오기가 실패했습니다

# Description: Caption for component import wizard.
componentImportWizardCaption = 프로젝트에 확장기능 불러오기

# Description: Caption for component Name Label in rename wizard.
componentNameLabel = 확장기능 이름

# Description:
componentParams = 컴포넌트

# Description: Caption for component rename wizard.
componentRenameWizardCaption = 확장기능 이름 변경

# Description: Alert message reported when the component import upgraded an already imported extension
componentUpgradedAlert = 확장기능 업그레이드 :

# Description: Caption for component upload wizard.
componentUploadWizardCaption = 컴포넌트 업로드 ..

# Description:
conditionsParams = 조건

# Description: Confirmation message for delete keystore
confirmDeleteKeystore = appengine.appengine.appengine.appengine.apple.appengine.png 당신이 동의하면, 이전 키 스토어 파일이 App Inventor 서버에서 완전히 제거 될 것입니다. 다음에 phone.appengine.appengine 프로젝트를 패키지로 만들 때 새로운 키 스토어 파일이 자동으로 생성됩니다. 삭제하려는 키 스토어를 사용하여 Google Play 스토어에 애플리케이션을 게시 한 경우 apps.appengine.appengine.appengine.appengine.Any. 향후 패키지하는 모든 프로젝트는 새 키 저장소 파일을 사용하여 서명됩니다. 키 저장소를 변경하면 이전에 설치된 응용 프로그램을 다시 설치하는 기능에 영향을줍니다. 이 작업을 수행 할 것인지 확실하지 않으면 \"도움말\", \"문제 해결\", \"키 스토어 및 응용 프로그램 서명\"appengine.appengine을 클릭하여 키 저장소 관련 문서를 읽으십시오. 삭제를위한 실행 취소는 없습니다. 키 스토어 파일

# Description: Confirmation message for selecting multiple projects and clicking delete
# 0=projectNames
confirmDeleteManyProjects = 이 프로젝트들을 정말로 삭제하시겠니까: {0} ?

# Description: Confirmation message for selecting multiple projects and clicking delete when gallery is on
# 0=projectNames
confirmDeleteManyProjectsWithGalleryOn = 이 프로젝트들을 삭제하시겠습니까: {0} ? 이 중 배포된 프로젝트가 있다면, 갤러리에 배포된 복사본도 같이 지워지게 됩니다.

# Description: Confirmation message for selecting a single project and clicking delete
# 0=projectName
confirmDeleteSingleProject = 이 프로젝트를 정말로 삭제하시겠습니까: {0} ?

# Description: Confirmation message for selecting a single project and clicking delete when gallery is on
# 0=projectName
confirmDeleteSinglePublishedProject = 이 프로젝트를 삭제하시겠습니까: {0} ? 갤러리에 배포된 프로젝트 복사본도 같이 지워지게 됩니다.

# Description: Confirmation message shown when conflicting files are about to be deleted.
# 0=newFile, 1=existingFile
confirmOverwrite = 저장 요청 {1}appengine.appengine. 같은 이름 {0}의 파일이 이미 이 project.appengine.에 존재합니다. 이전 파일을 삭제하시겠습니까?appengine.또한 {1}(과)와 겹치는 이름을 가진 다른 파일들도 삭제됩니다.

# Description: Confirmation message shown when keystore is about to be overwritten.
confirmOverwriteKeystore = 키 스토어 파일을 덮어 쓰시겠습니까? appengine.appengine.apple.appengine.appengine.apple.appengine.appengine.apple.appengine.appengine.apple.appengine.apple.appengine.apple.appengine.apple.appengine.apple.appengine.apple.appengine.apple.appengine.apple.appengine.apple.appengine.appengine.apple.appengine.appengine.apple.appengine.appengine.apple.appengine.appengine.apple.appengine.appengine.apple.appengine.appengine.apple.appengine.appengine.apple.appengine.appengine.apple.appengine.appengine.apple.appengine.appengine.apple.appengine.appengine.apple.appengine.appengine.apple.appengine.appengine.apple.appengine.appengine.apple.appengine.appengine.apple.appengine 덮어 쓰기를하면 응용 프로그램을 업데이트 할 수 없게됩니다 .appengine.appengine. 향후 패키지하는 모든 프로젝트는 새로운 키 저장소 파일을 사용하여 서명됩니다. 키 저장소를 변경하면 이전에 설치된 응용 프로그램을 다시 설치하는 기능에 영향을줍니다. 이 작업을 수행 할 것인지 확실하지 않으면 위의 \"도움말\", \"문제 해결\", \"키 스토어 및 응용 프로그램 서명\"appengine.appengine을 클릭하여 키 스토어 관련 문서를 읽으십시오. 덮어 쓰기에 대한 실행 취소는 없습니다. 키 스토어 파일

# Description: Label of the button for selecting phone connection
connectButton = 연결

# Description: Label of the button leading to Connect related cascade items
connectTabName = 연결

# Description:
connectivityComponentPallette = 연결

# Description:
contactPickerComponentPallette = 연락처선택

# Description:
contentsParams = 콘텐츠

# Description: Error message reported when copying a project failed on the server.
copyProjectError = 서버 오류: 프로젝트를 복사할 수 없습니다. 나중에 다시 시도해주세요!

# Description: Message that is shown to indicate that a copying RPC is going on
copyingRpcMessage = 복사 중 ...

# Description:
corruptionDialogMessage = <p> <b> 프로젝트를 읽는 동안 오류가 감지되었습니다. </ b> </ p> <p> 프로젝트가 손상되지 않도록하기 위해 세션이 종료되었습니다. 이 창을 닫을 수 있습니다. </ p>

# Description:
corruptionDialogText = 프로젝트 읽기 오류

# Description:
countParams = 개수

# Description:
createNoProjectsDialogMessage1 = 앱 인벤터 2에 아직 생성된 프로젝트가 없습니다. 앱 인벤터의 사용법을 배우려면, 창 오른쪽 상단의 “가이드” 링크를 클릭하세요. 또는 첫 프로젝트를 시작해보고자 한다면, 화면 좌측 상단의 “새 프로젝트 시작하기” 버튼을 클릭하세요.

# Description:
createNoProjectsDialogText = 앱 인벤터 2에 오신 것을 환영합니다!

# Description:
createNoprojectsDialogMessage2 = 행복한 창작 시간!

# Description: Error message reported when the project couldn't be created on the server.
createProjectError = 서버 오류: 프로젝트를 생성할 수 없습니다. 나중에 다시 시도해주세요!

# Description:
createWelcomeDialogButton = 계속

# Description:
createWelcomeDialogText = 앱 인벤터에 오신 것을 환영합니다!

# Description:
currentXParams = 현재X

# Description:
currentYParams = 현재Y

# Description:
customEllipsis = 사용자지정...

# Description: Text for color choice 'Cyan'
cyanColor = 청록색

# Description: Text for color choice 'Dark Gray'
darkGrayColor = 어두운 회색

# Description:
darkTheme = 다크

# Description: Header to indicate the date an extension was compiled
dateBuilt = 만든 날짜:

# Description:
datePickerComponentPallette = 날짜선택

# Description:
dayParams = 일

# Description:
daysParams = 일

# Description: Text for button shape choice 'default'
defaultButtonShape = 기본값

# Description: Default project name in checkoint dialog
# 0=projectName, 1=suffix
defaultCheckpointProjectName = {0}_체크포인트{1}

# Description: Text for color choice 'Default'
defaultColor = 기본값

# Description: Text for font typeface choice 'default '
defaultFontTypeface = 기본값

# Description: Message that is shown to indicate that a loading RPC is going on
defaultRpcMessage = 불러오는 중 …

# Description: Defaulf project name in save as dialog
# 0=projectName
defaultSaveAsProjectName = {0}_복사

# Description: Text for screen animation choice 'Default '
defaultScreenAnimation = 기본값

# Description: Text for property editors
defaultText = 기본값

# Description:
defaultTheme = 장치 기본값

# Description: Text on "Delete" button
deleteButton = 삭제

# Description: Text on "Delete component" button
deleteComponentButton = 컴포넌트 삭제

# Description: Label for the context menu command that deletes a file
deleteFileCommand = 삭제…

# Description: Error message reported when deleting a file failed on the server.
deleteFileError = 서버 오류: 이 파일을 삭제할 수 없습니다. 나중에 다시 시도해주세요!

# Description: Error message reported when a server error occurs during delete keystore
deleteKeystoreError = 서버 오류: 키 저장소 파일을 삭제할 수 없습니다.

# Description: Label of the button for delete keystore
deleteKeystoreMenuItem = 키 저장소 삭제

# Description: Text on "Delete Project" button
deleteProjectButton = 프로젝트 삭제

# Description: Error message reported when deleting a project failed on the server.
deleteProjectError = 서버 오류: 프로젝트를 삭제할 수 없습니다. 나중에 다시 시도해주세요!

# Description: Name of Delete project menuitem
deleteProjectMenuItem = 프로젝트 삭제

# Description: Message that is shown to indicate that a deleting RPC is going on
deletingRpcMessage = 삭제 중 …

# Description:
descriptionParams = 설명

# Description:
destinationParams = 목적지

# Description:
determiningPermissions = 권한 확정하기

# Description: Text on "Dismiss" button.
dismissButton = 거절하기

# Description:
distanceParams = 거리

# Description:
doFaultMethodDescriptions = 예외 처리를 디버그하는데 사용되는 예외를 발생시킵니다.

# Description:
doFaultMethods = 오류생성

# Description:
doNotShow = 다시 보지 않기

# Description: Caption for button to finish the box resizing dialog.
done = 완료

# Description: Warning that downloading projects will take a while
downloadAllAlert = 프로젝트를 다운로드하는데 시간이 다소 걸립니다. 잠시만 기다려주세요…

# Description: Label for the context menu command that downloads a file
downloadFileCommand = 내 컴퓨터에 다운로드

# Description: Error message displayed when a server error occurs during download keystore
downloadKeystoreError = 서버 오류: 키 저장소 파일을 내려받을 수 없습니다.

# Description: Label of the button for export keystore
downloadKeystoreMenuItem = 키 저장소 내보내기

# Description: Label of item for building a project and downloading
downloadToComputerMenuItem = 앱 ( .apk를 내 컴퓨터에 저장하기 )

# Description: Label of item for building a project and downloading
downloadToComputerMenuItem2 = 구글 플레이 앱 ( .apk 를 내 컴퓨터에 저장하기 )

# Description: Title of the dialog box for downloading a user's project source
downloadUserSourceDialogTitle = 사용자 소스 다운로드

# Description: Label of the button for admins to download a user's project source
downloadUserSourceMenuItem = 사용자 소스 다운로드

# Description: Message shown while downloading application to the phone (during compilation)
downloadingRpcMessage = 폰에 다운로드 중 …

# Description:
draggedAnySpriteParams = 드래그된모든스프라이트

# Description:
draggedSpriteParams = 드래그된스프라이트

# Description:
drawingAndAnimationComponentPallette = 그리기 & 애니메이션

# Description: Error shown when a new component name would be the same as an existing one
duplicateComponentNameError = 중복된 컴포넌트 이름!

# Description: Error shown when a new form name would be the same as an existing one
duplicateFormNameError = 중복된 스크린 이름!

# Description: Error shown when a new project name would be the same as an existing one
# 0=projectName
duplicateProjectNameError = {0} 이미 존재합니다. 같은 이름으로 프로젝트를 생성할 수 없습니다.

# Description:
durationMsParams = 밀리초시간

# Description:
durationParams = 시간

# Description:
edgeParams = 모서리

# Description:
emailAddressParams = 이메일주소

# Description: Title for user's email inbox
emailInboxTitle = 이메일

# Description:
emailPickerComponentPallette = 이메일선택

# Description: Title for moderator send email dialog
emailSendTitle = 이메일 보내기

# Description: Label of the Sent From on reportlist
emailSentFrom = 보내는 사람 :

# Description: Label of the Sent To on reportlist
emailSentTo = 받는 사람 :

# Description: Message providing details about starting the emulator connection.
emulatorMenuItem = 에뮬레이터

# Description:
encodingParams = 인코딩

# Description:
endParams = 끝

# Description: error message of wrong email frequency
errorEmailFrequency = 잘못된 이메일 빈도: 수치는 0보다 커야 합니다

# Description: Message displayed when an error occurs while generating YAIL for a form.
# 0=formName
errorGeneratingYail = {0} 를(을) 위한 코드를 생성할 수 없습니다.

# Description:
errorMessageParams = 오류메시지

# Description:
errorNumberParams = 오류번호

# Description:
ev3ColorSensorComponentPallette = Ev3색상센서

# Description:
ev3CommandsComponentPallette = Ev3명령어

# Description:
ev3GyroSensorComponentPallette = Ev3자이로센서

# Description:
ev3MotorsComponentPallette = Ev3모터

# Description:
ev3SoundComponentPallette = Ev3소리

# Description:
ev3TouchSensorComponentPallette = Ev3터치센서

# Description:
ev3UIComponentPallette = Ev3UI

# Description:
ev3UltrasonicSensorComponentPallette = Ev3초음파센서

# Description:
# 0=property
expectedLatLongPair = {0}을 위해 제공된 값은 유효한 위도, 경도가 아닙니다.

# Description:
experimentalComponentPallette = 실험실

# Description: Name of Export all Project menuitem
exportAllProjectsMenuItem = 모든 프로젝트 내보내기

# Description: Name of Export Project menuitem
exportProjectMenuItem = 선택된 프로젝트 (.aia)를 내 컴퓨터로 내보내기

# Description:
extensionComponentPallette = 확장기능

# Description: Error message when the component descriptors for an extension are not parsable.
# 0=extensionName, 1=projectName
extensionDescriptorCorrupt = \" {1} \"프로젝트의 \" {0} \"확장기능 설명이 손상되었습니다.

# Description: Extensions link
extensionsMenuItem = 확장기능

# Description: Header for extension version information
externalComponentVersion = 확장기능 버전:

# Description:
# Description: Text for screen animation choice 'Fade '
extraKeyValueWarning = ExtraKey 및 ExtraValue는 더 이상 사용되지 않으며 지원되지 않습니다. Blocks.appengine.fadeScreenAnimation = Fade에서 새로운 Extras 속성을 사용하십시오.

# Description:
featureCollectionComponentPallette = 도형모음

# Description:
featureParams = 도형

# Description:
featuresParams = 도형

# Description: Link for Report an Issue form
feedbackLink = 문제 보고

# Description: Link for Report an Issue form
feedbackMenuItem = 문제 보고

# Description: Link for Report an Issue form
feedbackTabName = 문제 보고

# Description:
fileComponentPallette = 파일

# Description:
fileNameParams = 파일이름

# Description:
fileParams = 파일

# Description: Error message reported when a file couldn't be uploaded because of its size.
fileTooLargeError = 오류: 용량이 너무 커서 파일을 올릴 수 없습니다

# Description: Error message reported when a file couldn't be uploaded to the server.
fileUploadError = 서버 오류: 파일을 올릴 수 없습니다. 나중에 다시 시도해주세요!

# Description: Caption for file upload wizard.
fileUploadWizardCaption = 파일 올리기 ...

# Description: Message displayed when an asset is uploaded.
# 0=filename
fileUploadingMessage = {0} 을(를) 앱 인벤터 서버에  업로드 중

# Description: Error message when filenames are 0 or 101+ characters long
filenameBadSize = 파일 이름은 1자 이상 100자 이하여야 합니다.

# Description: Error message when filenames are 0 or 101+ characters long
filenameBadSizeTitle = 오류: 잘못된 파일 이름 크기

# Description:
fillParams = 채우기

# Description: Caption and summary for Fill Parent choice
fillParentCaption = 부모 요소에 맞추기

# Description:
finalDialogMessage = <p> <b> 세션이 종료되었습니다.이 창을 닫을 수 있습니다 </ b> </ p>

# Description:
finalDialogText = 세션이 만료되었습니다

# Description:
firebaseDBComponentPallette = 파이어베이스DB

# Description:
firebaseExperimentalWarning = 파이어베이스DB는 실험적인 기능으로, 이후에 변경되거나 작동이 정지될 수 있습니다. 이 콤퍼넌트를 이용하여 패키징된 앱은 나중에 작동하지 않을 수 있습니다.

# Description: Error shown when user does not type letter as first character in project name.
firstCharProjectNameError = 프로젝트 이름은 항상 알파벳으로 시작해야 합니다

# Description: Text for Sizing choice 'fixed' -- scale to fit device screen
fixedSizing = 고정형

# Description:
flungSpriteParams = 플링된스프라이트

# Description:
followers2Params = 팔로워2

# Description:
forInternalUseOnlyComponentPallette = 내부사용전용

# Description:
formComponentPallette = 폼

# Description: Label to indicate the application has too many screens.
formCountErrorLabel = 경고 :이 응용 프로그램의 화면 수가 App Inventor의 한계를 초과 할 수 있습니다. <a target=\"_blank\" href=\"/reference/other/manyscreens.html\"> 여기 </a>를 클릭하면 많은 화면이있는 앱을 만드는 방법에 대한 도움말을 볼 수 있습니다. <p> 정말로 다른 화면을 추가 하시겠습니까? </ p>

# Description: Label in front of name in new screen dialog.
formNameLabel = 스크린 이름:

# Description: Name of Forums link
forumsMenuItem = 포럼

# Description:
frequencyHzParams = 주파수Hz

# Description:
frequencyParams = 주파수

# Description:
fromParams = 시작

# Description:
fromUrlButton = 시작 URL...

# Description:
functionNameParams = 함수이름

# Description:
fusiontablesControlComponentPallette = 퓨전테이블제어

# Description: Prompt for the gallery app report section if user has already reported.
galleryAlreadyReportedPrompt = 이 앱은 이미 보고되었습니다. 관리자가 곧 확인 후 해결할 예정입니다.

# Description: Caption for gallery app box.
galleryAppBoxCaption = 갤러리 앱

# Description: Text prefix for the gallery app last changed date.
galleryAppChangedPrefix = 변경 시간

# Description: Text prefix for the gallery app shared / created date.
galleryAppCreatedPrefix = 만든 시간

# Description: Error message reported when can't get gallery app like on server.
galleryAppLikeError = 서버 오류 : ''좋아요'' 수를 조회할 수 없습니다.

# Description: Text for gallery page opening feedback
galleryAppOpening = 여는 중 ...

# Description: Text for gallery page publishing feedback.
galleryAppPublishing = 퍼블리싱 중 ...

# Description: Text for gallery page removing feedback
galleryAppRemoving = 삭제 중 ...

# Description: Text for gallery page updating feedback
galleryAppUpdating = 업데이트 중 ...

# Description: Text for gallery page like button (already liked).
galleryAppsAlreadyLike = 좋아요 취소

# Description: Title for the gallery page sidebar that shows list of apps of a specific author.
galleryAppsByAuthorSidebar = 개발자 :

# Description: Text for gallery page like button (not liked yet).
galleryAppsLike = 좋아요

# Description: Title prefix for the gallery page sidebar that shows list of remixed apps.
galleryAppsRemixesSidebar = 리믹스

# Description: Text for gallery By Author Text
galleryByAuthorText = 작성자

# Description: Text for gallery app developer prefix text label
galleryByDeveloperPrefixedText = 만든이

# Description: Text for gallery page cancel button
galleryCancelText = 취소

# Description: Reference to the Creative Commons License
galleryCcLicenseRef = 갤러리에 앱을 제출하면 <a href=\"https://creativecommons.org/licenses/by/4.0/\" target=\"_blank\"> 크리에이티브 커먼즈 저작자 표시 라이선스 </a>에 따라 앱을 게시하고 당신이 그렇게 할 권한이 있음을 확인합니다.

# Description: Text for gallery page changed date label
galleryChangedDateLabel = 변경일:

# Description: Error message reported when can't get gallery app comments on server.
galleryCommentError = 서버 오류 : 댓글을 조회할 수 없습니다

# Description: Button for copying share link to clipboard
galleryCopyButton = 복사

# Description: Text for gallery page created date label
galleryCreatedDateLabel = 생성일:

# Description: Text for gallery page credit hint
galleryCreditHint = 다른앱의 코드를 사용하여 만들었나요? 무엇을 참고하였는지 크레딧에 기록하세요.

# Description: Text for gallery page credit label
galleryCreditLabel = 크레딧:

# Description: Error message reported when the gallery delete breaks
galleryDeleteError = 서버 오류: 갤러리 삭제 오류

# Description: Text for gallery page description hint
galleryDescriptionHint = 앱에 대한 설명을 작성해 주세요.

# Description: Error message reported when can't get developer gallery apps on server.
galleryDeveloperAppError = 서버 오류: 갤러리에서 개발자 갤러리 앱을 조회할 수 없습니다

# Description: Error message reported when can't get most downloaded apps server.
galleryDownloadedAppsError = 서버 오류: 갤러리에서 가장 많이 다운로드된 앱을 가져올 수 없습니다

# Description: Text for gallery page edit button
galleryEditText = 편집

# Description: Text for gallery Empty Text
galleryEmptyText = 

# Description: Error message reported when the gallery cannot be accessed.
galleryError = 서버 오류: 갤러리에 접근할 수 없습니다

# Description: Error message reported when can't get featured on server.
galleryFeaturedAppError = 서버 오류: 갤러리에서 추천 앱을 조회할 수 없습니다

# Description: Text for gallery Feature Text
galleryFeaturedText = 추천

# Description: redirect action of galleryId
galleryGalleryIdAction = /?galleryId=

# Description: Error message if the gallery id does not exist
galleryIdNotExist = 해당 아이디의 갤러리 앱이 없습니다.

# Description: Error message reported when can't get most liked apps server.
galleryLikedAppsError = Server error: could not get most liked apps from gallery

# Description: Caption for gallery list box.
galleryListBoxCaption = 갤러리

# Description: More Apps Text
galleryMoreApps = 더 많은 앱

# Description: Text for gallery page more info link hint
galleryMoreInfoHint = 만약 이 앱에 튜토리얼 또는 비디오가 있다면, 여기에 URL을 입력하세요.

# Description: Text for gallery page more info link label
galleryMoreInfoLabel = 튜토리얼 / 비디오:

# Description: text for more reports
galleryMoreReports = 더 많은 신고

# Description: Error to report when an app with an extension is attempted to be added to the Gallery
galleryNoExtensionsPlease = 확장기능이 포함된 앱은 갤러리에 업로드할 수 없습니다

# Description: Error messgage for when submitting galleryapp
galleryNoScreenShotMessage = 앱을 발행하기 전에 스크린샷 또는 표현가능한 이미지를 제출해 주세요

# Description: Error messgage for when submitting galleryapp
galleryNotEnoughDescriptionMessage = 앱을 발행하기 전에 더 많은 설명을 제공해 주세요

# Description: Text for gallery page open the app button
galleryOpenText = 앱 열기

# Description: Text for gallery page publish button
galleryPublishText = 발행

# Description: Error message reported when can't get recent apps server.
galleryRecentAppsError = 서버 오류: 갤러리에서 최신 앱을 가져올 수 없습니다

# Description: Text for the gallery app remix children list.
galleryRemixChildren = 리믹스된 앱들을 보려면 클릭하세요!

# Description: Text prefix for the gallery app remixed from label.
galleryRemixedFrom = 리믹스 원본:

# Description: Text for remove confirm alert
galleryRemoveConfirmText = 이 앱을 갤러리에서 정말로 삭제하시겠습니까?

# Description: Text for gallery page remove button
galleryRemoveText = 삭제

# Description: Text for the gallery app report button.
galleryReportButton = 신고하기

# Description: Prompt for the gallery app report section when user just submitted the report.
galleryReportCompletionPrompt = 이 앱이 신고되었습니다. 관리자가 곧 확인 후 해결할 예정입니다.

# Description: Prompt for the gallery app report section.
galleryReportPrompt = 이 앱이 무례하거나 부적절하다고 생각하는 이유를 설명하거나 <a href=\"http://google.com\"> App Inventor Gallery 커뮤니티 가이드 라인 </a>을 위반하는 이유를 설명하십시오.

# Description: Text for gallery search button
gallerySearch = 검색

# Description: Error message reported when can't search on server.
gallerySearchError = 서버 오류: 갤러리에서 검색을 실패하였습니다

# Description: Search for Apps Text
gallerySearchForAppsButton = 앱 검색

# Description: Search Results Infix
gallerySearchResultsInfix = \" 검색됨

# Description: Search Results Prefix
gallerySearchResultsPrefix = 검색어 \"

# Description: Search Results Suffix
gallerySearchResultsSuffix = 결과

# Description: Error message reported when the gallery trying to set project gallery id
gallerySetProjectIdError = 서버 오류: 프로젝트 갤러리 아이디 설정 시 갤러리 오류

# Description: Error message reported when unable to extract gallery settings from xml.
gallerySettingsError = 서버 오류: 갤러리 설정에 접근할 수 없습니다

# Description: Prompt for the gallery app share section.
gallerySharePrompt = 공유 링크:

# Description: Text for gallery Single Space Text
# Description: Link for Gallery
gallerySingleSpaceText = appengine.galleryTabName=Gallery

# Description: Text for gallery Tutorial  Text
galleryTutorialText = 튜토리얼

# Description: Text for gallery Unfeature Text
galleryUnfeaturedText = 추천안함

# Description: Text for gallery Untutorial Text
galleryUntutorialText = 튜토리얼 안함

# Description: Text for gallery page update button
galleryUpdateText = 업데이트

# Description: gallery app link label
# 0=host, 1=galleryId
galleryVisitGalleryAppLinkLabel = appengine.appengine. 앱을 방문하십시오 : {0} /? galleryId = {1}

# Description:
gameClientComponentPallette = 게임클라이언트

# Description: Label of the cascade item for generating YAIL for a project
generateYailMenuItem = YAIL 만들기

# Description:
generatingApplicationInformation = 앱 정보 만들기

# Description: Message displayed when cannot get a MOTD from the server.
getMotdFailed = 서버 연결에 실패하여 MOTD를 가져올 수 없습니다.

# Description: Name of Getting Started link
getStartedMenuItem = 시작하기

# Description:
getVersionNameMethods = 버전이름가져오기

# Description: Label showing the ant build date and the git version
# 0=date, 1=version
gitBuildId = 빌드: {0} 버전: {1}

# Description: Text for color choice 'Gray'
grayColor = 회색

# Description: Text for color choice 'Green'
greenColor = 초록

# Description: Name of Guide link
guideTabName = 가이드

# Description:
gyroscopeSensorComponentPallette = 자이로센서

# Description: Hard Reset the Emulator.
hardResetConnectionsMenuItem = 강제 초기화

# Description: Tool tip text for header icon for closing/removing a minimized box.
hdrClose = 닫기

# Description: Tool tip text for header icon for minimizing the box.
hdrMinimize = 접기

# Description: Tool tip text for header icon for restoring a minimized box.
hdrRestore = 펼치기

# Description: Tool tip text for header icon for context menu of box.
hdrSettings = 설정

# Description:
headingParams = 방향

# Description:
heightParams = 높이

# Description: Caption for the height property
heightPropertyCaption = 높이

# Description: Label for the Help menu
helpTabName = 도움말

# Description: Label of the Text of hiding of reportlist
hideLink = 숨김

# Description: Text on Toggle Warning Button
hideWarnings = 경고 숨기기

# Description: Default value for Hint property
# 0=componentName
hintPropertyValue = {0} 의힌트

# Description: Text for horizontal alignment choice 'Center'
horizontalAlignmentChoiceCenter = 가운데

# Description: Text for horizontal alignment choice 'Left
horizontalAlignmentChoiceLeft = 왼쪽

# Description: Text for horizontal alignment choice 'Right'
horizontalAlignmentChoiceRight = 오른쪽

# Description:
horizontalArrangementComponentPallette = 수평배치

# Description:
horizontalScrollArrangementComponentPallette = 스크롤가능수평배치

# Description:
hourParams = 시

# Description:
hoursParams = 시

# Description:
htmlTextParams = HTML텍스트

# Description:
imageComponentPallette = 이미지

# Description:
imageParams = 이미지

# Description:
imagePathParams = 이미지경로

# Description:
imagePickerComponentPallette = 이미지선택

# Description:
imageSpriteComponentPallette = 이미지스프라이트

# Description: String shown in the palette to import an extension
importExtensionMenuItem = 확장기능 추가하기

# Description: Name of Import Project menuitem
importProjectMenuItem = 내 컴퓨터에서 프로젝트 (.aia) 가져오기 ...

# Description: Name of Import Template menuitem
importTemplateButton = 저장소에서 프로젝트 (.aia) 가져오기 ...

# Description: Label of the Text of Template 2 of reportlist
# 0=title
inappropriateAppContentEmail = 앱 '' {0} ''에 부적절한 콘텐츠가 있습니다. 의 가이드 라인을 검토하고 그에 따라 앱을 수정하십시오.

# Description: Label of the Text of Template 1 of reportlist
# 0=title
# Description: Label of the Inappropriate App Content Remove on reportlist
inappropriateAppContentRemoveEmail = 부적절한 콘텐츠로 인해 앱 \" {0} \"이 (가) 갤러리에서 삭제되었습니다. http://ai2.appinventor.mit.edu/about/termsofservice.html의 지침을 검토하십시오. 이 조치가 잘못 취해진 것으로 생각되면이 전자 메일에 직접 회신하여 토론 할 수 있습니다. appengine.inappropriateAppContentRemoveTitle = 부적절한 앱 콘텐츠 : Remove

# Description: Label of the Inappropriate App Content on reportlist
inappropriateAppContentTitle = 부적절한 앱 콘텐츠

# Description: Label of the Text of Template 3 of reportlist
# Description: Label of the Inappropriate User Profile Content on reportlist
inappropriateUserProfileContentEmail = 프로필에 부적절한 콘텐츠가 있습니다. 프로필을 수정하십시오 .appengine.inappropriateUserProfileContentTitle = 부적절한 사용자 프로필 콘텐츠

# Description: Caption for input template url wizard.
inputNewUrlCaption = URL 입력…

# Description:
installURLMethodDescriptions = URL을 다운로드하고 안드로이드 패키지처럼 설치하세요

# Description:
installURLMethods = 설치URL

# Description:
instanceIdParams = 인스턴스아이디

# Description:
instantParams = 인스턴트

# Description: Alert after an internal error
internalError = 내부 오류가 발생했습니다.

# Description: Confirm alert after an internal error
internalErrorClickOkDebuggingView = 내부 오류가 발생했습니다. 자세한 내용은 \"확인\"을 클릭하십시오.

# Description: Confirmation for reporting a bug after an internal error
internalErrorReportBug = 내부 오류가 발생했습니다. 버그를 신고하겠습니까?

# Description: Alert after an internal error
internalErrorSeeDebuggingView = 내부 오류가 발생했습니다. 디버깅 뷰로 변경합니다.

# Description:
internalUseComponentPallette = 내부사용전용

# Description: Error shown when user types invalid character into project name.
invalidCharProjectNameError = 잘못된 문자. 프로젝트 이름은 알파벳, 숫자, 밑줄만 가능합니다

# Description: Error message when an extension descriptor pathname does not have the correct structure.
# 0=projectName
invalidExtensionInProject = \" {0} \"프로젝트에 유효하지 않은 확장기능이 있습니다. 앱인벤터는 다시 시도합니다.

# Description:
invalidSessionDialogButtonContinue = 두 개의 세션 유지

# Description:
invalidSessionDialogButtonCurrent = 이것을 현재 세션으로 만들기

# Description:
invalidSessionDialogButtonEnd = 이 세션 종료하기

# Description:
invalidSessionDialogMessage = <p> <font color = red> 경고 : </ font>이 세션은 오래되었습니다. </ p> <p>이 App Inventor 계정은 다른 위치에서 열렸습니다. 둘 이상의 위치에서 한 계정을 동시에 사용하면 프로젝트가 손상 될 수 있습니다. </ p> <p> 다음 버튼 중 하나를 선택하여 <ul> <li>이 세션 끝내기를 클릭하십시오. </ li> <li > 현재 세션으로 만들고 다른 세션을 오래되게하십시오. </ li> <li> 두 세션 모두 계속하십시오. </ li> </ ul> </ p>

# Description:
invalidSessionDialogText = 세션이 만료되었습니다

# Description: Error message reported when user id or project id is missing
invalidUserIdOrProjectIdError = 프로젝트를 다운로드하려면 사용자 이메일 주소 또는 아이디와 프로젝트 이름이 필요합니다. 아이디는 숫자로 이루어져 있으며 시스템 로그나 데이터베이스에서 가져옵니다. 만약 이메일 주소를 사용한다면, 데이터베이스에 저장된 이메일 주소와 일치해야 합니다. 동일하게, 프로젝트 이름도 데이터베이스에 저장된 것과 일치해야합니다. 모두 대소문자를 구분합니다.

# Description: Label of the button leading to build related cascade items, when building
isBuildingButton = 패키징 ...

# Description:
isConnectedMethodDescriptions = Returns TRUE if the phone is on Wifi, FALSE otherwise

# Description:
isConnectedMethods = 연결여부

# Description:
isDirectMethodDescriptions = Returns true if we are running in the emulator or USB Connection

# Description:
isDirectMethods = 다이렉트연결여부

# Description:
itemToAddParams = 추가할항목

# Description:
jsonTextParams = json텍스트

# Description: Error message reported when the keystore couldn't be uploaded to the server.
keystoreUploadError = 서버 오류: 키 저장소를 올릴 수 없습니다. 나중에 다시 시도해주세요!

# Description: Caption for keystore upload wizard.
keystoreUploadWizardCaption = 키 저장소 올리기...

# Description: Label of the Cancel Action on reportlist
labelCancel = 취소

# Description: Label of the Choose Template Label on reportlist
labelChooseTemplate = 템플릿 선택

# Description:
labelComponentPallette = 레이블

# Description: Label of the Confirm Action on reportlist
labelConfirm = 확인

# Description: Label of the Deactivate App on reportlist
labelDeactivateApp = 앱 비활성화

# Description: Label of the Deactivate App & Send Email on reportlist
labelDeactivateAppAndSendEmail = 앱 비활성화 및 이메일 전송

# Description: label of editing your profile
labelEditYourProfile = 프로필 수정

# Description: label of email description
labelEmailDescription = App Inventor will send you a notification when the apps you have posted are liked or downloaded. Below, you can enable/disable this feature and you can specify how often you want to be notified

# Description: label of email frequency prefix
labelEmailFrequencyPrefix = 이메일 수신 간격

# Description: label of email frequency suffix
labelEmailFrequencySuffix = 새로운 좋아요 + 다운로드

# Description: label of more info link
labelMoreInfoLink = 상세 보기 링크

# Description: Label of the Reactivate App on reportlist
labelReactivateApp = 앱 재활성화

# Description: Label of the See All Actions of reportlist
labelSeeAllActions = 이전 행동

# Description: label of your display name
labelYourDisplayName = 표시 이름

# Description: Label of the Mark As Resolved of reportlist
labelmarkAsResolved = 해결됨으로 표시

# Description: Label of the Mark As Unresolved of reportlist
labelmarkAsUnresolved = 해결되지 않음으로 표시

# Description: Text for screen orientation choice 'Landscape '
landscapeScreenOrientation = 가로

# Description:
languageToTranslateToParams = 번역언어

# Description:
latitudeParams = 위도

# Description:
layoutComponentPallette = 레이아웃

# Description: Text for text alignment choice 'left'
leftTextAlignment = 왼쪽

# Description:
legoMindstormsComponentPallette = 레고® 마인드스톰®

# Description: Name of Library link
libraryMenuItem = 라이브러리

# Description: Text for color choice 'Light Gray'
lightGrayColor = 밝은 회색

# Description:
lineStringComponentPallette = 선연결

# Description:
listParams = 리스트

# Description:
listPickerComponentPallette = 목록선택

# Description:
listViewComponentPallette = 목록뷰

# Description: Error message reported when a source file couldn't be loaded from the server.
loadError = 서버 오류: 파일을 올릴 수 없습니다. 나중에 다시 시도해주세요!

# Description: loading indicator when opening the app
loadingAppIndicatorText = 앱 로딩 중 ...

# Description: Message to display when an asset is being downloaded from the server
# 0=assetPath
loadingAsset = 앱인벤터 서버에서 {0} 다운로드 중 ...

# Description:
locationNameParams = 위치이름

# Description:
locationSensorComponentPallette = 위치센서

# Description: Show toast for a Toast_Long of time
longToastLength = 길게

# Description:
longitudeParams = 경도

# Description: Text for color choice 'Magenta'
magentaColor = 자홍색

# Description:
mailboxParams = 메일함

# Description:
makePublicParams = 공개하기

# Description: Error message when component name contains non-alphanumeric characters besides _ or does not start with a letter
malformedComponentNameError = 컴포넌트 이름은 문자, 숫자, 밑줄만 사용할 수 있으며 반드시 문자로 시작해야합니다.

# Description: Error message when file name contains characters that would require URL encoding.
malformedFilename = 파일 이름은 알파벳, 숫자 및 기호  \"-\", \"_\", \".\", \"!\", \"~\", \"*\", \"(\", \")\" 만 가능합니다.

# Description: Error message when file name contains characters that would require URL encoding.
malformedFilenameTitle = 오류: 잘못된 파일 이름

# Description: Error message when form name contains non-alphanumeric characters besides _
malformedFormNameError = 스크린 이름은 알파벳, 숫자, 밑줄만 사용할 수 있으며 반드시 알파벳으로 시작해야합니다.

# Description: Error shown after validation of input text failed.
malformedInputError = 잘못된 입력!

# Description: Error message when project name does not start with a letter or contains a character that is not a letter, number, or underscore.
malformedProjectNameError = 프로젝트 이름은 알파벳, 숫자, 밑줄만 사용할 수 있으며 반드시 알파벳으로 시작해야합니다.

# Description:
# 0=numArgs
mapCenterWrongNumberArgumentsException = 문자열중심은 2개의 값이 필요하지만 {0} 개가 입력되었습니다

# Description:
mapComponentPallette = 지도

# Description:
mapFeatureParams = 지도도형

# Description: Tooltip shown when the user hovers the mouse over the Map component's lock map control
mapLockMovementTooltip = Lock map movement

# Description: Tooltip shown when the user hovers the mouse over the Map component's reset map control
mapResetBoundingBoxTooltip = Reset bounding box

# Description: Display name for the imperial unit system
mapScaleUnitsImperial = 야드법

# Description: Display name for the metric unit system
mapScaleUnitsMetric = 미터법

# Description: Tooltip shown when the user hovers the mouse over the Map component's set initial map control
mapSetInitialMapTooltip = Set initial map to current view

# Description: Aerial photography map type
mapTypeAerial = 항공뷰

# Description: Road network map type
mapTypeRoads = 거리뷰

# Description: Terrain map type
mapTypeTerrain = 지형뷰

# Description: Tooltip shown when the user hovers the mouse over the Map component's unlock map control
mapUnlockMovementTooltip = Unlock map component

# Description: Tooltip shown when the user hovers the mouse over the Map component's zoom in control
mapZoomIn = 줌인

# Description:
mapZoomLevelOutOfBoundsException = 줌 레벨은 1에서 18 사이입니다

# Description: Tooltip shown when the user hovers the mouse over the Map component's zoom out control
mapZoomOut = 줌아웃

# Description:
mapsComponentPallette = 지도

# Description:
markerComponentPallette = 마커

# Description:
mediaComponentPallette = 미디어

# Description:
mediaStoreComponentPallette = 미디어저장소

# Description:
mediafileParams = 미디어파일파라미터

# Description:
mentionsParams = 멘션리스트

# Description:
messageParams = 메시지

# Description:
messageTextParams = 메시지텍스트

# Description: Caption for message output box.
messagesOutputBoxCaption = 메시지

# Description:
messagesParams = 메시지

# Description:
millisParams = 밀리초

# Description:
millisecondsParams = 밀리초

# Description:
millisecsParams = 밀리초

# Description:
minuteParams = 분

# Description:
minutesParams = 분

# Description:
modeParams = 모드

# Description: Text for accelerometer sensitivity choice 'moderate'
moderateAccelerometerSensitivity = 보통

# Description: Label of the Text of deativating this app with email of reportlist
moderationActionDeactivateThisAppWithEmail = 이메일로 앱 비활성화하기:

# Description: Label of the Text of marking this report as resolved of reportlist
moderationActionMarkThisReportAsResolved = 이 신고를 해결됨으로 표시

# Description: Label of the Text of marking this report as unresolved of reportlist
moderationActionMarkThisReportAsUnresolved = 이 신고를 해결안됨으로 표시

# Description: Label of the Text of reactivating this app of reportlist
moderationActionReactivateThisApp = 앱 재활성화하기

# Description: Label of the Text of sending an email of reportlist
moderationActionSendAnEmail = 이메일 보내기:

# Description: Label of the app author field on moderation page
moderationAppAuthorHeader = 앱 저작자

# Description: Title of the email when app was deactivated
moderationAppDeactivatedTitle = 앱인벤터 갤러리: 비활성화된 앱

# Description: Label of the app field on moderation page
moderationAppHeader = 앱

# Description: Body of the email when app was activated
# 0=title
moderationAppReactivateBody = 앱 '' {0} ''이 (가) 다시 활성화되었습니다.

# Description: Title of the email when app was activated
moderationAppReactivatedTitle = 앱인벤터 갤러리: 활성화된 앱

# Description: Label of ...
moderationDotDotDot = ...

# Description: error message when fail to send to user from moderator
moderationErrorFailToSendEmail = 이메일을 전송하는데 실패했습니다, 나중에 다시 시도해 주세요

# Description: Caption for moderation page box.
moderationPageBoxCaption = 신고

# Description: Label of the created date of report field on moderation page
moderationReportDateCreatedHeader = 신고 날짜

# Description: Label of the report text field on moderation page
moderationReportTextHeader = 문제 신고

# Description: Label of the reporter field on moderation page
moderationReporterHeader = 신고자

# Description: Title of the email when moderator sends out an email
moderationSendEmailTitle = 앱인벤터 갤러리에서 보낸 이메일

# Description: Label of the Text of showing resolved reports of reportlist
moderationShowResolvedReports = 해결된 신고 보이기

# Description: Text for font typeface choice 'monospace '
monospaceFontTypeface = 고정 너비

# Description:
monthParams = 월

# Description:
monthsParams = 월

# Description: Label of the button leading to more cascade items
moreActionsButton = 추가 동작

# Description: Label of the link to a component's reference docs
moreInformation = 자세히 알아보기

# Description: Initial caption for MOTD box.
motdBoxCaption = 앱 인벤터에 오신 것을 환영합니다!

# Description:
motorPortLetterParams = 모터포트문자

# Description:
msParams = 밀리초

# Description: Name of My Projects tab
myProjectsTabName = 내 프로젝트

# Description:
nameParams = 이름

# Description:
nearFieldComponentPallette = NFC

# Description: Title of new Screen dialog.
newFormTitle = 새 스크린

# Description: Label next to the new name in a rename dialog
newNameLabel = 새 이름:

# Description: Label of the menu item for creating a new project
newProjectMenuItem = 새 프로젝트 시작하기

# Description: Label for template url wizard.
newUrlLabel = 템플릿 URL:

# Description: Caption for the wizard to create a new Young Android project
newYoungAndroidProjectWizardCaption = 새로운 앱인벤터 프로젝트 만들기

# Description: Exception message used when a project contains a newer version component than the version known by the system
# 0=componentType, 1=srcCompVersion, 2=sysCompVersion
newerVersionComponentException = 프로젝트에서 {0} 버전 {1}을 열 수 없습니다. (알려진 최신버전은 {2} 입니다)

# Description: Alert message displayed when project is newer than system
newerVersionProject = 이 프로젝트는 새로운 버전의 앱 인벤터로 저장되었습니다. 프로젝트를 불러오기는 하지만, 호환성 문제가 발생할 수 있습니다.

# Description: Text on 'Next' button to proceed to the next page of the wizard.
nextButton = 다음

# Description: Message displayed when OK button is clicked when there is no asset selected.
noAssetSelected = 자원을 선택해야 합니다!

# Description: Error message shown when a project references an unknown component.
# 0=componentName, 1=projectName
noComponentFound = 프로젝트 \" {1} \"을 로드하는 동안 콤포넌트 \" {0} \"을 (를) 찾을 수 없습니다.

# Description: Message displayed when OK button is clicked when there is no component selected.
noComponentSelected = 컴포넌트를 선택해야 합니다!

# Description: Error message reported when a file was not selected.
noFileSelected = 업로드할 파일을 선택하세요.

# Description: Error message reported when a file was not selected.
noFileSelectedTitle = 오류: 파일이 선택되지 않았습니다

# Description: Error message displayed when no keystore file exists
noKeystoreToDownload = 내려 받을 키 저장소 파일이 없습니다

# Description:
noParams = 아니오

# Description: Error message displayed when no project is selected
noProjectSelectedForDelete = 삭제할 프로젝트를 선택하세요.

# Description: Label feedback for no results found after searching.
noResultsFound = 결과를 찾을 수 없습니다

# Description: Exception message used when a component was not upgraded
# 0=componentType, 1=srcCompVersion, 2=sysCompVersion
noUpgradeStrategyException = {0} 의 버전 {1}에서 {2}로의 업그레이드가 없습니다.

# Description: Error message reported when no url is entered.
noUrlError = URL을 입력해 주세요

# Description: Header for the non-visible components in the designer.
nonVisibleComponentsHeader = 보이지 않는 컴포넌트

# Description: Caption for None entry
noneCaption = 없음

# Description: Text for color choice 'None'
noneColor = 없음

# Description: Text for screen animation choice 'None '
noneScreenAnimation = 없음

# Description: Error shown after validation of custom length field failed.
nonnumericInputError = 값은 반드시 0 또는 0보다 큰 숫자이어야 합니다

# Description: Error shown after validation of percentage input fields.
nonvalidPercentValue = 퍼센트 입력 값은 반드시 1에서 100 사이어야 합니다

# Description: Title for Error Dialog when connection is attempted without a project.
noprojectDialogTitle = 선택된 프로젝트 없음

# Description: Error message for connection attempt without a project selected.
noprojectDuringConnect = 연결하기에 앞서 프로젝트를 만들거나 선택해야 합니다.

# Description: Error shown after validation of float failed.
# 0=nonNumericText
notAFloat = {0} 는(은) 유효한 숫자가 아닙니다

# Description: Error shown after validation of integer failed.
# 0=nonNumericText
notAnInteger = {0} 는(은) 유효한 정수가 아닙니다

# Description: Error message reported when the file selected for upload is not a component archive.
notComponentArchiveError = 선택된 파일은 컴포넌트 파일이 아닙니다!appengine.컴포넌트 파일은 aix 파일입니다.

# Description: Error message reported when the file selected for upload is not a keystore.
notKeystoreError = 선택된 파일은 키 저장소가 아닙니다!

# Description: Error message reported when the file selected for upload is not a project archive.
notProjectArchiveError = 선택된 프로젝트는 프로젝트 소스 파일이 아닙니다! 프로젝트 소스 파일의 확장자는 aia 입니다.

# Description:
noticeParams = 알림

# Description:
notifierComponentPallette = 알림

# Description:
numberOfBytesParams = 바이트수

# Description:
numberParams = 숫자

# Description:
nxtColorSensorComponentPallette = Nxt색상센서

# Description:
nxtDirectCommandsComponentPallette = Nxt직접명령

# Description:
nxtDriveComponentPallette = Nxt드라이브

# Description:
nxtLightSensorComponentPallette = Nxt조도센서

# Description:
nxtSoundSensorComponentPallette = Nxt소리센서

# Description:
nxtTouchSensorComponentPallette = Nxt터치센서

# Description:
nxtUltrasonicSensorComponentPallette = Nxt초음파센서

# Description: Caption for ODE log box.
odeLogBoxCaption = 개발자 메시지

# Description: Text on "OK" button.
okButton = 확인

# Description: Label next to the old name in a rename dialog
oldNameLabel = 이전 이름:

# Description: Label of the button for opening the blocks editor
openBlocksEditorButton = 블록 에디터 열기

# Description: Text for color choice 'Orange'
orangeColor = 주황

# Description:
orientationSensorComponentPallette = 방향센서

# Description:
otherParams = 다른

# Description:
otherScreenNameParams = 다른스크린이름

# Description: Text for button shape choice 'oval'
ovalButtonShape = 타원

# Description: Message shown during a building RPC (for Young Android, called 'packaging')
packagingRpcMessage = 패키징 ...

# Description: Caption for palette box.
paletteBoxCaption = 팔레트

# Description:
passwordTextBoxComponentPallette = 비밀번호텍스트박스

# Description:
pathParams = 경로

# Description:
patternParams = 패턴

# Description:
pedometerComponentPallette = 만보기

# Description: Caption for percent label
percentCaption = 퍼센트

# Description: Summary for length in percent
# 0=percent
percentSummary = {0} 퍼센트

# Description: The name of the parameter that is used to report the name of a needed permission.
permissionNameParams = 권한이름

# Description:
phoneCallComponentPallette = 전화

# Description: Error message displayed when the user wants to download a project to the phone, but the phone is not connected.
phoneNotConnected = 전화가 연결되지 않았습니다.

# Description:
phoneNumberParams = 전화번호

# Description:
phoneNumberPickerComponentPallette = 전화번호선택

# Description:
phoneStatusComponentPallette = 전화상태

# Description: Text for color choice 'Pink'
pinkColor = 분홍

# Description:
pitchParams = 음높이

# Description: Caption for pixels label
pixelsCaption = 픽셀

# Description: Summary for custom length in pixels
# 0=pixels
pixelsSummary = {0} 픽셀

# Description:
playerComponentPallette = 플레이어

# Description:
playerEmailParams = 플레이어이메일

# Description:
playerIdParams = 플레이어아이디

# Description:
polygonComponentPallette = 다각형

# Description: Text for screen orientation choice 'Portrait '
portraitScreenOrientation = 세로

# Description:
powerParams = 전원

# Description:
preparingApplicationIcon = 앱 아이콘 준비

# Description:
preparingFinalPackage = 최종 패키지 준비

# Description:
prevXParams = 이전X

# Description:
prevYParams = 이전Y

# Description: Checkbox (un-check) controlling whether to display a preview on Phone size.
previewPhoneSize = 폰 크기로 미리보기를 하려면 체크를 해제하세요

# Description: Checkbox (check) controlling whether to display a preview on Tablet size.
previewTabletSize = 태블릿 크기로 미리보기를 하려면 체크하세요

# Description: Label for previous checkpoints table in checkpoint dialog.
previousCheckpointsLabel = 이전 체크포인트:

# Description: Label of the link for Privacy
privacyLink = 개인 정보 보호

# Description: Label of the link for Privacy and Terms of Use
privacyTermsLink = 개인 정보 보호 정책 및 이용 동의

# Description: Label of the link for private user profile
privateProfileLink = 프로필

# Description: Caption for profile page box.
profilePageBoxCaption = 내 프로필

# Description:
programNameParams = 프로그램이름

# Description: Header for date created column of project table.
projectDateCreatedHeader = 생성일

# Description: Header for date modified column of project table.
projectDateModifiedHeader = 수정일

# Description: Label for the project id input text box
projectIdLabel = 프로젝트 아이디 또는 이름:

# Description: Error message reported when information about projects could not be retrieved from the server.
projectInformationRetrievalError = 서버 오류: 프로젝트 정보를 조회할 수 없습니다. 나중에 다시 시도해주세요!

# Description: Caption for project list box.
projectListBoxCaption = 내 프로젝트

# Description: Error message reported when a project could not be loaded from the server.
projectLoadError = 서버 오류: 프로젝트를 불러올 수 없습니다. 나중에 다시 시도해주세요!

# Description: Name of My projects menuitem
projectMenuItem = 내 프로젝트

# Description: Header for name column of project table
projectNameHeader = 이름

# Description: Label for the project name input text box
projectNameLabel = 프로젝트 이름:

# Description: Header for published column of project table.
projectPublishedHeader = 발행됨

# Description: Error message reported when a project couldn't be uploaded to the server.
projectUploadError = 서버 오류: 프로젝트를 올릴 수 없습니다. 나중에 다시 시도해주세요!

# Description: Caption for project upload wizard.
projectUploadWizardCaption = 프로젝트 가져오기…

# Description: Alert message displayed when a project is upgraded
# 0=details
projectWasUpgraded = 이 프로젝트는 오래된 버전의 앱 인벤터로 만들어져 업그레이드 되었습니다.appengine. {0}

# Description: Name of Projects tab
projectsTabName = 프로젝트

# Description: Caption for properties box.
propertiesBoxCaption = 속성

# Description:
providerParams = 서비스제공자

# Description:
proximitySensorComponentPallette = 근접센서

# Description: Text on "Publish to Gallery" button
publishToGalleryButton = 갤러리에 발행하기

# Description:
quantityParams = 수량

# Description:
queryParams = 쿼리

# Description:
rParams = r

# Description:
radiusParams = 반지름

# Description:
readOnlyMode = 읽기 전용 상태입니다

# Description: Confirmation query for deleting a component
reallyDeleteComponent = 이 컴포넌트를 삭제하면 블록 에디터내의 연관된 모든 블록들이 삭제됩니다. 정말로 삭제하시겠습니까?

# Description: Confirmation message that will be shown before deleting a file
reallyDeleteFile = 정말 이 파일을 삭제하시겠습니까? 앱 인벤터 서버에서 제거됩니다. 또한, 앱의 일부분은 여전히 삭제된 파일을 참조할 수도 있으며, 당신은 이것을 변경해야 합니다.

# Description: Confirmation query for removing a screen
# 0=formName
reallyDeleteForm = 이 스크린을 삭제하면 프로젝트에서 스크린을 완전히 제거하게 됩니다. 이 스크린에 연관된 모든 컴포넌트 그리고 블록들이 지워지며, 되돌릴 수 없습니다.정말로 {0} 을(를) 삭제하시겠습니까?

# Description: Confirmation query for removing a component
reallyRemoveComponent = 이 컴포넌트를 삭제하면 관련된 모든  블록이 함께 삭제됩니다. 정말로 삭제하시겠습니까?

# Description:
recipientsParams = 수신자리스트

# Description: Text for button shape choice 'rectangular'
rectButtonShape = 직사각형

# Description:
rectangleComponentPallette = 사각형

# Description: Text for color choice 'Red'
redColor = 빨강

# Description:
regulationModeParams = 정규화모드

# Description:
relativeParams = 상대적인

# Description:
reloadWindow = 다시 열기

# Description: Caption for the wizard to name the opening Young Android project
remixedYoungAndroidProjectWizardCaption = 이 앱인벤터 프로젝트 이름 정하기

# Description: Label of the button for removing a screen
removeFormButton = 스크린 제거

# Description: Label of the button for rename
renameButton = 이름 바꾸기

# Description: Title for the rename component dialog
renameTitle = 컴포넌트 이름 바꾸기

# Description:
rendezvousServerParams = 랑데뷰서버

# Description: Error shown when a new name is a reserved name in Yail or Java code
reservedNameError = 다음과 같은 이름은 컴포넌트 이름으로 사용될 수 없습니다: CsvUtil, Double, Float, Integer, JavaCollection, JavaIterator, KawaEnvironment, Long, Short, SimpleForm, String, Pattern, YailList, YailNumberToString, YailRuntimeError, abstract, continue, for, new, switch, assert, default, goto, package, synchronized, boolean, do, if, private, this, break, double, implements, protected, throw, byte, else, import, public, throws, case, enum, instanceof, return, transient, catch, extends, int, short, try, char, final, interface, static, void, class, finally, long, strictfp, volatile, const, float, native, super, while

# Description: Reset all connections.
resetConnectionsMenuItem = 다시 연결하기

# Description:
responseCodeParams = 응답코드

# Description:
responseContentParams = 응답콘텐츠

# Description:
responseParams = 응답

# Description:
responseTypeParams = 응답타입

# Description: Text for Sizing choice 'responsive' -- size based on device type
responsiveSizing = 반응형

# Description:
resultParams = 결과

# Description: Text for text alignment choice 'right'
rightTextAlignment = 오른쪽

# Description:
rollParams = 롤각도

# Description: Text for button shape choice 'rounded'
roundedButtonShape = 둥근 모서리

# Description:
runStateParams = 작동상태

# Description:
rxDataLengthParams = rx데이터길이

# Description: Error shown when a new component type would be the same as a component instance name
sameAsComponentInstanceNameError = 컴포넌트의 이름은 컴포넌트 인스턴트와 같을 수 없습니다

# Description: Error shown when a new component name would be the same as a component type name
sameAsComponentTypeNameError = 컴포넌트 인스턴트 이름은 컴포넌트 유형과 같을 수 없습니다.

# Description: Text for font typeface choice 'sans serif '
sansSerifFontTypeface = 산 세리프

# Description: Label of the button for save as
saveAsButton = 다른 이름으로 저장

# Description: Name of Save as ... menuitem
saveAsMenuItem = 프로젝트 다른 이름으로 저장 ...

# Description: Title of save as dialog.
# 0=projectName
saveAsTitle = 다른 이름으로 저장 - {0}

# Description: Label of the button for save
saveButton = 저장

# Description: Error message reported when a source file couldn't be saved to the server.
saveError = 서버 오류: 파일을 저장할 수 없습니다. 나중에 다시 시도해주세요!

# Description: Error message reported when one or more file couldn't be saved to the server.
saveErrorMultipleFiles = 서버 오류: 하나 이상의 파일을 저장할 수 없습니다. 나중에 다시 시도해주세요!

# Description: Name of Save menuitem
saveMenuItem = 프로젝트 저장하기

# Description: Message reported when project was saved successfully.
# 0=saveTime
savedProject = {0} 에 저장된 프로젝트

# Description: Message that is shown to indicate that a saving RPC is going on
savingRpcMessage = 저장중 ...

# Description: A choice in ScalingChoicePropertyEditor
scaleProportionally = 비례 크기 조정

# Description: A choice in ScalingChoicePropertyEditor
scaleToFit = 화면에 크기 맞추기

# Description: Label of the button for switching screens
screensButton = 스크린 ...

# Description:
searchResultsParams = 검색결과

# Description:
secondsParams = 초

# Description:
secureParams = 보안

# Description: Label of the Text of seeing more of reportlist
seeMoreLink = 더 보기 ...

# Description:
seedParams = 시드

# Description:
selectionParams = 선택

# Description:
senderParams = 보내는사람

# Description: Message to display when sending an asset to the companion
# 0=assetPath
sendingAssetToCompanion = {0} 을 컴패니언으로 보내는 중 ...

# Description:
sensorModeParams = 센서모드

# Description:
sensorPortLetterParams = 센서포트문자

# Description: Text for screen orientation choice 'Sensor '
sensorScreenOrientation = 센서

# Description:
sensorTypeParams = 센서유형

# Description:
sensorValueParams = 센서값

# Description:
sensorsComponentPallette = 센서

# Description: Text for font typeface choice 'serif '
serifFontTypeface = 세리프

# Description: Error message if the server becomes completely unavailable.
serverUnavailable = 서버가 일시적으로 작동하지 않습니다. 나중에 다시 시도해주세요!

# Description:
serviceNameParams = 서비스이름

# Description:
sessionDead = 세션이 만료되었거나 App Inventor가 업그레이드되었습니다. 계속하려면 세션을 \"새로 고침\"해야합니다. 아래의 \"새로 고침\"버튼을 누르십시오.

# Description:
setAssetsLoadedMethodDescriptions = Declare that we have loaded our initial assets and other assets should come from the sdcard

# Description:
setAssetsLoadedMethods = 자원로딩설정하기

# Description:
setHmacSeedReturnCodeMethodDescriptions = Establish the secret seed for HOTP generation. Return the SHA1 of the provided seed, this will be used to contact the rendezvous server. Note: This code also starts the connection negotiation process if we are using WebRTC. This is a bit of a kludge...

# Description:
setHmacSeedReturnCodeMethods = HMAC시드반환코드설정하기

# Description: Error message reported when the settings couldn't be loaded from the server.
settingsLoadError = 서버 오류: 설정을 불러올 수 없습니다. 나중에 다시 시도해주세요!

# Description: Error message reported when the settings couldn't be saved to the server.
settingsSaveError = 서버 오류: 설정을 저장할 수 없습니다. 나중에 다시 시도해주세요!

# Description:
sharingComponentPallette = 공유

# Description: Show toast for a Toast_Short of time
shortToastLength = 짧게

# Description: Label of item for building a project and show barcode
showBarcodeMenuItem = 앱 (.apk 용 QR 코드 제공)

# Description: Label of item for building a project and show barcode
showBarcodeMenuItem2 = 구글 플레이 앱 ( .apk 용 QR코드 제공 )

# Description: Checkbox controlling whether to display invisible components in the designer.
showHiddenComponentsCheckbox = 뷰어에 숨겨진 컴포넌트 나타내기

# Description: Redisplay the Splash Screen
showSplashMenuItem = 스플래시 화면 보기

# Description:
showSurveySplashButtonLater = 설문 나중에 하기

# Description:
showSurveySplashButtonNever = 설문 절대 하지 않음

# Description:
showSurveySplashButtonNow = 지금 설문 참여하기

# Description:
showSurveySplashMessage = <h2> MIT App Inventor를 개선하고 사용자에 대해 더 자세히 알 수 있도록 간단한 자발적 설문 조사를 작성하십시오. </ h2>

# Description: Text on Toggle Warning Button
showWarnings = 경고 보기

# Description:
shutdownMethodDescriptions = 정말 앱에서 나가기

# Description:
shutdownMethods = 셧다운

# Description: Label of the link for signing out
signOutLink = 로그아웃

# Description:
simpleStepsParams = 단순걸음

# Description: Text for screen animation choice 'SlideHorizontal '
slideHorizontalScreenAnimation = 수평슬라이드

# Description: Text for screen animation choice 'SlideVertical '
slideVerticalScreenAnimation = 수직슬라이드

# Description:
sliderComponentPallette = 슬라이더

# Description:
socialComponentPallette = 소셜

# Description:
soundComponentPallette = 소리

# Description:
soundParams = 소리

# Description:
soundRecorderComponentPallette = 녹음기

# Description:
sourceParams = 소스

# Description: Caption for source structure box.
sourceStructureBoxCaption = 컴포넌트

# Description:
speechRecognizerComponentPallette = 음성인식

# Description:
speedParams = 속도

# Description:
spinnerComponentPallette = 스피너

# Description:
startHTTPDMethodDescriptions = Start the internal AppInvHTTPD to listen for incoming forms. FOR REPL USE ONLY!

# Description:
startHTTPDMethods = 시작HTTPD

# Description:
startParams = 시작

# Description:
startXParams = 시작X

# Description:
startYParams = 시작Y

# Description:
startingConnectionDialog = 0 Starting Up

# Description:
statusParams = 상태

# Description:
storageComponentPallette = 저장소

# Description: Text for accelerometer sensitivity choice 'strong'
strongAccelerometerSensitivity = 강한

# Description: Caption for studio list box.
studioListBoxCaption = 내 스튜디오

# Description: Label of the button for switching language
switchLanguageButton = 언어

# Description: Label of the button for switching to the blocks editor
# Description: Label of the button for admins to switch to the debug panel without an explicit error
# Description: Label of the button for switching to the form editor
# Description: Symbol X
symbolX = X

# Description: Name of Debugging tab
tabNameDebugging = (디버깅)

# Description: Name of Design tab
tabNameDesign = 디자인

# Description: Name of Gallery tab
tabNameGallery = 갤러리

# Description: Name of moderation tab
tabNameModeration = 조정

# Description: Name of My Projects tab
tabNameProjects = 내 프로젝트

# Description:
tableArrangementComponentPallette = 표형식배치

# Description:
tableIdParams = 테이블ID

# Description:
tachoCountParams = 타코카운트

# Description:
tachoCountsParams = 타코카운트

# Description:
tachoLimitParams = 타코제한

# Description:
tagFromWebDBParams = WebDB태그

# Description:
tagParams = 태그

# Description:
targetParams = 대상

# Description: Caption for template dialog menu item.
templateUploadNewUrlCaption = 새 템플릿 라이브러리 URL 추가

# Description: Caption for template upload wizard.
templateUploadWizardCaption = 템플릿으로 프로젝트 생성

# Description: Label of the link for Terms
termsLink = 용어

# Description: None
textAnyComponentLabel = 모든

# Description:
textBoxComponentPallette = 텍스트박스

# Description:
textParams = 텍스트

# Description: Default value for Text property
# 0=componentName
textPropertyValue = {0}의 텍스트

# Description: Text messages are always received, and a notification is shown if the App is in the background.
textReceivingChoiceAlways = 항상

# Description: Text Messages are received only when the App is in the foreground.
textReceivingChoiceForeground = 전경

# Description: Text Messages are not received at any time.
textReceivingChoiceOff = 꺼짐

# Description:
textToSpeechComponentPallette = 음성변환

# Description:
textToTranslateParams = 문자번역

# Description:
textingComponentPallette = 문자메시지

# Description:
thumbPositionParams = 섬네일위치

# Description:
timePickerComponentPallette = 시간선택

# Description:
timelineParams = 타임라인

# Description:
timestampParams = 시간도장

# Description:
tinyDBComponentPallette = 타이니DB

# Description:
tinyWebDBComponentPallette = 타이니웹DB

# Description:
titleParams = 제목

# Description: Title of the Previous Actions Popup of reportlist
titleSeeAllActionsPopup = 신고된 이전 행동

# Description: Title for App Inventor
titleYoungAndroid = MIT 앱 인벤터

# Description: Label for the Toggle Tutorial Button
toggleTutorialButton = 튜토리얼 토글하기

# Description:
touchedAnySpriteParams = 터치된모든스프라이트

# Description:
touchedSpriteParams = 터치된스프라이트

# Description:
translationParams = 번역

# Description: Name of Troubleshooting link
troubleshootingMenuItem = 문제 해결

# Description:
turnRatioParams = 회전비율

# Description: Name of Tutorials link
tutorialsMenuItem = 튜토리얼

# Description:
twitterComponentPallette = 트위터

# Description:
typeParams = 유형

# Description: Compilation error, with error message.
# 0=errorMesssage
unableToCompile = 이 프로젝트를 컴파일 할 수 없습니다. <br /> 컴파일러 오류 출력은 <br /> {0} 입니다.

# Description: Alert message displayed when upgrade fails
# 0=details
unexpectedProblem = 이 프로젝트를 로딩하는 동안 문제가 발생했습니다. {0}

# Description:
uninitializedComponentPallette = 초기화되지않은

# Description:
# 0=maptype
unknownMapTypeException = 예상치 못한 맵 유형: {0}

# Description: Text for screen orientation choice 'Unspecified '
unspecifiedScreenOrientation = 정해지지 않은

# Description: Text on "Update Gallery App" button
updateGalleryAppButton = 갤러리 앱 업데이트

# Description: Message providing details about a project upgrade involving a Logger component
# 0=name
# Description: Error message displayed when a server error occurs during upload keystore
upgradeDetailLoggerReplacedWithNotifier = {0} 의 로거 구성 요소가 알리미 구성 요소로 변경되었습니다 .appengine.uploadKeystoreError = 서버 오류 : 키 저장소 파일을 업로드 할 수 없습니다.

# Description: Label of the button for import keystore
uploadKeystoreMenuItem = 키 저장소 가져오기

# Description:
uriParams = uri

# Description:
urlImportWizardCaption = URL 에서 미디어 가져오기

# Description:
urlParams = url

# Description: Message providing details about starting a USB connection.
usbMenuItem = USB

# Description:
useBrakeParams = 브레이크사용

# Description: Used by the MockFirebaseDB to display default checkbox
useDefault = 기본값 사용

# Description:
useFrontDeprecated = The useFront property has been removed from your Camera Component

# Description: Label for the user id input text box
userIdLabel = 사용자 아이디 또는 이메일 (대소문자 구분):

# Description:
userInterfaceComponentPallette = 사용자 인터페이스

# Description:
userParams = 사용자

# Description: Caption for user profile box.
userProfileBoxCaption = 사용자 프로필

# Description: Text for screen orientation choice 'User '
userScreenOrientation = 사용자

# Description:
uuidParams = uuid

# Description:
valueFromWebDBParams = WebDB값

# Description:
valueIfTagNotThereParams = 찾는태그가없을경우

# Description:
# 0=text, 1=min, 2=max
valueNotInRange = 값 {0}이 기대 범위 [{1}, {2}]을 벗어났습니다

# Description:
valueParams = 값

# Description:
valueToAddParams = 추가할값

# Description:
valueToStoreParams = 저장할값

# Description:
valuesParams = 값

# Description: Text for vertical alignment choice 'Bottom'
verticalAlignmentChoiceBottom = 아래

# Description: Text for vertical alignment choice 'Center'
verticalAlignmentChoiceCenter = 가운데

# Description: Text for vertical alignment choice 'Top'
verticalAlignmentChoiceTop = 위

# Description:
verticalArrangementComponentPallette = 수직배치

# Description:
verticalScrollArrangementComponentPallette = 스크롤가능수직배치

# Description: Alert message displayed when upgrading a project without version numbers
veryOldProject = 이 프로젝트는 이전에 배포된 버전의 앱 인벤터로 저장되었습니다. 이 프로젝트를 불러오지만, 호환성 문제가 발생할 수 있습니다.

# Description:
videoPlayerComponentPallette = 비디오플레이어

# Description: Caption for a viewer box.
viewerBoxCaption = 뷰어

# Description:
volumeParams = 음량

# Description:
votingComponentPallette = 투표

# Description:
waitingForBarcode = 바코드를 기다립니다

# Description:
walkStepsParams = 걸음수

# Description:
warningDialogTitle = 경고!

# Description: Text for accelerometer sensitivity choice 'weak'
weakAccelerometerSensitivity = 약함

# Description:
webComponentPallette = 웹

# Description:
webViewerComponentPallette = 웹뷰어

# Description:
weeksParams = 주

# Description: Text for color choice 'White'
whiteColor = 흰색

# Description: Error shown when user types space into project name.
whitespaceProjectNameError = 프로젝트 이름은 빈칸을 사용할 수 없습니다

# Description:
widthParams = 너비

# Description: Caption for the width property
widthPropertyCaption = 너비

# Description:
wildcardParams = 와일드카드

# Description: Error message displayed when zero or more than one projects are selected
wrongNumberProjectSelectedForPublishOrUpdate = Please select only one project to publish or update

# Description: Error message displayed when no or many projects are selected
wrongNumberProjectsSelected = 반드시 한 프로젝트는 선택되어야 함

# Description:
x1Params = x1

# Description:
x2Params = x2

# Description:
xAccelParams = x가속도

# Description:
xAngularVelocityParams = x각속도

# Description:
xParams = x

# Description:
xmlTextDecodeMethods = XML텍스트디코딩

# Description:
xmlTextParams = xml텍스트

# Description:
xvelParams = x속도

# Description:
y1Params = y1

# Description:
y2Params = y2

# Description:
yAccelParams = y가속도

# Description:
yAngularVelocityParams = y각속도

# Description:
yParams = y

# Description: Error message reported when yail generation fails for a screen
# 0=formName, 1=description
yailGenerationError = 스크린 {0} Yail 만들기 오류: {1}. 수정후 다시 패키징을 시도해주세요.

# Description:
yandexTranslateComponentPallette = 얀덱스번역

# Description:
yearParams = 년

# Description:
yearsParams = 년

# Description: Text for color choice 'Yellow'
yellowColor = 노랑

# Description:
yvelParams = y속도

# Description:
zAccelParams = z가속도

# Description:
zAngularVelocityParams = z각속도

# Description:
zoomParams = zoom

# Description: Text for screen animation choice 'Zoom '
zoomScreenAnimation = 줌

